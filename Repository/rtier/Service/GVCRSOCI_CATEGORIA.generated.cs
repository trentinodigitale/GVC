//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCRSOCI_CATEGORIA
	/// </summary>
	public partial class GVCRSOCI_CATEGORIA
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_CATEGORIA;
		private System.Int32 _vALMAX;
		private System.Boolean _vALMAXNull = true;
		private System.Int32 _vALMIN;
		private System.Boolean _vALMINNull = true;
		private System.String _nOTE;
		private System.Boolean _nOTENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCRSOCI_CATEGORIA(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_CATEGORIA
		{
			get
			{
				return _iDOBJ_CATEGORIA;
			}
			set
			{
				_iDOBJ_CATEGORIA = value;
			}
		}

		/// <summary>
		/// Maggiore di
		/// </summary>
		public System.Int32 VALMAX
		{
			get
			{
				if(IsVALMAXNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMAX;
			}
			set
			{
				_vALMAXNull = false;
				_vALMAX = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMAXNull
		{
			get
			{
				return _vALMAXNull;
			}
			set
			{
				_vALMAXNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 VALMAXSafe
		{
			get
			{
				if (IsVALMAXNull)
					return -1;
				return VALMAX;
			}
		}

		/// <summary>
		/// Minore di
		/// </summary>
		public System.Int32 VALMIN
		{
			get
			{
				if(IsVALMINNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMIN;
			}
			set
			{
				_vALMINNull = false;
				_vALMIN = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMINNull
		{
			get
			{
				return _vALMINNull;
			}
			set
			{
				_vALMINNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 VALMINSafe
		{
			get
			{
				if (IsVALMINNull)
					return -1;
				return VALMIN;
			}
		}

		/// <summary>
		/// Note
		/// </summary>
		public System.String NOTE
		{
			get
			{
				if(IsNOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOTE;
			}
			set
			{
				_nOTENull = false;
				_nOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOTENull
		{
			get
			{
				return _nOTENull;
			}
			set
			{
				_nOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOTESafe
		{
			get
			{
				if (IsNOTENull)
					return System.String.Empty;
				return NOTE;
			}
		}

	}
}