//
//Generated by gvc at 06/02/2009 10.48.29
//

using System;
using System.Data;
using System.Text;
using OeF.Configurations;


namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Data Access Layer for the object GVCTSOGGETTI
	/// </summary>
	public partial class GVCTSOGGETTICollection
	{
        public GVCTSOGGETTI[] GetBySearch(GVCTSOGGETTI toSearch)
        {
            StringBuilder sb = new StringBuilder();

            if (toSearch != null)
            {
                #region Search parameter
                string condition = " AND ";
                if (toSearch.IDOBJ_TIPO_SOGGETTO == null || toSearch.IDOBJ_TIPO_SOGGETTO < 0)
                {
                    condition = " OR ";
                }

                if (toSearch.IDOBJ > 0)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_EQUALS_NUMBER,
                                            GVCTSOGGETTICollection.IDOBJColumnName,
                                            toSearch.IDOBJ));
                }

                #region nome
                if (!toSearch.IsNOMENull)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_LIKE_VALUE,
                                            GVCTSOGGETTICollection.NOMEColumnName,
                                            toSearch.NOME));
                }
                #endregion

                #region cognome
                if (!toSearch.IsCOGNOMENull)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_LIKE_VALUE,
                                            GVCTSOGGETTICollection.COGNOMEColumnName,
                                            toSearch.COGNOME));
                }
                #endregion

                #region codice fiscale
                if (!toSearch.IsCODICE_FISCALENull && toSearch.CODICE_FISCALE != null)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_LIKE_VALUE,
                                            GVCTSOGGETTICollection.CODICE_FISCALEColumnName,
                                            toSearch.CODICE_FISCALE));
                }
                #endregion

                #region denominazione
                if (!toSearch.IsDENOMINAZIONENull)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_LIKE_VALUE,
                                            GVCTSOGGETTICollection.DENOMINAZIONEColumnName,
                                            toSearch.DENOMINAZIONE));
                }
                #endregion

                #region partita iva
                if (!toSearch.IsPARTITA_IVANull && toSearch.PARTITA_IVA != null)
                {
                    if (sb.Length > 0)
                        sb.Append(condition);
                    sb.Append(String.Format(Queries.Oracle.Formats.FIELD_LIKE_VALUE,
                                            GVCTSOGGETTICollection.PARTITA_IVAColumnName,
                                            toSearch.PARTITA_IVA));
                }
                #endregion
               

                #endregion Search parameter

                if (sb.Length > 0)
                    return GetAsArray(sb.ToString(), GVCTSOGGETTICollection.IDOBJColumnName);
            }

            return null;
        }

        public GVCTSOGGETTI[] GetBySearchParameters(string whereSQL)
        {
            return GetAsArray(whereSQL, string.Empty);
        }

        public GVCTSOGGETTI[] GetByCodiceFiscale(string codiceFiscale)
        {
            if (codiceFiscale.Equals(string.Empty))
            {
                return null;
            }
            else
            {
                string where = String.Format(Queries.Oracle.Formats.FIELD_EQUALS_STRING_LOWER,
                                                GVCTSOGGETTICollection.CODICE_FISCALEColumnName,
                                                codiceFiscale);
                return GetAsArray(where, GVCTSOGGETTICollection.IDOBJColumnName);
            }
        }
    }
}
