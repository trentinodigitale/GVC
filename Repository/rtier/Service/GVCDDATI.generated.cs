//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCDDATI
	/// </summary>
	public partial class GVCDDATI
	{
		private System.Int32 _iDOBJ;
		private System.Double _vALMINQUOTA;
		private System.Boolean _vALMINQUOTANull = true;
		private System.Double _vALMAXQUOTA;
		private System.Boolean _vALMAXQUOTANull = true;
		private System.Double _vALMINAZIONE;
		private System.Boolean _vALMINAZIONENull = true;
		private System.Double _vALMAXAZIONE;
		private System.Boolean _vALMAXAZIONENull = true;
		private System.Double _pERCENTUALE_CNP;
		private System.Boolean _pERCENTUALE_CNPNull = true;
		private System.Double _pERCENTUALE_IVA;
		private System.Boolean _pERCENTUALE_IVANull = true;
		private System.Double _pERCENTUALE_PAT;
		private System.Boolean _pERCENTUALE_PATNull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCDDATI(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Definisce il valore minimo di una quota
		/// </summary>
		public System.Double VALMINQUOTA
		{
			get
			{
				if(IsVALMINQUOTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMINQUOTA;
			}
			set
			{
				_vALMINQUOTANull = false;
				_vALMINQUOTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMINQUOTANull
		{
			get
			{
				return _vALMINQUOTANull;
			}
			set
			{
				_vALMINQUOTANull = value;
			}
		}

		/// <summary>
		/// Definisce il valore massimo di una quota
		/// </summary>
		public System.Double VALMAXQUOTA
		{
			get
			{
				if(IsVALMAXQUOTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMAXQUOTA;
			}
			set
			{
				_vALMAXQUOTANull = false;
				_vALMAXQUOTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMAXQUOTANull
		{
			get
			{
				return _vALMAXQUOTANull;
			}
			set
			{
				_vALMAXQUOTANull = value;
			}
		}

		/// <summary>
		/// Definisce il valore minimo di una azione
		/// </summary>
		public System.Double VALMINAZIONE
		{
			get
			{
				if(IsVALMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMINAZIONE;
			}
			set
			{
				_vALMINAZIONENull = false;
				_vALMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMINAZIONENull
		{
			get
			{
				return _vALMINAZIONENull;
			}
			set
			{
				_vALMINAZIONENull = value;
			}
		}

		/// <summary>
		/// Definisce il valore massimo di una azione
		/// </summary>
		public System.Double VALMAXAZIONE
		{
			get
			{
				if(IsVALMAXAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALMAXAZIONE;
			}
			set
			{
				_vALMAXAZIONENull = false;
				_vALMAXAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALMAXAZIONENull
		{
			get
			{
				return _vALMAXAZIONENull;
			}
			set
			{
				_vALMAXAZIONENull = value;
			}
		}

		/// <summary>
		/// Percentuale CNP
		/// </summary>
		public System.Double PERCENTUALE_CNP
		{
			get
			{
				if(IsPERCENTUALE_CNPNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERCENTUALE_CNP;
			}
			set
			{
				_pERCENTUALE_CNPNull = false;
				_pERCENTUALE_CNP = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERCENTUALE_CNPNull
		{
			get
			{
				return _pERCENTUALE_CNPNull;
			}
			set
			{
				_pERCENTUALE_CNPNull = value;
			}
		}

		/// <summary>
		/// Percentuale IVA
		/// </summary>
		public System.Double PERCENTUALE_IVA
		{
			get
			{
				if(IsPERCENTUALE_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERCENTUALE_IVA;
			}
			set
			{
				_pERCENTUALE_IVANull = false;
				_pERCENTUALE_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERCENTUALE_IVANull
		{
			get
			{
				return _pERCENTUALE_IVANull;
			}
			set
			{
				_pERCENTUALE_IVANull = value;
			}
		}

		/// <summary>
		/// Percentuale contributo PAT
		/// </summary>
		public System.Double PERCENTUALE_PAT
		{
			get
			{
				if(IsPERCENTUALE_PATNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERCENTUALE_PAT;
			}
			set
			{
				_pERCENTUALE_PATNull = false;
				_pERCENTUALE_PAT = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERCENTUALE_PATNull
		{
			get
			{
				return _pERCENTUALE_PATNull;
			}
			set
			{
				_pERCENTUALE_PATNull = value;
			}
		}

	}
}