//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTINCARICHI
	/// </summary>
	public partial class GVCTINCARICHI
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_REVISIONE;
		private System.String _nUMERO_DELIBERA_INCARICO;
		private System.Boolean _nUMERO_DELIBERA_INCARICONull = true;
		private System.DateTime _dATA_DELIBERA_INCARICO;
		private System.Boolean _dATA_DELIBERA_INCARICONull = true;
		private System.String _nUMERO_DETERMINA_INCARICO;
		private System.Boolean _nUMERO_DETERMINA_INCARICONull = true;
		private System.DateTime _dATA_DETERMINA_INCARICO;
		private System.Boolean _dATA_DETERMINA_INCARICONull = true;
		private System.DateTime _dATA_SCADENZA_TEORICA;
		private System.Boolean _dATA_SCADENZA_TEORICANull = true;
		private System.Double _iMPEGNO;
		private System.Boolean _iMPEGNONull = true;
		private System.String _nUMERO_DELIBERA_RICUSAZIONE;
		private System.Boolean _nUMERO_DELIBERA_RICUSAZIONENull = true;
		private System.DateTime _dATA_DELIBERA_RICUSAZIONE;
		private System.Boolean _dATA_DELIBERA_RICUSAZIONENull = true;
		private System.String _nUMERO_DETERMINA_RICUSAZIONE;
		private System.Boolean _nUMERO_DETERMINA_RICUSAZIONENull = true;
		private System.DateTime _dATA_DETERMINA_RICUSAZIONE;
		private System.Boolean _dATA_DETERMINA_RICUSAZIONENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTINCARICHI(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_REVISIONE
		{
			get
			{
				return _iDOBJ_REVISIONE;
			}
			set
			{
				_iDOBJ_REVISIONE = value;
			}
		}

		/// <summary>
		/// Numero delibera commissione incarico
		/// </summary>
		public System.String NUMERO_DELIBERA_INCARICO
		{
			get
			{
				if(IsNUMERO_DELIBERA_INCARICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_INCARICO;
			}
			set
			{
				_nUMERO_DELIBERA_INCARICONull = false;
				_nUMERO_DELIBERA_INCARICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_INCARICONull
		{
			get
			{
				return _nUMERO_DELIBERA_INCARICONull;
			}
			set
			{
				_nUMERO_DELIBERA_INCARICONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_INCARICOSafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_INCARICONull)
					return System.String.Empty;
				return NUMERO_DELIBERA_INCARICO;
			}
		}

		/// <summary>
		/// Data delibera commissione incarico
		/// </summary>
		public System.DateTime DATA_DELIBERA_INCARICO
		{
			get
			{
				if(IsDATA_DELIBERA_INCARICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_INCARICO;
			}
			set
			{
				_dATA_DELIBERA_INCARICONull = false;
				_dATA_DELIBERA_INCARICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_INCARICONull
		{
			get
			{
				return _dATA_DELIBERA_INCARICONull;
			}
			set
			{
				_dATA_DELIBERA_INCARICONull = value;
			}
		}

		/// <summary>
		/// Numero determina incarico
		/// </summary>
		public System.String NUMERO_DETERMINA_INCARICO
		{
			get
			{
				if(IsNUMERO_DETERMINA_INCARICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA_INCARICO;
			}
			set
			{
				_nUMERO_DETERMINA_INCARICONull = false;
				_nUMERO_DETERMINA_INCARICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINA_INCARICONull
		{
			get
			{
				return _nUMERO_DETERMINA_INCARICONull;
			}
			set
			{
				_nUMERO_DETERMINA_INCARICONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINA_INCARICOSafe
		{
			get
			{
				if (IsNUMERO_DETERMINA_INCARICONull)
					return System.String.Empty;
				return NUMERO_DETERMINA_INCARICO;
			}
		}

		/// <summary>
		/// Data determina incarico
		/// </summary>
		public System.DateTime DATA_DETERMINA_INCARICO
		{
			get
			{
				if(IsDATA_DETERMINA_INCARICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA_INCARICO;
			}
			set
			{
				_dATA_DETERMINA_INCARICONull = false;
				_dATA_DETERMINA_INCARICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINA_INCARICONull
		{
			get
			{
				return _dATA_DETERMINA_INCARICONull;
			}
			set
			{
				_dATA_DETERMINA_INCARICONull = value;
			}
		}

		/// <summary>
		/// Data scadenza teorica revisione
		/// </summary>
		public System.DateTime DATA_SCADENZA_TEORICA
		{
			get
			{
				if(IsDATA_SCADENZA_TEORICANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_SCADENZA_TEORICA;
			}
			set
			{
				_dATA_SCADENZA_TEORICANull = false;
				_dATA_SCADENZA_TEORICA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_SCADENZA_TEORICANull
		{
			get
			{
				return _dATA_SCADENZA_TEORICANull;
			}
			set
			{
				_dATA_SCADENZA_TEORICANull = value;
			}
		}

		/// <summary>
		/// Importo impegno
		/// </summary>
		public System.Double IMPEGNO
		{
			get
			{
				if(IsIMPEGNONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iMPEGNO;
			}
			set
			{
				_iMPEGNONull = false;
				_iMPEGNO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIMPEGNONull
		{
			get
			{
				return _iMPEGNONull;
			}
			set
			{
				_iMPEGNONull = value;
			}
		}

		/// <summary>
		/// Numero delibera ricusazione
		/// </summary>
		public System.String NUMERO_DELIBERA_RICUSAZIONE
		{
			get
			{
				if(IsNUMERO_DELIBERA_RICUSAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_RICUSAZIONE;
			}
			set
			{
				_nUMERO_DELIBERA_RICUSAZIONENull = false;
				_nUMERO_DELIBERA_RICUSAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_RICUSAZIONENull
		{
			get
			{
				return _nUMERO_DELIBERA_RICUSAZIONENull;
			}
			set
			{
				_nUMERO_DELIBERA_RICUSAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_RICUSAZIONESafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_RICUSAZIONENull)
					return System.String.Empty;
				return NUMERO_DELIBERA_RICUSAZIONE;
			}
		}

		/// <summary>
		/// Data delibera ricusazione
		/// </summary>
		public System.DateTime DATA_DELIBERA_RICUSAZIONE
		{
			get
			{
				if(IsDATA_DELIBERA_RICUSAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_RICUSAZIONE;
			}
			set
			{
				_dATA_DELIBERA_RICUSAZIONENull = false;
				_dATA_DELIBERA_RICUSAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_RICUSAZIONENull
		{
			get
			{
				return _dATA_DELIBERA_RICUSAZIONENull;
			}
			set
			{
				_dATA_DELIBERA_RICUSAZIONENull = value;
			}
		}

		/// <summary>
		/// Numero determina ricusazione
		/// </summary>
		public System.String NUMERO_DETERMINA_RICUSAZIONE
		{
			get
			{
				if(IsNUMERO_DETERMINA_RICUSAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA_RICUSAZIONE;
			}
			set
			{
				_nUMERO_DETERMINA_RICUSAZIONENull = false;
				_nUMERO_DETERMINA_RICUSAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINA_RICUSAZIONENull
		{
			get
			{
				return _nUMERO_DETERMINA_RICUSAZIONENull;
			}
			set
			{
				_nUMERO_DETERMINA_RICUSAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINA_RICUSAZIONESafe
		{
			get
			{
				if (IsNUMERO_DETERMINA_RICUSAZIONENull)
					return System.String.Empty;
				return NUMERO_DETERMINA_RICUSAZIONE;
			}
		}

		/// <summary>
		/// Data determina ricusazione
		/// </summary>
		public System.DateTime DATA_DETERMINA_RICUSAZIONE
		{
			get
			{
				if(IsDATA_DETERMINA_RICUSAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA_RICUSAZIONE;
			}
			set
			{
				_dATA_DETERMINA_RICUSAZIONENull = false;
				_dATA_DETERMINA_RICUSAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINA_RICUSAZIONENull
		{
			get
			{
				return _dATA_DETERMINA_RICUSAZIONENull;
			}
			set
			{
				_dATA_DETERMINA_RICUSAZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

	}
}