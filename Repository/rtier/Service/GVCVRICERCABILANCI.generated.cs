//
//Generated by DELTADATOR\GS0445 at 30/07/2009 11.47.55
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCABILANCI
	/// </summary>
	public partial class GVCVRICERCABILANCI
	{
		private System.String _s_DENOMINAZIONE;
		private System.Boolean _s_DENOMINAZIONENull = true;
		private System.Int32 _s_IDOBJ;
		private System.Int32 _r_IDOBJ;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_IDOBJ_STATO;
		private System.Boolean _r_IDOBJ_STATONull = true;
		private System.Int32 _r_ESENTE_VERSAMENTO_UTILI;
		private System.Boolean _r_ESENTE_VERSAMENTO_UTILINull = true;
		private System.Int32 _bIL_IDOBJ;
		private System.Boolean _bIL_IDOBJNull = true;
		private System.Int32 _bIL_ANNO_RIFERIMENTO;
		private System.Boolean _bIL_ANNO_RIFERIMENTONull = true;
		private System.Int32 _bIL_IDOBJ_TIPO_BILANCIO;
		private System.Boolean _bIL_IDOBJ_TIPO_BILANCIONull = true;
		private System.DateTime _bIL_DATA_RIFERIMENTO;
		private System.Boolean _bIL_DATA_RIFERIMENTONull = true;
		private System.DateTime _bIL_DATA_DEPOSITO_RI;
		private System.Boolean _bIL_DATA_DEPOSITO_RINull = true;
		private System.DateTime _bIL_DATA_SEGNALAZIONE;
		private System.Boolean _bIL_DATA_SEGNALAZIONENull = true;
		private System.Int32 _bIL_REQUISITO_PREVALENZA;
		private System.Boolean _bIL_REQUISITO_PREVALENZANull = true;
		private System.Double _bIL_IMPORTO_PERCENTO_UTILI;
		private System.Boolean _bIL_IMPORTO_PERCENTO_UTILINull = true;
		private System.Double _bIL_IMPORTO_PATRIMONIO;
		private System.Boolean _bIL_IMPORTO_PATRIMONIONull = true;
		private System.Int32 _bIL_VERIFICA_PAGAMENTO;
		private System.Boolean _bIL_VERIFICA_PAGAMENTONull = true;
		private System.String _aDESIONE_ASSOCIAZIONE;
		private System.Boolean _aDESIONE_ASSOCIAZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCABILANCI(){}

		/// <summary>
		/// Value of field S_DENOMINAZIONE
		/// </summary>
		public System.String S_DENOMINAZIONE
		{
			get
			{
				if(IsS_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_DENOMINAZIONE;
			}
			set
			{
				_s_DENOMINAZIONENull = false;
				_s_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_DENOMINAZIONENull
		{
			get
			{
				return _s_DENOMINAZIONENull;
			}
			set
			{
				_s_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_DENOMINAZIONESafe
		{
			get
			{
				if (IsS_DENOMINAZIONENull)
					return System.String.Empty;
				return S_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field S_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_IDOBJ
		{
			get
			{
				return _s_IDOBJ;
			}
			set
			{
				_s_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_IDOBJ
		{
			get
			{
				return _r_IDOBJ;
			}
			set
			{
				_r_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_STATO
		/// </summary>
		public System.Int32 R_IDOBJ_STATO
		{
			get
			{
				if(IsR_IDOBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_STATO;
			}
			set
			{
				_r_IDOBJ_STATONull = false;
				_r_IDOBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_STATONull
		{
			get
			{
				return _r_IDOBJ_STATONull;
			}
			set
			{
				_r_IDOBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_STATOSafe
		{
			get
			{
				if (IsR_IDOBJ_STATONull)
					return -1;
				return R_IDOBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field R_ESENTE_VERSAMENTO_UTILI
		/// </summary>
		public System.Int32 R_ESENTE_VERSAMENTO_UTILI
		{
			get
			{
				if(IsR_ESENTE_VERSAMENTO_UTILINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ESENTE_VERSAMENTO_UTILI;
			}
			set
			{
				_r_ESENTE_VERSAMENTO_UTILINull = false;
				_r_ESENTE_VERSAMENTO_UTILI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ESENTE_VERSAMENTO_UTILINull
		{
			get
			{
				return _r_ESENTE_VERSAMENTO_UTILINull;
			}
			set
			{
				_r_ESENTE_VERSAMENTO_UTILINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ESENTE_VERSAMENTO_UTILISafe
		{
			get
			{
				if (IsR_ESENTE_VERSAMENTO_UTILINull)
					return -1;
				return R_ESENTE_VERSAMENTO_UTILI;
			}
		}

		/// <summary>
		/// Value of field BIL_IDOBJ
		/// </summary>
		public System.Int32 BIL_IDOBJ
		{
			get
			{
				if(IsBIL_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_IDOBJ;
			}
			set
			{
				_bIL_IDOBJNull = false;
				_bIL_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_IDOBJNull
		{
			get
			{
				return _bIL_IDOBJNull;
			}
			set
			{
				_bIL_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 BIL_IDOBJSafe
		{
			get
			{
				if (IsBIL_IDOBJNull)
					return -1;
				return BIL_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field BIL_ANNO_RIFERIMENTO
		/// </summary>
		public System.Int32 BIL_ANNO_RIFERIMENTO
		{
			get
			{
				if(IsBIL_ANNO_RIFERIMENTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_ANNO_RIFERIMENTO;
			}
			set
			{
				_bIL_ANNO_RIFERIMENTONull = false;
				_bIL_ANNO_RIFERIMENTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_ANNO_RIFERIMENTONull
		{
			get
			{
				return _bIL_ANNO_RIFERIMENTONull;
			}
			set
			{
				_bIL_ANNO_RIFERIMENTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 BIL_ANNO_RIFERIMENTOSafe
		{
			get
			{
				if (IsBIL_ANNO_RIFERIMENTONull)
					return -1;
				return BIL_ANNO_RIFERIMENTO;
			}
		}

		/// <summary>
		/// Value of field BIL_IDOBJ_TIPO_BILANCIO
		/// </summary>
		public System.Int32 BIL_IDOBJ_TIPO_BILANCIO
		{
			get
			{
				if(IsBIL_IDOBJ_TIPO_BILANCIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_IDOBJ_TIPO_BILANCIO;
			}
			set
			{
				_bIL_IDOBJ_TIPO_BILANCIONull = false;
				_bIL_IDOBJ_TIPO_BILANCIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_IDOBJ_TIPO_BILANCIONull
		{
			get
			{
				return _bIL_IDOBJ_TIPO_BILANCIONull;
			}
			set
			{
				_bIL_IDOBJ_TIPO_BILANCIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 BIL_IDOBJ_TIPO_BILANCIOSafe
		{
			get
			{
				if (IsBIL_IDOBJ_TIPO_BILANCIONull)
					return -1;
				return BIL_IDOBJ_TIPO_BILANCIO;
			}
		}

		/// <summary>
		/// Value of field BIL_DATA_RIFERIMENTO
		/// </summary>
		public System.DateTime BIL_DATA_RIFERIMENTO
		{
			get
			{
				if(IsBIL_DATA_RIFERIMENTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_DATA_RIFERIMENTO;
			}
			set
			{
				_bIL_DATA_RIFERIMENTONull = false;
				_bIL_DATA_RIFERIMENTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_DATA_RIFERIMENTONull
		{
			get
			{
				return _bIL_DATA_RIFERIMENTONull;
			}
			set
			{
				_bIL_DATA_RIFERIMENTONull = value;
			}
		}

		/// <summary>
		/// Value of field BIL_DATA_DEPOSITO_RI
		/// </summary>
		public System.DateTime BIL_DATA_DEPOSITO_RI
		{
			get
			{
				if(IsBIL_DATA_DEPOSITO_RINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_DATA_DEPOSITO_RI;
			}
			set
			{
				_bIL_DATA_DEPOSITO_RINull = false;
				_bIL_DATA_DEPOSITO_RI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_DATA_DEPOSITO_RINull
		{
			get
			{
				return _bIL_DATA_DEPOSITO_RINull;
			}
			set
			{
				_bIL_DATA_DEPOSITO_RINull = value;
			}
		}

		/// <summary>
		/// Value of field BIL_DATA_SEGNALAZIONE
		/// </summary>
		public System.DateTime BIL_DATA_SEGNALAZIONE
		{
			get
			{
				if(IsBIL_DATA_SEGNALAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_DATA_SEGNALAZIONE;
			}
			set
			{
				_bIL_DATA_SEGNALAZIONENull = false;
				_bIL_DATA_SEGNALAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_DATA_SEGNALAZIONENull
		{
			get
			{
				return _bIL_DATA_SEGNALAZIONENull;
			}
			set
			{
				_bIL_DATA_SEGNALAZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field BIL_REQUISITO_PREVALENZA
		/// </summary>
		public System.Int32 BIL_REQUISITO_PREVALENZA
		{
			get
			{
				if(IsBIL_REQUISITO_PREVALENZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_REQUISITO_PREVALENZA;
			}
			set
			{
				_bIL_REQUISITO_PREVALENZANull = false;
				_bIL_REQUISITO_PREVALENZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_REQUISITO_PREVALENZANull
		{
			get
			{
				return _bIL_REQUISITO_PREVALENZANull;
			}
			set
			{
				_bIL_REQUISITO_PREVALENZANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 BIL_REQUISITO_PREVALENZASafe
		{
			get
			{
				if (IsBIL_REQUISITO_PREVALENZANull)
					return -1;
				return BIL_REQUISITO_PREVALENZA;
			}
		}

		/// <summary>
		/// Value of field BIL_IMPORTO_PERCENTO_UTILI
		/// </summary>
		public System.Double BIL_IMPORTO_PERCENTO_UTILI
		{
			get
			{
				if(IsBIL_IMPORTO_PERCENTO_UTILINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_IMPORTO_PERCENTO_UTILI;
			}
			set
			{
				_bIL_IMPORTO_PERCENTO_UTILINull = false;
				_bIL_IMPORTO_PERCENTO_UTILI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_IMPORTO_PERCENTO_UTILINull
		{
			get
			{
				return _bIL_IMPORTO_PERCENTO_UTILINull;
			}
			set
			{
				_bIL_IMPORTO_PERCENTO_UTILINull = value;
			}
		}

		/// <summary>
		/// Value of field BIL_IMPORTO_PATRIMONIO
		/// </summary>
		public System.Double BIL_IMPORTO_PATRIMONIO
		{
			get
			{
				if(IsBIL_IMPORTO_PATRIMONIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_IMPORTO_PATRIMONIO;
			}
			set
			{
				_bIL_IMPORTO_PATRIMONIONull = false;
				_bIL_IMPORTO_PATRIMONIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_IMPORTO_PATRIMONIONull
		{
			get
			{
				return _bIL_IMPORTO_PATRIMONIONull;
			}
			set
			{
				_bIL_IMPORTO_PATRIMONIONull = value;
			}
		}

		/// <summary>
		/// Value of field BIL_VERIFICA_PAGAMENTO
		/// </summary>
		public System.Int32 BIL_VERIFICA_PAGAMENTO
		{
			get
			{
				if(IsBIL_VERIFICA_PAGAMENTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _bIL_VERIFICA_PAGAMENTO;
			}
			set
			{
				_bIL_VERIFICA_PAGAMENTONull = false;
				_bIL_VERIFICA_PAGAMENTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsBIL_VERIFICA_PAGAMENTONull
		{
			get
			{
				return _bIL_VERIFICA_PAGAMENTONull;
			}
			set
			{
				_bIL_VERIFICA_PAGAMENTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 BIL_VERIFICA_PAGAMENTOSafe
		{
			get
			{
				if (IsBIL_VERIFICA_PAGAMENTONull)
					return -1;
				return BIL_VERIFICA_PAGAMENTO;
			}
		}

		/// <summary>
		/// Value of field ADESIONE_ASSOCIAZIONE
		/// </summary>
		public System.String ADESIONE_ASSOCIAZIONE
		{
			get
			{
				if(IsADESIONE_ASSOCIAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aDESIONE_ASSOCIAZIONE;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = false;
				_aDESIONE_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsADESIONE_ASSOCIAZIONENull
		{
			get
			{
				return _aDESIONE_ASSOCIAZIONENull;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ADESIONE_ASSOCIAZIONESafe
		{
			get
			{
				if (IsADESIONE_ASSOCIAZIONENull)
					return System.String.Empty;
				return ADESIONE_ASSOCIAZIONE;
			}
		}

	}
}