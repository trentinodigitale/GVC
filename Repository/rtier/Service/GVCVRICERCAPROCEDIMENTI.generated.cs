//
//Generated by DELTADATOR\gs0445 at 27/07/2009 16.10.08
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCAPROCEDIMENTI
	/// </summary>
	public partial class GVCVRICERCAPROCEDIMENTI
	{
		private System.String _s_DENOMINAZIONE;
		private System.Boolean _s_DENOMINAZIONENull = true;
		private System.Int32 _s_IDOBJ;
		private System.Int32 _r_IDOBJ;
		private System.Boolean _r_IDOBJNull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_IDOBJ_STATO;
		private System.Boolean _r_IDOBJ_STATONull = true;
		private System.Int32 _pRO_IDOBJ_TIPO_PROCEDIMENTO;
		private System.DateTime _pRO_DATA_INIZIO;
		private System.Boolean _pRO_DATA_INIZIONull = true;
		private System.DateTime _pRO_DATA_TEORICA_FINE;
		private System.Boolean _pRO_DATA_TEORICA_FINENull = true;
		private System.Int32 _pRO_IDOBJ_TIPO_INIZIATIVA;
		private System.DateTime _pRO_DATA_RIATTIVAZIONE;
		private System.Boolean _pRO_DATA_RIATTIVAZIONENull = true;
		private System.DateTime _pRO_DATA_TERMINE_FINE;
		private System.Boolean _pRO_DATA_TERMINE_FINENull = true;
		private System.DateTime _pRO_DATA_FINE;
		private System.Boolean _pRO_DATA_FINENull = true;
		private System.Int32 _pRO_IDOBJ_TIPO_SOSPENSIONE;
		private System.Boolean _pRO_IDOBJ_TIPO_SOSPENSIONENull = true;
		private System.Int32 _pRO_IDOBJ_TIPO_CONCLUSIONE;
		private System.Boolean _pRO_IDOBJ_TIPO_CONCLUSIONENull = true;
		private System.String _pRO_STATO;
		private System.Boolean _pRO_STATONull = true;
		private System.String _aDESIONE_ASSOCIAZIONE;
		private System.Boolean _aDESIONE_ASSOCIAZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCAPROCEDIMENTI(){}

		/// <summary>
		/// Value of field S_DENOMINAZIONE
		/// </summary>
		public System.String S_DENOMINAZIONE
		{
			get
			{
				if(IsS_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_DENOMINAZIONE;
			}
			set
			{
				_s_DENOMINAZIONENull = false;
				_s_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_DENOMINAZIONENull
		{
			get
			{
				return _s_DENOMINAZIONENull;
			}
			set
			{
				_s_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_DENOMINAZIONESafe
		{
			get
			{
				if (IsS_DENOMINAZIONENull)
					return System.String.Empty;
				return S_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field S_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_IDOBJ
		{
			get
			{
				return _s_IDOBJ;
			}
			set
			{
				_s_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ
		/// </summary>
		public System.Int32 R_IDOBJ
		{
			get
			{
				if(IsR_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ;
			}
			set
			{
				_r_IDOBJNull = false;
				_r_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJNull
		{
			get
			{
				return _r_IDOBJNull;
			}
			set
			{
				_r_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJSafe
		{
			get
			{
				if (IsR_IDOBJNull)
					return -1;
				return R_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_STATO
		/// </summary>
		public System.Int32 R_IDOBJ_STATO
		{
			get
			{
				if(IsR_IDOBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_STATO;
			}
			set
			{
				_r_IDOBJ_STATONull = false;
				_r_IDOBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_STATONull
		{
			get
			{
				return _r_IDOBJ_STATONull;
			}
			set
			{
				_r_IDOBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_STATOSafe
		{
			get
			{
				if (IsR_IDOBJ_STATONull)
					return -1;
				return R_IDOBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field PRO_IDOBJ_TIPO_PROCEDIMENTO
		/// The field is mandatory.
		/// </summary>
		public System.Int32 PRO_IDOBJ_TIPO_PROCEDIMENTO
		{
			get
			{
				return _pRO_IDOBJ_TIPO_PROCEDIMENTO;
			}
			set
			{
				_pRO_IDOBJ_TIPO_PROCEDIMENTO = value;
			}
		}

		/// <summary>
		/// Value of field PRO_DATA_INIZIO
		/// </summary>
		public System.DateTime PRO_DATA_INIZIO
		{
			get
			{
				if(IsPRO_DATA_INIZIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_DATA_INIZIO;
			}
			set
			{
				_pRO_DATA_INIZIONull = false;
				_pRO_DATA_INIZIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_DATA_INIZIONull
		{
			get
			{
				return _pRO_DATA_INIZIONull;
			}
			set
			{
				_pRO_DATA_INIZIONull = value;
			}
		}

		/// <summary>
		/// Value of field PRO_DATA_TEORICA_FINE
		/// </summary>
		public System.DateTime PRO_DATA_TEORICA_FINE
		{
			get
			{
				if(IsPRO_DATA_TEORICA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_DATA_TEORICA_FINE;
			}
			set
			{
				_pRO_DATA_TEORICA_FINENull = false;
				_pRO_DATA_TEORICA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_DATA_TEORICA_FINENull
		{
			get
			{
				return _pRO_DATA_TEORICA_FINENull;
			}
			set
			{
				_pRO_DATA_TEORICA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field PRO_IDOBJ_TIPO_INIZIATIVA
		/// The field is mandatory.
		/// </summary>
		public System.Int32 PRO_IDOBJ_TIPO_INIZIATIVA
		{
			get
			{
				return _pRO_IDOBJ_TIPO_INIZIATIVA;
			}
			set
			{
				_pRO_IDOBJ_TIPO_INIZIATIVA = value;
			}
		}

		/// <summary>
		/// Value of field PRO_DATA_RIATTIVAZIONE
		/// </summary>
		public System.DateTime PRO_DATA_RIATTIVAZIONE
		{
			get
			{
				if(IsPRO_DATA_RIATTIVAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_DATA_RIATTIVAZIONE;
			}
			set
			{
				_pRO_DATA_RIATTIVAZIONENull = false;
				_pRO_DATA_RIATTIVAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_DATA_RIATTIVAZIONENull
		{
			get
			{
				return _pRO_DATA_RIATTIVAZIONENull;
			}
			set
			{
				_pRO_DATA_RIATTIVAZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field PRO_DATA_TERMINE_FINE
		/// </summary>
		public System.DateTime PRO_DATA_TERMINE_FINE
		{
			get
			{
				if(IsPRO_DATA_TERMINE_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_DATA_TERMINE_FINE;
			}
			set
			{
				_pRO_DATA_TERMINE_FINENull = false;
				_pRO_DATA_TERMINE_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_DATA_TERMINE_FINENull
		{
			get
			{
				return _pRO_DATA_TERMINE_FINENull;
			}
			set
			{
				_pRO_DATA_TERMINE_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field PRO_DATA_FINE
		/// </summary>
		public System.DateTime PRO_DATA_FINE
		{
			get
			{
				if(IsPRO_DATA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_DATA_FINE;
			}
			set
			{
				_pRO_DATA_FINENull = false;
				_pRO_DATA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_DATA_FINENull
		{
			get
			{
				return _pRO_DATA_FINENull;
			}
			set
			{
				_pRO_DATA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field PRO_IDOBJ_TIPO_SOSPENSIONE
		/// </summary>
		public System.Int32 PRO_IDOBJ_TIPO_SOSPENSIONE
		{
			get
			{
				if(IsPRO_IDOBJ_TIPO_SOSPENSIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_IDOBJ_TIPO_SOSPENSIONE;
			}
			set
			{
				_pRO_IDOBJ_TIPO_SOSPENSIONENull = false;
				_pRO_IDOBJ_TIPO_SOSPENSIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_IDOBJ_TIPO_SOSPENSIONENull
		{
			get
			{
				return _pRO_IDOBJ_TIPO_SOSPENSIONENull;
			}
			set
			{
				_pRO_IDOBJ_TIPO_SOSPENSIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PRO_IDOBJ_TIPO_SOSPENSIONESafe
		{
			get
			{
				if (IsPRO_IDOBJ_TIPO_SOSPENSIONENull)
					return -1;
				return PRO_IDOBJ_TIPO_SOSPENSIONE;
			}
		}

		/// <summary>
		/// Value of field PRO_IDOBJ_TIPO_CONCLUSIONE
		/// </summary>
		public System.Int32 PRO_IDOBJ_TIPO_CONCLUSIONE
		{
			get
			{
				if(IsPRO_IDOBJ_TIPO_CONCLUSIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_IDOBJ_TIPO_CONCLUSIONE;
			}
			set
			{
				_pRO_IDOBJ_TIPO_CONCLUSIONENull = false;
				_pRO_IDOBJ_TIPO_CONCLUSIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_IDOBJ_TIPO_CONCLUSIONENull
		{
			get
			{
				return _pRO_IDOBJ_TIPO_CONCLUSIONENull;
			}
			set
			{
				_pRO_IDOBJ_TIPO_CONCLUSIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PRO_IDOBJ_TIPO_CONCLUSIONESafe
		{
			get
			{
				if (IsPRO_IDOBJ_TIPO_CONCLUSIONENull)
					return -1;
				return PRO_IDOBJ_TIPO_CONCLUSIONE;
			}
		}

		/// <summary>
		/// Value of field PRO_STATO
		/// </summary>
		public System.String PRO_STATO
		{
			get
			{
				if(IsPRO_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pRO_STATO;
			}
			set
			{
				_pRO_STATONull = false;
				_pRO_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPRO_STATONull
		{
			get
			{
				return _pRO_STATONull;
			}
			set
			{
				_pRO_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PRO_STATOSafe
		{
			get
			{
				if (IsPRO_STATONull)
					return System.String.Empty;
				return PRO_STATO;
			}
		}

		/// <summary>
		/// Value of field ADESIONE_ASSOCIAZIONE
		/// </summary>
		public System.String ADESIONE_ASSOCIAZIONE
		{
			get
			{
				if(IsADESIONE_ASSOCIAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aDESIONE_ASSOCIAZIONE;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = false;
				_aDESIONE_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsADESIONE_ASSOCIAZIONENull
		{
			get
			{
				return _aDESIONE_ASSOCIAZIONENull;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ADESIONE_ASSOCIAZIONESafe
		{
			get
			{
				if (IsADESIONE_ASSOCIAZIONENull)
					return System.String.Empty;
				return ADESIONE_ASSOCIAZIONE;
			}
		}

	}
}