//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCRCARICHE
	/// </summary>
	public partial class GVCRCARICHE
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _fLAG_LEGALE;
		private System.Int32 _fLAG_LIQUIDATORE;
		private System.Int32 _aNTIMAFIA;
		private System.Int32 _aNTIMAFIA_ARRIVATA;
		private System.Int32 _iDOBJ_COMUNICAZIONE;
		private System.String _sOCIO_GCS;
		private System.Boolean _sOCIO_GCSNull = true;
		private System.Int32 _aNTIMAFIA_PRODOTTA;
		private System.Int32 _iDOBJ_TIPO_CARICA;
		private System.DateTime _dATA_INIZIO;
		private System.Boolean _dATA_INIZIONull = true;
		private System.DateTime _dATA_FINE;
		private System.Boolean _dATA_FINENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;
		private System.Int32 _iDOBJ_SOGGETTO;
		private System.Boolean _iDOBJ_SOGGETTONull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCRCARICHE(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// 1= legale rappresentante
		/// The field is mandatory.
		/// </summary>
		public System.Int32 FLAG_LEGALE
		{
			get
			{
				return _fLAG_LEGALE;
			}
			set
			{
				_fLAG_LEGALE = value;
			}
		}

		/// <summary>
		/// 1= liquidatore
		/// The field is mandatory.
		/// </summary>
		public System.Int32 FLAG_LIQUIDATORE
		{
			get
			{
				return _fLAG_LIQUIDATORE;
			}
			set
			{
				_fLAG_LIQUIDATORE = value;
			}
		}

		/// <summary>
		/// 1= richiesta
		/// The field is mandatory.
		/// </summary>
		public System.Int32 ANTIMAFIA
		{
			get
			{
				return _aNTIMAFIA;
			}
			set
			{
				_aNTIMAFIA = value;
			}
		}

		/// <summary>
		/// 1= arrivata
		/// The field is mandatory.
		/// </summary>
		public System.Int32 ANTIMAFIA_ARRIVATA
		{
			get
			{
				return _aNTIMAFIA_ARRIVATA;
			}
			set
			{
				_aNTIMAFIA_ARRIVATA = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_COMUNICAZIONE
		{
			get
			{
				return _iDOBJ_COMUNICAZIONE;
			}
			set
			{
				_iDOBJ_COMUNICAZIONE = value;
			}
		}

		/// <summary>
		/// Descrizione socio GSC
		/// </summary>
		public System.String SOCIO_GCS
		{
			get
			{
				if(IsSOCIO_GCSNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCIO_GCS;
			}
			set
			{
				_sOCIO_GCSNull = false;
				_sOCIO_GCS = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCIO_GCSNull
		{
			get
			{
				return _sOCIO_GCSNull;
			}
			set
			{
				_sOCIO_GCSNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String SOCIO_GCSSafe
		{
			get
			{
				if (IsSOCIO_GCSNull)
					return System.String.Empty;
				return SOCIO_GCS;
			}
		}

		/// <summary>
		/// 1= prodotta
		/// The field is mandatory.
		/// </summary>
		public System.Int32 ANTIMAFIA_PRODOTTA
		{
			get
			{
				return _aNTIMAFIA_PRODOTTA;
			}
			set
			{
				_aNTIMAFIA_PRODOTTA = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_TIPO_CARICA
		{
			get
			{
				return _iDOBJ_TIPO_CARICA;
			}
			set
			{
				_iDOBJ_TIPO_CARICA = value;
			}
		}

		/// <summary>
		/// Data inizio validità
		/// </summary>
		public System.DateTime DATA_INIZIO
		{
			get
			{
				if(IsDATA_INIZIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_INIZIO;
			}
			set
			{
				_dATA_INIZIONull = false;
				_dATA_INIZIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_INIZIONull
		{
			get
			{
				return _dATA_INIZIONull;
			}
			set
			{
				_dATA_INIZIONull = value;
			}
		}

		/// <summary>
		/// Data fine validità
		/// </summary>
		public System.DateTime DATA_FINE
		{
			get
			{
				if(IsDATA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_FINE;
			}
			set
			{
				_dATA_FINENull = false;
				_dATA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_FINENull
		{
			get
			{
				return _dATA_FINENull;
			}
			set
			{
				_dATA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_SOGGETTO
		{
			get
			{
				if(IsIDOBJ_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_SOGGETTO;
			}
			set
			{
				_iDOBJ_SOGGETTONull = false;
				_iDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_SOGGETTONull
		{
			get
			{
				return _iDOBJ_SOGGETTONull;
			}
			set
			{
				_iDOBJ_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_SOGGETTOSafe
		{
			get
			{
				if (IsIDOBJ_SOGGETTONull)
					return -1;
				return IDOBJ_SOGGETTO;
			}
		}

	}
}