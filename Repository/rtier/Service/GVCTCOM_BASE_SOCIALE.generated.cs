//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTCOM_BASE_SOCIALE
	/// </summary>
	public partial class GVCTCOM_BASE_SOCIALE
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_REGISTRO;
		private System.DateTime _dATA_COMUNICAZIONE;
		private System.Boolean _dATA_COMUNICAZIONENull = true;
		private System.DateTime _dATA_SITUAZIONE;
		private System.Int32 _sOCI_COOPERATORI;
		private System.Boolean _sOCI_COOPERATORINull = true;
		private System.Int32 _sOCI_SOVVENTORI;
		private System.Boolean _sOCI_SOVVENTORINull = true;
		private System.Int32 _aLTRI_SOCI;
		private System.Boolean _aLTRI_SOCINull = true;
		private System.Int32 _lAVORATORI;
		private System.Boolean _lAVORATORINull = true;
		private System.Int32 _lAVORATORI_SOCI;
		private System.Boolean _lAVORATORI_SOCINull = true;
		private System.Int32 _lAVORATORI_REMUNERATI;
		private System.Boolean _lAVORATORI_REMUNERATINull = true;
		private System.Int32 _sOCI_UTENTI;
		private System.Boolean _sOCI_UTENTINull = true;
		private System.Int32 _sOCI_VOLONTARI;
		private System.Boolean _sOCI_VOLONTARINull = true;
		private System.Int32 _sOCI_PG;
		private System.Boolean _sOCI_PGNull = true;
		private System.Int32 _lAVORATORI_TUTTI;
		private System.Boolean _lAVORATORI_TUTTINull = true;
		private System.Int32 _pERSONE_SVANTAGGIATE;
		private System.Boolean _pERSONE_SVANTAGGIATENull = true;
		private System.Int32 _cONFERIMENTO_CAPITALE;
		private System.Boolean _cONFERIMENTO_CAPITALENull = true;
		private System.Double _vALORE_QUOTE;
		private System.Boolean _vALORE_QUOTENull = true;
		private System.Double _vALORE_AZIONE;
		private System.Boolean _vALORE_AZIONENull = true;
		private System.Double _cAPITALE_SOTTOSCRITTO;
		private System.Boolean _cAPITALE_SOTTOSCRITTONull = true;
		private System.Double _cAPITALE_VERSATO;
		private System.Boolean _cAPITALE_VERSATONull = true;
		private System.String _nOTE;
		private System.Boolean _nOTENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTCOM_BASE_SOCIALE(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_REGISTRO
		{
			get
			{
				return _iDOBJ_REGISTRO;
			}
			set
			{
				_iDOBJ_REGISTRO = value;
			}
		}

		/// <summary>
		/// Data della comunicazione
		/// </summary>
		public System.DateTime DATA_COMUNICAZIONE
		{
			get
			{
				if(IsDATA_COMUNICAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_COMUNICAZIONE;
			}
			set
			{
				_dATA_COMUNICAZIONENull = false;
				_dATA_COMUNICAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_COMUNICAZIONENull
		{
			get
			{
				return _dATA_COMUNICAZIONENull;
			}
			set
			{
				_dATA_COMUNICAZIONENull = value;
			}
		}

		/// <summary>
		/// Data della situazione
		/// The field is mandatory.
		/// </summary>
		public System.DateTime DATA_SITUAZIONE
		{
			get
			{
				return _dATA_SITUAZIONE;
			}
			set
			{
				_dATA_SITUAZIONE = value;
			}
		}

		/// <summary>
		/// Numero soci cooperatori
		/// </summary>
		public System.Int32 SOCI_COOPERATORI
		{
			get
			{
				if(IsSOCI_COOPERATORINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCI_COOPERATORI;
			}
			set
			{
				_sOCI_COOPERATORINull = false;
				_sOCI_COOPERATORI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCI_COOPERATORINull
		{
			get
			{
				return _sOCI_COOPERATORINull;
			}
			set
			{
				_sOCI_COOPERATORINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 SOCI_COOPERATORISafe
		{
			get
			{
				if (IsSOCI_COOPERATORINull)
					return -1;
				return SOCI_COOPERATORI;
			}
		}

		/// <summary>
		/// Numero soci sovventori
		/// </summary>
		public System.Int32 SOCI_SOVVENTORI
		{
			get
			{
				if(IsSOCI_SOVVENTORINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCI_SOVVENTORI;
			}
			set
			{
				_sOCI_SOVVENTORINull = false;
				_sOCI_SOVVENTORI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCI_SOVVENTORINull
		{
			get
			{
				return _sOCI_SOVVENTORINull;
			}
			set
			{
				_sOCI_SOVVENTORINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 SOCI_SOVVENTORISafe
		{
			get
			{
				if (IsSOCI_SOVVENTORINull)
					return -1;
				return SOCI_SOVVENTORI;
			}
		}

		/// <summary>
		/// Numero altri soci
		/// </summary>
		public System.Int32 ALTRI_SOCI
		{
			get
			{
				if(IsALTRI_SOCINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aLTRI_SOCI;
			}
			set
			{
				_aLTRI_SOCINull = false;
				_aLTRI_SOCI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsALTRI_SOCINull
		{
			get
			{
				return _aLTRI_SOCINull;
			}
			set
			{
				_aLTRI_SOCINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 ALTRI_SOCISafe
		{
			get
			{
				if (IsALTRI_SOCINull)
					return -1;
				return ALTRI_SOCI;
			}
		}

		/// <summary>
		/// Numero lavoratori
		/// </summary>
		public System.Int32 LAVORATORI
		{
			get
			{
				if(IsLAVORATORINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lAVORATORI;
			}
			set
			{
				_lAVORATORINull = false;
				_lAVORATORI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLAVORATORINull
		{
			get
			{
				return _lAVORATORINull;
			}
			set
			{
				_lAVORATORINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LAVORATORISafe
		{
			get
			{
				if (IsLAVORATORINull)
					return -1;
				return LAVORATORI;
			}
		}

		/// <summary>
		/// Numero lavoratori soci
		/// </summary>
		public System.Int32 LAVORATORI_SOCI
		{
			get
			{
				if(IsLAVORATORI_SOCINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lAVORATORI_SOCI;
			}
			set
			{
				_lAVORATORI_SOCINull = false;
				_lAVORATORI_SOCI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLAVORATORI_SOCINull
		{
			get
			{
				return _lAVORATORI_SOCINull;
			}
			set
			{
				_lAVORATORI_SOCINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LAVORATORI_SOCISafe
		{
			get
			{
				if (IsLAVORATORI_SOCINull)
					return -1;
				return LAVORATORI_SOCI;
			}
		}

		/// <summary>
		/// Numero lavoratori remunerati
		/// </summary>
		public System.Int32 LAVORATORI_REMUNERATI
		{
			get
			{
				if(IsLAVORATORI_REMUNERATINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lAVORATORI_REMUNERATI;
			}
			set
			{
				_lAVORATORI_REMUNERATINull = false;
				_lAVORATORI_REMUNERATI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLAVORATORI_REMUNERATINull
		{
			get
			{
				return _lAVORATORI_REMUNERATINull;
			}
			set
			{
				_lAVORATORI_REMUNERATINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LAVORATORI_REMUNERATISafe
		{
			get
			{
				if (IsLAVORATORI_REMUNERATINull)
					return -1;
				return LAVORATORI_REMUNERATI;
			}
		}

		/// <summary>
		/// Numero soci utenti
		/// </summary>
		public System.Int32 SOCI_UTENTI
		{
			get
			{
				if(IsSOCI_UTENTINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCI_UTENTI;
			}
			set
			{
				_sOCI_UTENTINull = false;
				_sOCI_UTENTI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCI_UTENTINull
		{
			get
			{
				return _sOCI_UTENTINull;
			}
			set
			{
				_sOCI_UTENTINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 SOCI_UTENTISafe
		{
			get
			{
				if (IsSOCI_UTENTINull)
					return -1;
				return SOCI_UTENTI;
			}
		}

		/// <summary>
		/// Numero soci volontari
		/// </summary>
		public System.Int32 SOCI_VOLONTARI
		{
			get
			{
				if(IsSOCI_VOLONTARINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCI_VOLONTARI;
			}
			set
			{
				_sOCI_VOLONTARINull = false;
				_sOCI_VOLONTARI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCI_VOLONTARINull
		{
			get
			{
				return _sOCI_VOLONTARINull;
			}
			set
			{
				_sOCI_VOLONTARINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 SOCI_VOLONTARISafe
		{
			get
			{
				if (IsSOCI_VOLONTARINull)
					return -1;
				return SOCI_VOLONTARI;
			}
		}

		/// <summary>
		/// Numero soci persone giuridiche
		/// </summary>
		public System.Int32 SOCI_PG
		{
			get
			{
				if(IsSOCI_PGNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sOCI_PG;
			}
			set
			{
				_sOCI_PGNull = false;
				_sOCI_PG = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSOCI_PGNull
		{
			get
			{
				return _sOCI_PGNull;
			}
			set
			{
				_sOCI_PGNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 SOCI_PGSafe
		{
			get
			{
				if (IsSOCI_PGNull)
					return -1;
				return SOCI_PG;
			}
		}

		/// <summary>
		/// Numero Lavoratori soci e non
		/// </summary>
		public System.Int32 LAVORATORI_TUTTI
		{
			get
			{
				if(IsLAVORATORI_TUTTINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lAVORATORI_TUTTI;
			}
			set
			{
				_lAVORATORI_TUTTINull = false;
				_lAVORATORI_TUTTI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLAVORATORI_TUTTINull
		{
			get
			{
				return _lAVORATORI_TUTTINull;
			}
			set
			{
				_lAVORATORI_TUTTINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LAVORATORI_TUTTISafe
		{
			get
			{
				if (IsLAVORATORI_TUTTINull)
					return -1;
				return LAVORATORI_TUTTI;
			}
		}

		/// <summary>
		/// Numero persone svantaggiate
		/// </summary>
		public System.Int32 PERSONE_SVANTAGGIATE
		{
			get
			{
				if(IsPERSONE_SVANTAGGIATENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERSONE_SVANTAGGIATE;
			}
			set
			{
				_pERSONE_SVANTAGGIATENull = false;
				_pERSONE_SVANTAGGIATE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERSONE_SVANTAGGIATENull
		{
			get
			{
				return _pERSONE_SVANTAGGIATENull;
			}
			set
			{
				_pERSONE_SVANTAGGIATENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PERSONE_SVANTAGGIATESafe
		{
			get
			{
				if (IsPERSONE_SVANTAGGIATENull)
					return -1;
				return PERSONE_SVANTAGGIATE;
			}
		}

		/// <summary>
		/// 0=azioni 1=quote
		/// </summary>
		public System.Int32 CONFERIMENTO_CAPITALE
		{
			get
			{
				if(IsCONFERIMENTO_CAPITALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cONFERIMENTO_CAPITALE;
			}
			set
			{
				_cONFERIMENTO_CAPITALENull = false;
				_cONFERIMENTO_CAPITALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCONFERIMENTO_CAPITALENull
		{
			get
			{
				return _cONFERIMENTO_CAPITALENull;
			}
			set
			{
				_cONFERIMENTO_CAPITALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 CONFERIMENTO_CAPITALESafe
		{
			get
			{
				if (IsCONFERIMENTO_CAPITALENull)
					return -1;
				return CONFERIMENTO_CAPITALE;
			}
		}

		/// <summary>
		/// Minimo quote
		/// </summary>
		public System.Double VALORE_QUOTE
		{
			get
			{
				if(IsVALORE_QUOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALORE_QUOTE;
			}
			set
			{
				_vALORE_QUOTENull = false;
				_vALORE_QUOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALORE_QUOTENull
		{
			get
			{
				return _vALORE_QUOTENull;
			}
			set
			{
				_vALORE_QUOTENull = value;
			}
		}

		/// <summary>
		/// Valore azione
		/// </summary>
		public System.Double VALORE_AZIONE
		{
			get
			{
				if(IsVALORE_AZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALORE_AZIONE;
			}
			set
			{
				_vALORE_AZIONENull = false;
				_vALORE_AZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALORE_AZIONENull
		{
			get
			{
				return _vALORE_AZIONENull;
			}
			set
			{
				_vALORE_AZIONENull = value;
			}
		}

		/// <summary>
		/// Capitale sottoscritto
		/// </summary>
		public System.Double CAPITALE_SOTTOSCRITTO
		{
			get
			{
				if(IsCAPITALE_SOTTOSCRITTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cAPITALE_SOTTOSCRITTO;
			}
			set
			{
				_cAPITALE_SOTTOSCRITTONull = false;
				_cAPITALE_SOTTOSCRITTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCAPITALE_SOTTOSCRITTONull
		{
			get
			{
				return _cAPITALE_SOTTOSCRITTONull;
			}
			set
			{
				_cAPITALE_SOTTOSCRITTONull = value;
			}
		}

		/// <summary>
		/// Capitale versato
		/// </summary>
		public System.Double CAPITALE_VERSATO
		{
			get
			{
				if(IsCAPITALE_VERSATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cAPITALE_VERSATO;
			}
			set
			{
				_cAPITALE_VERSATONull = false;
				_cAPITALE_VERSATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCAPITALE_VERSATONull
		{
			get
			{
				return _cAPITALE_VERSATONull;
			}
			set
			{
				_cAPITALE_VERSATONull = value;
			}
		}

		/// <summary>
		/// Note
		/// </summary>
		public System.String NOTE
		{
			get
			{
				if(IsNOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOTE;
			}
			set
			{
				_nOTENull = false;
				_nOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOTENull
		{
			get
			{
				return _nOTENull;
			}
			set
			{
				_nOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOTESafe
		{
			get
			{
				if (IsNOTENull)
					return System.String.Empty;
				return NOTE;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

	}
}