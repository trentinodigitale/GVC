//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.14
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTLIQUIDAZIONI_COATTE
	/// </summary>
	public partial class GVCTLIQUIDAZIONI_COATTE
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_TIPO_LIQUIDAZIONE;
		private System.Int32 _iDOBJ_REGISTRO;
		private System.String _nUMERO_DETERMINA;
		private System.Boolean _nUMERO_DETERMINANull = true;
		private System.DateTime _dATA_DETERMINA;
		private System.Boolean _dATA_DETERMINANull = true;
		private System.String _nUMERO_DELIBERA;
		private System.Boolean _nUMERO_DELIBERANull = true;
		private System.DateTime _dATA_DELIBERA;
		private System.Boolean _dATA_DELIBERANull = true;
		private System.String _nUMERO_DELIBERA_GIUNTA;
		private System.Boolean _nUMERO_DELIBERA_GIUNTANull = true;
		private System.DateTime _dATA_DELIBERA_GIUNTA;
		private System.Boolean _dATA_DELIBERA_GIUNTANull = true;
		private System.DateTime _dATA_PUBBLICAZIONE;
		private System.Boolean _dATA_PUBBLICAZIONENull = true;
		private System.DateTime _dATA_DEPOSITO_RI;
		private System.Boolean _dATA_DEPOSITO_RINull = true;
		private System.DateTime _dATA_INSOLVENZA;
		private System.Boolean _dATA_INSOLVENZANull = true;
		private System.String _cODICE_UFFICIO;
		private System.Boolean _cODICE_UFFICIONull = true;
		private System.Int32 _dEPOSITO_BFL;
		private System.Boolean _dEPOSITO_BFLNull = true;
		private System.Int32 _pROCEDURA_REVOCATA;
		private System.Boolean _pROCEDURA_REVOCATANull = true;
		private System.String _nUMERO_DETERMINA_REVOCA;
		private System.Boolean _nUMERO_DETERMINA_REVOCANull = true;
		private System.DateTime _dATA_DETERMINA_REVOCA;
		private System.Boolean _dATA_DETERMINA_REVOCANull = true;
		private System.String _nUMERO_DELIBERA_REVOCA;
		private System.Boolean _nUMERO_DELIBERA_REVOCANull = true;
		private System.DateTime _dATA_DELIBERA_REVOCA;
		private System.Boolean _dATA_DELIBERA_REVOCANull = true;
		private System.Int32 _pROCEDURA_CONCLUSA;
		private System.Boolean _pROCEDURA_CONCLUSANull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTLIQUIDAZIONI_COATTE(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_TIPO_LIQUIDAZIONE
		{
			get
			{
				return _iDOBJ_TIPO_LIQUIDAZIONE;
			}
			set
			{
				_iDOBJ_TIPO_LIQUIDAZIONE = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_REGISTRO
		{
			get
			{
				return _iDOBJ_REGISTRO;
			}
			set
			{
				_iDOBJ_REGISTRO = value;
			}
		}

		/// <summary>
		/// Numero determina
		/// </summary>
		public System.String NUMERO_DETERMINA
		{
			get
			{
				if(IsNUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA;
			}
			set
			{
				_nUMERO_DETERMINANull = false;
				_nUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINANull
		{
			get
			{
				return _nUMERO_DETERMINANull;
			}
			set
			{
				_nUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINASafe
		{
			get
			{
				if (IsNUMERO_DETERMINANull)
					return System.String.Empty;
				return NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Data determina
		/// </summary>
		public System.DateTime DATA_DETERMINA
		{
			get
			{
				if(IsDATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA;
			}
			set
			{
				_dATA_DETERMINANull = false;
				_dATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINANull
		{
			get
			{
				return _dATA_DETERMINANull;
			}
			set
			{
				_dATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Numero delibera commissione
		/// </summary>
		public System.String NUMERO_DELIBERA
		{
			get
			{
				if(IsNUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA;
			}
			set
			{
				_nUMERO_DELIBERANull = false;
				_nUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERANull
		{
			get
			{
				return _nUMERO_DELIBERANull;
			}
			set
			{
				_nUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERASafe
		{
			get
			{
				if (IsNUMERO_DELIBERANull)
					return System.String.Empty;
				return NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Data delibera commissione
		/// </summary>
		public System.DateTime DATA_DELIBERA
		{
			get
			{
				if(IsDATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA;
			}
			set
			{
				_dATA_DELIBERANull = false;
				_dATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERANull
		{
			get
			{
				return _dATA_DELIBERANull;
			}
			set
			{
				_dATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Numero delibera giunta
		/// </summary>
		public System.String NUMERO_DELIBERA_GIUNTA
		{
			get
			{
				if(IsNUMERO_DELIBERA_GIUNTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_GIUNTA;
			}
			set
			{
				_nUMERO_DELIBERA_GIUNTANull = false;
				_nUMERO_DELIBERA_GIUNTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_GIUNTANull
		{
			get
			{
				return _nUMERO_DELIBERA_GIUNTANull;
			}
			set
			{
				_nUMERO_DELIBERA_GIUNTANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_GIUNTASafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_GIUNTANull)
					return System.String.Empty;
				return NUMERO_DELIBERA_GIUNTA;
			}
		}

		/// <summary>
		/// Data delibera giunta
		/// </summary>
		public System.DateTime DATA_DELIBERA_GIUNTA
		{
			get
			{
				if(IsDATA_DELIBERA_GIUNTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_GIUNTA;
			}
			set
			{
				_dATA_DELIBERA_GIUNTANull = false;
				_dATA_DELIBERA_GIUNTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_GIUNTANull
		{
			get
			{
				return _dATA_DELIBERA_GIUNTANull;
			}
			set
			{
				_dATA_DELIBERA_GIUNTANull = value;
			}
		}

		/// <summary>
		/// Data pubblicazione GU
		/// </summary>
		public System.DateTime DATA_PUBBLICAZIONE
		{
			get
			{
				if(IsDATA_PUBBLICAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_PUBBLICAZIONE;
			}
			set
			{
				_dATA_PUBBLICAZIONENull = false;
				_dATA_PUBBLICAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_PUBBLICAZIONENull
		{
			get
			{
				return _dATA_PUBBLICAZIONENull;
			}
			set
			{
				_dATA_PUBBLICAZIONENull = value;
			}
		}

		/// <summary>
		/// Data deposito R.I.
		/// </summary>
		public System.DateTime DATA_DEPOSITO_RI
		{
			get
			{
				if(IsDATA_DEPOSITO_RINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DEPOSITO_RI;
			}
			set
			{
				_dATA_DEPOSITO_RINull = false;
				_dATA_DEPOSITO_RI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DEPOSITO_RINull
		{
			get
			{
				return _dATA_DEPOSITO_RINull;
			}
			set
			{
				_dATA_DEPOSITO_RINull = value;
			}
		}

		/// <summary>
		/// Data sentenza insolvenza
		/// </summary>
		public System.DateTime DATA_INSOLVENZA
		{
			get
			{
				if(IsDATA_INSOLVENZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_INSOLVENZA;
			}
			set
			{
				_dATA_INSOLVENZANull = false;
				_dATA_INSOLVENZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_INSOLVENZANull
		{
			get
			{
				return _dATA_INSOLVENZANull;
			}
			set
			{
				_dATA_INSOLVENZANull = value;
			}
		}

		/// <summary>
		/// Codice ufficio
		/// </summary>
		public System.String CODICE_UFFICIO
		{
			get
			{
				if(IsCODICE_UFFICIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cODICE_UFFICIO;
			}
			set
			{
				_cODICE_UFFICIONull = false;
				_cODICE_UFFICIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCODICE_UFFICIONull
		{
			get
			{
				return _cODICE_UFFICIONull;
			}
			set
			{
				_cODICE_UFFICIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String CODICE_UFFICIOSafe
		{
			get
			{
				if (IsCODICE_UFFICIONull)
					return System.String.Empty;
				return CODICE_UFFICIO;
			}
		}

		/// <summary>
		/// Deposito BFL si/no
		/// </summary>
		public System.Int32 DEPOSITO_BFL
		{
			get
			{
				if(IsDEPOSITO_BFLNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dEPOSITO_BFL;
			}
			set
			{
				_dEPOSITO_BFLNull = false;
				_dEPOSITO_BFL = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDEPOSITO_BFLNull
		{
			get
			{
				return _dEPOSITO_BFLNull;
			}
			set
			{
				_dEPOSITO_BFLNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 DEPOSITO_BFLSafe
		{
			get
			{
				if (IsDEPOSITO_BFLNull)
					return -1;
				return DEPOSITO_BFL;
			}
		}

		/// <summary>
		/// Procedura revovata si/no
		/// </summary>
		public System.Int32 PROCEDURA_REVOCATA
		{
			get
			{
				if(IsPROCEDURA_REVOCATANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCEDURA_REVOCATA;
			}
			set
			{
				_pROCEDURA_REVOCATANull = false;
				_pROCEDURA_REVOCATA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCEDURA_REVOCATANull
		{
			get
			{
				return _pROCEDURA_REVOCATANull;
			}
			set
			{
				_pROCEDURA_REVOCATANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PROCEDURA_REVOCATASafe
		{
			get
			{
				if (IsPROCEDURA_REVOCATANull)
					return -1;
				return PROCEDURA_REVOCATA;
			}
		}

		/// <summary>
		/// Numero determina revoca
		/// </summary>
		public System.String NUMERO_DETERMINA_REVOCA
		{
			get
			{
				if(IsNUMERO_DETERMINA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA_REVOCA;
			}
			set
			{
				_nUMERO_DETERMINA_REVOCANull = false;
				_nUMERO_DETERMINA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINA_REVOCANull
		{
			get
			{
				return _nUMERO_DETERMINA_REVOCANull;
			}
			set
			{
				_nUMERO_DETERMINA_REVOCANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINA_REVOCASafe
		{
			get
			{
				if (IsNUMERO_DETERMINA_REVOCANull)
					return System.String.Empty;
				return NUMERO_DETERMINA_REVOCA;
			}
		}

		/// <summary>
		/// Data determina revoca
		/// </summary>
		public System.DateTime DATA_DETERMINA_REVOCA
		{
			get
			{
				if(IsDATA_DETERMINA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA_REVOCA;
			}
			set
			{
				_dATA_DETERMINA_REVOCANull = false;
				_dATA_DETERMINA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINA_REVOCANull
		{
			get
			{
				return _dATA_DETERMINA_REVOCANull;
			}
			set
			{
				_dATA_DETERMINA_REVOCANull = value;
			}
		}

		/// <summary>
		/// Numero delibera revoca
		/// </summary>
		public System.String NUMERO_DELIBERA_REVOCA
		{
			get
			{
				if(IsNUMERO_DELIBERA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_REVOCA;
			}
			set
			{
				_nUMERO_DELIBERA_REVOCANull = false;
				_nUMERO_DELIBERA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_REVOCANull
		{
			get
			{
				return _nUMERO_DELIBERA_REVOCANull;
			}
			set
			{
				_nUMERO_DELIBERA_REVOCANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_REVOCASafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_REVOCANull)
					return System.String.Empty;
				return NUMERO_DELIBERA_REVOCA;
			}
		}

		/// <summary>
		/// Data delibera revoca
		/// </summary>
		public System.DateTime DATA_DELIBERA_REVOCA
		{
			get
			{
				if(IsDATA_DELIBERA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_REVOCA;
			}
			set
			{
				_dATA_DELIBERA_REVOCANull = false;
				_dATA_DELIBERA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_REVOCANull
		{
			get
			{
				return _dATA_DELIBERA_REVOCANull;
			}
			set
			{
				_dATA_DELIBERA_REVOCANull = value;
			}
		}

		/// <summary>
		/// Procedura conclusa si/no
		/// </summary>
		public System.Int32 PROCEDURA_CONCLUSA
		{
			get
			{
				if(IsPROCEDURA_CONCLUSANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCEDURA_CONCLUSA;
			}
			set
			{
				_pROCEDURA_CONCLUSANull = false;
				_pROCEDURA_CONCLUSA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCEDURA_CONCLUSANull
		{
			get
			{
				return _pROCEDURA_CONCLUSANull;
			}
			set
			{
				_pROCEDURA_CONCLUSANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PROCEDURA_CONCLUSASafe
		{
			get
			{
				if (IsPROCEDURA_CONCLUSANull)
					return -1;
				return PROCEDURA_CONCLUSA;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

	}
}