//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.14
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCASOGGETTI
	/// </summary>
	public partial class GVCVRICERCASOGGETTI
	{
		private System.Int32 _r_ID_SOGGETTO;
		private System.Int32 _r_ID_TIPO_SOGGETTO;
		private System.Boolean _r_ID_TIPO_SOGGETTONull = true;
		private System.Int32 _r_ASSOCIAZIONE;
		private System.String _r_NOME;
		private System.Boolean _r_NOMENull = true;
		private System.String _r_COGNOME;
		private System.Boolean _r_COGNOMENull = true;
		private System.String _r_DENOMINAZIONE;
		private System.Boolean _r_DENOMINAZIONENull = true;
		private System.String _r_CODICE_FISCALE;
		private System.Boolean _r_CODICE_FISCALENull = true;
		private System.DateTime _r_DATA_NASCITA;
		private System.Boolean _r_DATA_NASCITANull = true;
		private System.String _r_LUOGO_NASCITA;
		private System.Boolean _r_LUOGO_NASCITANull = true;
		private System.Int32 _r_CODICE_COOPERATIVA;
		private System.Boolean _r_CODICE_COOPERATIVANull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_ID_OBJ_STATO;
		private System.Boolean _r_ID_OBJ_STATONull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCASOGGETTI(){}

		/// <summary>
		/// Value of field R_ID_SOGGETTO
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_ID_SOGGETTO
		{
			get
			{
				return _r_ID_SOGGETTO;
			}
			set
			{
				_r_ID_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Value of field R_ID_TIPO_SOGGETTO
		/// </summary>
		public System.Int32 R_ID_TIPO_SOGGETTO
		{
			get
			{
				if(IsR_ID_TIPO_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ID_TIPO_SOGGETTO;
			}
			set
			{
				_r_ID_TIPO_SOGGETTONull = false;
				_r_ID_TIPO_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ID_TIPO_SOGGETTONull
		{
			get
			{
				return _r_ID_TIPO_SOGGETTONull;
			}
			set
			{
				_r_ID_TIPO_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ID_TIPO_SOGGETTOSafe
		{
			get
			{
				if (IsR_ID_TIPO_SOGGETTONull)
					return -1;
				return R_ID_TIPO_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field R_ASSOCIAZIONE
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_ASSOCIAZIONE
		{
			get
			{
				return _r_ASSOCIAZIONE;
			}
			set
			{
				_r_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Value of field R_NOME
		/// </summary>
		public System.String R_NOME
		{
			get
			{
				if(IsR_NOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NOME;
			}
			set
			{
				_r_NOMENull = false;
				_r_NOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NOMENull
		{
			get
			{
				return _r_NOMENull;
			}
			set
			{
				_r_NOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NOMESafe
		{
			get
			{
				if (IsR_NOMENull)
					return System.String.Empty;
				return R_NOME;
			}
		}

		/// <summary>
		/// Value of field R_COGNOME
		/// </summary>
		public System.String R_COGNOME
		{
			get
			{
				if(IsR_COGNOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_COGNOME;
			}
			set
			{
				_r_COGNOMENull = false;
				_r_COGNOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_COGNOMENull
		{
			get
			{
				return _r_COGNOMENull;
			}
			set
			{
				_r_COGNOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_COGNOMESafe
		{
			get
			{
				if (IsR_COGNOMENull)
					return System.String.Empty;
				return R_COGNOME;
			}
		}

		/// <summary>
		/// Value of field R_DENOMINAZIONE
		/// </summary>
		public System.String R_DENOMINAZIONE
		{
			get
			{
				if(IsR_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_DENOMINAZIONE;
			}
			set
			{
				_r_DENOMINAZIONENull = false;
				_r_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_DENOMINAZIONENull
		{
			get
			{
				return _r_DENOMINAZIONENull;
			}
			set
			{
				_r_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_DENOMINAZIONESafe
		{
			get
			{
				if (IsR_DENOMINAZIONENull)
					return System.String.Empty;
				return R_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_FISCALE
		/// </summary>
		public System.String R_CODICE_FISCALE
		{
			get
			{
				if(IsR_CODICE_FISCALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_FISCALE;
			}
			set
			{
				_r_CODICE_FISCALENull = false;
				_r_CODICE_FISCALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_FISCALENull
		{
			get
			{
				return _r_CODICE_FISCALENull;
			}
			set
			{
				_r_CODICE_FISCALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CODICE_FISCALESafe
		{
			get
			{
				if (IsR_CODICE_FISCALENull)
					return System.String.Empty;
				return R_CODICE_FISCALE;
			}
		}

		/// <summary>
		/// Value of field R_DATA_NASCITA
		/// </summary>
		public System.DateTime R_DATA_NASCITA
		{
			get
			{
				if(IsR_DATA_NASCITANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_DATA_NASCITA;
			}
			set
			{
				_r_DATA_NASCITANull = false;
				_r_DATA_NASCITA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_DATA_NASCITANull
		{
			get
			{
				return _r_DATA_NASCITANull;
			}
			set
			{
				_r_DATA_NASCITANull = value;
			}
		}

		/// <summary>
		/// Value of field R_LUOGO_NASCITA
		/// </summary>
		public System.String R_LUOGO_NASCITA
		{
			get
			{
				if(IsR_LUOGO_NASCITANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_LUOGO_NASCITA;
			}
			set
			{
				_r_LUOGO_NASCITANull = false;
				_r_LUOGO_NASCITA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_LUOGO_NASCITANull
		{
			get
			{
				return _r_LUOGO_NASCITANull;
			}
			set
			{
				_r_LUOGO_NASCITANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_LUOGO_NASCITASafe
		{
			get
			{
				if (IsR_LUOGO_NASCITANull)
					return System.String.Empty;
				return R_LUOGO_NASCITA;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_COOPERATIVA
		/// </summary>
		public System.Int32 R_CODICE_COOPERATIVA
		{
			get
			{
				if(IsR_CODICE_COOPERATIVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_COOPERATIVA;
			}
			set
			{
				_r_CODICE_COOPERATIVANull = false;
				_r_CODICE_COOPERATIVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_COOPERATIVANull
		{
			get
			{
				return _r_CODICE_COOPERATIVANull;
			}
			set
			{
				_r_CODICE_COOPERATIVANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_CODICE_COOPERATIVASafe
		{
			get
			{
				if (IsR_CODICE_COOPERATIVANull)
					return -1;
				return R_CODICE_COOPERATIVA;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_ID_OBJ_STATO
		/// </summary>
		public System.Int32 R_ID_OBJ_STATO
		{
			get
			{
				if(IsR_ID_OBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ID_OBJ_STATO;
			}
			set
			{
				_r_ID_OBJ_STATONull = false;
				_r_ID_OBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ID_OBJ_STATONull
		{
			get
			{
				return _r_ID_OBJ_STATONull;
			}
			set
			{
				_r_ID_OBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ID_OBJ_STATOSafe
		{
			get
			{
				if (IsR_ID_OBJ_STATONull)
					return -1;
				return R_ID_OBJ_STATO;
			}
		}

	}
}