//
//Generated by DELTADATOR\gs0445 at 27/07/2009 16.10.08
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCAPROCEDURE_COATTE
	/// </summary>
	public partial class GVCVRICERCAPROCEDURE_COATTE
	{
		private System.String _s_DENOMINAZIONE;
		private System.Boolean _s_DENOMINAZIONENull = true;
		private System.Int32 _s_IDOBJ;
		private System.Int32 _r_IDOBJ;
		private System.Boolean _r_IDOBJNull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_IDOBJ_STATO;
		private System.Boolean _r_IDOBJ_STATONull = true;
		private System.Int32 _pROCOA_IDOBJ;
		private System.Boolean _pROCOA_IDOBJNull = true;
		private System.Int32 _pROCOA_IDOBJ_TIPO_PROCEDURA;
		private System.Boolean _pROCOA_IDOBJ_TIPO_PROCEDURANull = true;
		private System.String _pROCOA_NUMERO_DETERMINA;
		private System.Boolean _pROCOA_NUMERO_DETERMINANull = true;
		private System.DateTime _pROCOA_DATA_DETERMINA;
		private System.Boolean _pROCOA_DATA_DETERMINANull = true;
		private System.String _pROCOA_NUMERO_DELIBERA;
		private System.Boolean _pROCOA_NUMERO_DELIBERANull = true;
		private System.DateTime _pROCOA_DATA_DELIBERA;
		private System.Boolean _pROCOA_DATA_DELIBERANull = true;
		private System.DateTime _pROCOA_DATA_INIZIO;
		private System.Boolean _pROCOA_DATA_INIZIONull = true;
		private System.DateTime _pROCOA_DATA_ISCRIZIONE_RI;
		private System.Boolean _pROCOA_DATA_ISCRIZIONE_RINull = true;
		private System.DateTime _pROCOA_DATA_SCADENZA;
		private System.Boolean _pROCOA_DATA_SCADENZANull = true;
		private System.DateTime _pROCOA_DATA_CONCLUSIONE;
		private System.Boolean _pROCOA_DATA_CONCLUSIONENull = true;
		private System.String _pROCOA_NUMERO_DETERMINA_FINE;
		private System.Boolean _pROCOA_NUMERO_DETERMINA_FINENull = true;
		private System.DateTime _pROCOA_DATA_DETERMINA_FINE;
		private System.Boolean _pROCOA_DATA_DETERMINA_FINENull = true;
		private System.String _pROCOA_NUMERO_DELIBERA_FINE;
		private System.Boolean _pROCOA_NUMERO_DELIBERA_FINENull = true;
		private System.DateTime _pROCOA_DATA_DELIBERA_FINE;
		private System.Boolean _pROCOA_DATA_DELIBERA_FINENull = true;
		private System.Int32 _pROROGHE_IDOBJ;
		private System.Boolean _pROROGHE_IDOBJNull = true;
		private System.DateTime _pROROGHE_DATA_DELIBERA;
		private System.Boolean _pROROGHE_DATA_DELIBERANull = true;
		private System.String _pROROGHE_NUMERO_DELIBERA;
		private System.Boolean _pROROGHE_NUMERO_DELIBERANull = true;
		private System.DateTime _pROROGHE_DATA_DETERMINA;
		private System.Boolean _pROROGHE_DATA_DETERMINANull = true;
		private System.String _pROROGHE_NUMERO_DETERMINA;
		private System.Boolean _pROROGHE_NUMERO_DETERMINANull = true;
		private System.DateTime _pROROGHE_DATA_PROROGA;
		private System.Boolean _pROROGHE_DATA_PROROGANull = true;
		private System.Int32 _cOMP_IDOBJ;
		private System.Boolean _cOMP_IDOBJNull = true;
		private System.Int32 _cOMP_IDOBJ_SOGGETTO;
		private System.Boolean _cOMP_IDOBJ_SOGGETTONull = true;
		private System.String _cOMP_NOME;
		private System.Boolean _cOMP_NOMENull = true;
		private System.Double _cOMP_TOTALE;
		private System.Boolean _cOMP_TOTALENull = true;
		private System.Double _cOMP_IVA;
		private System.Boolean _cOMP_IVANull = true;
		private System.Double _cOMP_CASSA;
		private System.Boolean _cOMP_CASSANull = true;
		private System.Double _cOMP_SPESE;
		private System.Boolean _cOMP_SPESENull = true;
		private System.Double _cOMP_COMPENSO;
		private System.Boolean _cOMP_COMPENSONull = true;
		private System.Double _cOMP_PERCENTUALE_IVA;
		private System.Boolean _cOMP_PERCENTUALE_IVANull = true;
		private System.Double _cOMP_PERCENTUALE_CNP;
		private System.Boolean _cOMP_PERCENTUALE_CNPNull = true;
		private System.Int32 _cOMPLIQ_IDOBJ;
		private System.Boolean _cOMPLIQ_IDOBJNull = true;
		private System.Double _cOMPLIQ_IMPORTO_SPESE;
		private System.Boolean _cOMPLIQ_IMPORTO_SPESENull = true;
		private System.DateTime _cOMPLIQ_DATA_MANDATO;
		private System.Boolean _cOMPLIQ_DATA_MANDATONull = true;
		private System.String _cOMPLIQ_NUMERO_MANDATO;
		private System.Boolean _cOMPLIQ_NUMERO_MANDATONull = true;
		private System.Int32 _cOMPLIQ_LIQUIDATO;
		private System.Boolean _cOMPLIQ_LIQUIDATONull = true;
		private System.DateTime _cOMPLIQ_DATA_DETERMINA;
		private System.Boolean _cOMPLIQ_DATA_DETERMINANull = true;
		private System.String _cOMPLIQ_NUMERO_DETERMINA;
		private System.Boolean _cOMPLIQ_NUMERO_DETERMINANull = true;
		private System.Double _cOMPLIQ_IMPORTO_CONTRIBUTO;
		private System.Boolean _cOMPLIQ_IMPORTO_CONTRIBUTONull = true;
		private System.Double _cOMPLIQ_IMPORTO_DETERMINATO;
		private System.Boolean _cOMPLIQ_IMPORTO_DETERMINATONull = true;
		private System.DateTime _cOMPLIQ_DATA_DOMANDA;
		private System.Boolean _cOMPLIQ_DATA_DOMANDANull = true;
		private System.String _aDESIONE_ASSOCIAZIONE;
		private System.Boolean _aDESIONE_ASSOCIAZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCAPROCEDURE_COATTE(){}

		/// <summary>
		/// Value of field S_DENOMINAZIONE
		/// </summary>
		public System.String S_DENOMINAZIONE
		{
			get
			{
				if(IsS_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_DENOMINAZIONE;
			}
			set
			{
				_s_DENOMINAZIONENull = false;
				_s_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_DENOMINAZIONENull
		{
			get
			{
				return _s_DENOMINAZIONENull;
			}
			set
			{
				_s_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_DENOMINAZIONESafe
		{
			get
			{
				if (IsS_DENOMINAZIONENull)
					return System.String.Empty;
				return S_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field S_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_IDOBJ
		{
			get
			{
				return _s_IDOBJ;
			}
			set
			{
				_s_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ
		/// </summary>
		public System.Int32 R_IDOBJ
		{
			get
			{
				if(IsR_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ;
			}
			set
			{
				_r_IDOBJNull = false;
				_r_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJNull
		{
			get
			{
				return _r_IDOBJNull;
			}
			set
			{
				_r_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJSafe
		{
			get
			{
				if (IsR_IDOBJNull)
					return -1;
				return R_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_STATO
		/// </summary>
		public System.Int32 R_IDOBJ_STATO
		{
			get
			{
				if(IsR_IDOBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_STATO;
			}
			set
			{
				_r_IDOBJ_STATONull = false;
				_r_IDOBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_STATONull
		{
			get
			{
				return _r_IDOBJ_STATONull;
			}
			set
			{
				_r_IDOBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_STATOSafe
		{
			get
			{
				if (IsR_IDOBJ_STATONull)
					return -1;
				return R_IDOBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field PROCOA_IDOBJ
		/// </summary>
		public System.Int32 PROCOA_IDOBJ
		{
			get
			{
				if(IsPROCOA_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_IDOBJ;
			}
			set
			{
				_pROCOA_IDOBJNull = false;
				_pROCOA_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_IDOBJNull
		{
			get
			{
				return _pROCOA_IDOBJNull;
			}
			set
			{
				_pROCOA_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PROCOA_IDOBJSafe
		{
			get
			{
				if (IsPROCOA_IDOBJNull)
					return -1;
				return PROCOA_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field PROCOA_IDOBJ_TIPO_PROCEDURA
		/// </summary>
		public System.Int32 PROCOA_IDOBJ_TIPO_PROCEDURA
		{
			get
			{
				if(IsPROCOA_IDOBJ_TIPO_PROCEDURANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_IDOBJ_TIPO_PROCEDURA;
			}
			set
			{
				_pROCOA_IDOBJ_TIPO_PROCEDURANull = false;
				_pROCOA_IDOBJ_TIPO_PROCEDURA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_IDOBJ_TIPO_PROCEDURANull
		{
			get
			{
				return _pROCOA_IDOBJ_TIPO_PROCEDURANull;
			}
			set
			{
				_pROCOA_IDOBJ_TIPO_PROCEDURANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PROCOA_IDOBJ_TIPO_PROCEDURASafe
		{
			get
			{
				if (IsPROCOA_IDOBJ_TIPO_PROCEDURANull)
					return -1;
				return PROCOA_IDOBJ_TIPO_PROCEDURA;
			}
		}

		/// <summary>
		/// Value of field PROCOA_NUMERO_DETERMINA
		/// </summary>
		public System.String PROCOA_NUMERO_DETERMINA
		{
			get
			{
				if(IsPROCOA_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_NUMERO_DETERMINA;
			}
			set
			{
				_pROCOA_NUMERO_DETERMINANull = false;
				_pROCOA_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_NUMERO_DETERMINANull
		{
			get
			{
				return _pROCOA_NUMERO_DETERMINANull;
			}
			set
			{
				_pROCOA_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROCOA_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsPROCOA_NUMERO_DETERMINANull)
					return System.String.Empty;
				return PROCOA_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_DETERMINA
		/// </summary>
		public System.DateTime PROCOA_DATA_DETERMINA
		{
			get
			{
				if(IsPROCOA_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_DETERMINA;
			}
			set
			{
				_pROCOA_DATA_DETERMINANull = false;
				_pROCOA_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_DETERMINANull
		{
			get
			{
				return _pROCOA_DATA_DETERMINANull;
			}
			set
			{
				_pROCOA_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_NUMERO_DELIBERA
		/// </summary>
		public System.String PROCOA_NUMERO_DELIBERA
		{
			get
			{
				if(IsPROCOA_NUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_NUMERO_DELIBERA;
			}
			set
			{
				_pROCOA_NUMERO_DELIBERANull = false;
				_pROCOA_NUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_NUMERO_DELIBERANull
		{
			get
			{
				return _pROCOA_NUMERO_DELIBERANull;
			}
			set
			{
				_pROCOA_NUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROCOA_NUMERO_DELIBERASafe
		{
			get
			{
				if (IsPROCOA_NUMERO_DELIBERANull)
					return System.String.Empty;
				return PROCOA_NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_DELIBERA
		/// </summary>
		public System.DateTime PROCOA_DATA_DELIBERA
		{
			get
			{
				if(IsPROCOA_DATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_DELIBERA;
			}
			set
			{
				_pROCOA_DATA_DELIBERANull = false;
				_pROCOA_DATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_DELIBERANull
		{
			get
			{
				return _pROCOA_DATA_DELIBERANull;
			}
			set
			{
				_pROCOA_DATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_INIZIO
		/// </summary>
		public System.DateTime PROCOA_DATA_INIZIO
		{
			get
			{
				if(IsPROCOA_DATA_INIZIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_INIZIO;
			}
			set
			{
				_pROCOA_DATA_INIZIONull = false;
				_pROCOA_DATA_INIZIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_INIZIONull
		{
			get
			{
				return _pROCOA_DATA_INIZIONull;
			}
			set
			{
				_pROCOA_DATA_INIZIONull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_ISCRIZIONE_RI
		/// </summary>
		public System.DateTime PROCOA_DATA_ISCRIZIONE_RI
		{
			get
			{
				if(IsPROCOA_DATA_ISCRIZIONE_RINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_ISCRIZIONE_RI;
			}
			set
			{
				_pROCOA_DATA_ISCRIZIONE_RINull = false;
				_pROCOA_DATA_ISCRIZIONE_RI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_ISCRIZIONE_RINull
		{
			get
			{
				return _pROCOA_DATA_ISCRIZIONE_RINull;
			}
			set
			{
				_pROCOA_DATA_ISCRIZIONE_RINull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_SCADENZA
		/// </summary>
		public System.DateTime PROCOA_DATA_SCADENZA
		{
			get
			{
				if(IsPROCOA_DATA_SCADENZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_SCADENZA;
			}
			set
			{
				_pROCOA_DATA_SCADENZANull = false;
				_pROCOA_DATA_SCADENZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_SCADENZANull
		{
			get
			{
				return _pROCOA_DATA_SCADENZANull;
			}
			set
			{
				_pROCOA_DATA_SCADENZANull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_CONCLUSIONE
		/// </summary>
		public System.DateTime PROCOA_DATA_CONCLUSIONE
		{
			get
			{
				if(IsPROCOA_DATA_CONCLUSIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_CONCLUSIONE;
			}
			set
			{
				_pROCOA_DATA_CONCLUSIONENull = false;
				_pROCOA_DATA_CONCLUSIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_CONCLUSIONENull
		{
			get
			{
				return _pROCOA_DATA_CONCLUSIONENull;
			}
			set
			{
				_pROCOA_DATA_CONCLUSIONENull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_NUMERO_DETERMINA_FINE
		/// </summary>
		public System.String PROCOA_NUMERO_DETERMINA_FINE
		{
			get
			{
				if(IsPROCOA_NUMERO_DETERMINA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_NUMERO_DETERMINA_FINE;
			}
			set
			{
				_pROCOA_NUMERO_DETERMINA_FINENull = false;
				_pROCOA_NUMERO_DETERMINA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_NUMERO_DETERMINA_FINENull
		{
			get
			{
				return _pROCOA_NUMERO_DETERMINA_FINENull;
			}
			set
			{
				_pROCOA_NUMERO_DETERMINA_FINENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROCOA_NUMERO_DETERMINA_FINESafe
		{
			get
			{
				if (IsPROCOA_NUMERO_DETERMINA_FINENull)
					return System.String.Empty;
				return PROCOA_NUMERO_DETERMINA_FINE;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_DETERMINA_FINE
		/// </summary>
		public System.DateTime PROCOA_DATA_DETERMINA_FINE
		{
			get
			{
				if(IsPROCOA_DATA_DETERMINA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_DETERMINA_FINE;
			}
			set
			{
				_pROCOA_DATA_DETERMINA_FINENull = false;
				_pROCOA_DATA_DETERMINA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_DETERMINA_FINENull
		{
			get
			{
				return _pROCOA_DATA_DETERMINA_FINENull;
			}
			set
			{
				_pROCOA_DATA_DETERMINA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field PROCOA_NUMERO_DELIBERA_FINE
		/// </summary>
		public System.String PROCOA_NUMERO_DELIBERA_FINE
		{
			get
			{
				if(IsPROCOA_NUMERO_DELIBERA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_NUMERO_DELIBERA_FINE;
			}
			set
			{
				_pROCOA_NUMERO_DELIBERA_FINENull = false;
				_pROCOA_NUMERO_DELIBERA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_NUMERO_DELIBERA_FINENull
		{
			get
			{
				return _pROCOA_NUMERO_DELIBERA_FINENull;
			}
			set
			{
				_pROCOA_NUMERO_DELIBERA_FINENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROCOA_NUMERO_DELIBERA_FINESafe
		{
			get
			{
				if (IsPROCOA_NUMERO_DELIBERA_FINENull)
					return System.String.Empty;
				return PROCOA_NUMERO_DELIBERA_FINE;
			}
		}

		/// <summary>
		/// Value of field PROCOA_DATA_DELIBERA_FINE
		/// </summary>
		public System.DateTime PROCOA_DATA_DELIBERA_FINE
		{
			get
			{
				if(IsPROCOA_DATA_DELIBERA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROCOA_DATA_DELIBERA_FINE;
			}
			set
			{
				_pROCOA_DATA_DELIBERA_FINENull = false;
				_pROCOA_DATA_DELIBERA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROCOA_DATA_DELIBERA_FINENull
		{
			get
			{
				return _pROCOA_DATA_DELIBERA_FINENull;
			}
			set
			{
				_pROCOA_DATA_DELIBERA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_IDOBJ
		/// </summary>
		public System.Int32 PROROGHE_IDOBJ
		{
			get
			{
				if(IsPROROGHE_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_IDOBJ;
			}
			set
			{
				_pROROGHE_IDOBJNull = false;
				_pROROGHE_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_IDOBJNull
		{
			get
			{
				return _pROROGHE_IDOBJNull;
			}
			set
			{
				_pROROGHE_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 PROROGHE_IDOBJSafe
		{
			get
			{
				if (IsPROROGHE_IDOBJNull)
					return -1;
				return PROROGHE_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_DATA_DELIBERA
		/// </summary>
		public System.DateTime PROROGHE_DATA_DELIBERA
		{
			get
			{
				if(IsPROROGHE_DATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_DATA_DELIBERA;
			}
			set
			{
				_pROROGHE_DATA_DELIBERANull = false;
				_pROROGHE_DATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_DATA_DELIBERANull
		{
			get
			{
				return _pROROGHE_DATA_DELIBERANull;
			}
			set
			{
				_pROROGHE_DATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_NUMERO_DELIBERA
		/// </summary>
		public System.String PROROGHE_NUMERO_DELIBERA
		{
			get
			{
				if(IsPROROGHE_NUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_NUMERO_DELIBERA;
			}
			set
			{
				_pROROGHE_NUMERO_DELIBERANull = false;
				_pROROGHE_NUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_NUMERO_DELIBERANull
		{
			get
			{
				return _pROROGHE_NUMERO_DELIBERANull;
			}
			set
			{
				_pROROGHE_NUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROROGHE_NUMERO_DELIBERASafe
		{
			get
			{
				if (IsPROROGHE_NUMERO_DELIBERANull)
					return System.String.Empty;
				return PROROGHE_NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_DATA_DETERMINA
		/// </summary>
		public System.DateTime PROROGHE_DATA_DETERMINA
		{
			get
			{
				if(IsPROROGHE_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_DATA_DETERMINA;
			}
			set
			{
				_pROROGHE_DATA_DETERMINANull = false;
				_pROROGHE_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_DATA_DETERMINANull
		{
			get
			{
				return _pROROGHE_DATA_DETERMINANull;
			}
			set
			{
				_pROROGHE_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_NUMERO_DETERMINA
		/// </summary>
		public System.String PROROGHE_NUMERO_DETERMINA
		{
			get
			{
				if(IsPROROGHE_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_NUMERO_DETERMINA;
			}
			set
			{
				_pROROGHE_NUMERO_DETERMINANull = false;
				_pROROGHE_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_NUMERO_DETERMINANull
		{
			get
			{
				return _pROROGHE_NUMERO_DETERMINANull;
			}
			set
			{
				_pROROGHE_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String PROROGHE_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsPROROGHE_NUMERO_DETERMINANull)
					return System.String.Empty;
				return PROROGHE_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field PROROGHE_DATA_PROROGA
		/// </summary>
		public System.DateTime PROROGHE_DATA_PROROGA
		{
			get
			{
				if(IsPROROGHE_DATA_PROROGANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pROROGHE_DATA_PROROGA;
			}
			set
			{
				_pROROGHE_DATA_PROROGANull = false;
				_pROROGHE_DATA_PROROGA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPROROGHE_DATA_PROROGANull
		{
			get
			{
				return _pROROGHE_DATA_PROROGANull;
			}
			set
			{
				_pROROGHE_DATA_PROROGANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_IDOBJ
		/// </summary>
		public System.Int32 COMP_IDOBJ
		{
			get
			{
				if(IsCOMP_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IDOBJ;
			}
			set
			{
				_cOMP_IDOBJNull = false;
				_cOMP_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IDOBJNull
		{
			get
			{
				return _cOMP_IDOBJNull;
			}
			set
			{
				_cOMP_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMP_IDOBJSafe
		{
			get
			{
				if (IsCOMP_IDOBJNull)
					return -1;
				return COMP_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field COMP_IDOBJ_SOGGETTO
		/// </summary>
		public System.Int32 COMP_IDOBJ_SOGGETTO
		{
			get
			{
				if(IsCOMP_IDOBJ_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IDOBJ_SOGGETTO;
			}
			set
			{
				_cOMP_IDOBJ_SOGGETTONull = false;
				_cOMP_IDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IDOBJ_SOGGETTONull
		{
			get
			{
				return _cOMP_IDOBJ_SOGGETTONull;
			}
			set
			{
				_cOMP_IDOBJ_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMP_IDOBJ_SOGGETTOSafe
		{
			get
			{
				if (IsCOMP_IDOBJ_SOGGETTONull)
					return -1;
				return COMP_IDOBJ_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field COMP_NOME
		/// </summary>
		public System.String COMP_NOME
		{
			get
			{
				if(IsCOMP_NOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_NOME;
			}
			set
			{
				_cOMP_NOMENull = false;
				_cOMP_NOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_NOMENull
		{
			get
			{
				return _cOMP_NOMENull;
			}
			set
			{
				_cOMP_NOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMP_NOMESafe
		{
			get
			{
				if (IsCOMP_NOMENull)
					return System.String.Empty;
				return COMP_NOME;
			}
		}

		/// <summary>
		/// Value of field COMP_TOTALE
		/// </summary>
		public System.Double COMP_TOTALE
		{
			get
			{
				if(IsCOMP_TOTALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_TOTALE;
			}
			set
			{
				_cOMP_TOTALENull = false;
				_cOMP_TOTALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_TOTALENull
		{
			get
			{
				return _cOMP_TOTALENull;
			}
			set
			{
				_cOMP_TOTALENull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_IVA
		/// </summary>
		public System.Double COMP_IVA
		{
			get
			{
				if(IsCOMP_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IVA;
			}
			set
			{
				_cOMP_IVANull = false;
				_cOMP_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IVANull
		{
			get
			{
				return _cOMP_IVANull;
			}
			set
			{
				_cOMP_IVANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_CASSA
		/// </summary>
		public System.Double COMP_CASSA
		{
			get
			{
				if(IsCOMP_CASSANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_CASSA;
			}
			set
			{
				_cOMP_CASSANull = false;
				_cOMP_CASSA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_CASSANull
		{
			get
			{
				return _cOMP_CASSANull;
			}
			set
			{
				_cOMP_CASSANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_SPESE
		/// </summary>
		public System.Double COMP_SPESE
		{
			get
			{
				if(IsCOMP_SPESENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_SPESE;
			}
			set
			{
				_cOMP_SPESENull = false;
				_cOMP_SPESE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_SPESENull
		{
			get
			{
				return _cOMP_SPESENull;
			}
			set
			{
				_cOMP_SPESENull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_COMPENSO
		/// </summary>
		public System.Double COMP_COMPENSO
		{
			get
			{
				if(IsCOMP_COMPENSONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_COMPENSO;
			}
			set
			{
				_cOMP_COMPENSONull = false;
				_cOMP_COMPENSO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_COMPENSONull
		{
			get
			{
				return _cOMP_COMPENSONull;
			}
			set
			{
				_cOMP_COMPENSONull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_PERCENTUALE_IVA
		/// </summary>
		public System.Double COMP_PERCENTUALE_IVA
		{
			get
			{
				if(IsCOMP_PERCENTUALE_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_PERCENTUALE_IVA;
			}
			set
			{
				_cOMP_PERCENTUALE_IVANull = false;
				_cOMP_PERCENTUALE_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_PERCENTUALE_IVANull
		{
			get
			{
				return _cOMP_PERCENTUALE_IVANull;
			}
			set
			{
				_cOMP_PERCENTUALE_IVANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_PERCENTUALE_CNP
		/// </summary>
		public System.Double COMP_PERCENTUALE_CNP
		{
			get
			{
				if(IsCOMP_PERCENTUALE_CNPNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_PERCENTUALE_CNP;
			}
			set
			{
				_cOMP_PERCENTUALE_CNPNull = false;
				_cOMP_PERCENTUALE_CNP = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_PERCENTUALE_CNPNull
		{
			get
			{
				return _cOMP_PERCENTUALE_CNPNull;
			}
			set
			{
				_cOMP_PERCENTUALE_CNPNull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IDOBJ
		/// </summary>
		public System.Int32 COMPLIQ_IDOBJ
		{
			get
			{
				if(IsCOMPLIQ_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IDOBJ;
			}
			set
			{
				_cOMPLIQ_IDOBJNull = false;
				_cOMPLIQ_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IDOBJNull
		{
			get
			{
				return _cOMPLIQ_IDOBJNull;
			}
			set
			{
				_cOMPLIQ_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMPLIQ_IDOBJSafe
		{
			get
			{
				if (IsCOMPLIQ_IDOBJNull)
					return -1;
				return COMPLIQ_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_SPESE
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_SPESE
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_SPESENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_SPESE;
			}
			set
			{
				_cOMPLIQ_IMPORTO_SPESENull = false;
				_cOMPLIQ_IMPORTO_SPESE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_SPESENull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_SPESENull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_SPESENull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_MANDATO
		/// </summary>
		public System.DateTime COMPLIQ_DATA_MANDATO
		{
			get
			{
				if(IsCOMPLIQ_DATA_MANDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_MANDATO;
			}
			set
			{
				_cOMPLIQ_DATA_MANDATONull = false;
				_cOMPLIQ_DATA_MANDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_MANDATONull
		{
			get
			{
				return _cOMPLIQ_DATA_MANDATONull;
			}
			set
			{
				_cOMPLIQ_DATA_MANDATONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_NUMERO_MANDATO
		/// </summary>
		public System.String COMPLIQ_NUMERO_MANDATO
		{
			get
			{
				if(IsCOMPLIQ_NUMERO_MANDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_NUMERO_MANDATO;
			}
			set
			{
				_cOMPLIQ_NUMERO_MANDATONull = false;
				_cOMPLIQ_NUMERO_MANDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_NUMERO_MANDATONull
		{
			get
			{
				return _cOMPLIQ_NUMERO_MANDATONull;
			}
			set
			{
				_cOMPLIQ_NUMERO_MANDATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMPLIQ_NUMERO_MANDATOSafe
		{
			get
			{
				if (IsCOMPLIQ_NUMERO_MANDATONull)
					return System.String.Empty;
				return COMPLIQ_NUMERO_MANDATO;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_LIQUIDATO
		/// </summary>
		public System.Int32 COMPLIQ_LIQUIDATO
		{
			get
			{
				if(IsCOMPLIQ_LIQUIDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_LIQUIDATO;
			}
			set
			{
				_cOMPLIQ_LIQUIDATONull = false;
				_cOMPLIQ_LIQUIDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_LIQUIDATONull
		{
			get
			{
				return _cOMPLIQ_LIQUIDATONull;
			}
			set
			{
				_cOMPLIQ_LIQUIDATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMPLIQ_LIQUIDATOSafe
		{
			get
			{
				if (IsCOMPLIQ_LIQUIDATONull)
					return -1;
				return COMPLIQ_LIQUIDATO;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_DETERMINA
		/// </summary>
		public System.DateTime COMPLIQ_DATA_DETERMINA
		{
			get
			{
				if(IsCOMPLIQ_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_DETERMINA;
			}
			set
			{
				_cOMPLIQ_DATA_DETERMINANull = false;
				_cOMPLIQ_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_DETERMINANull
		{
			get
			{
				return _cOMPLIQ_DATA_DETERMINANull;
			}
			set
			{
				_cOMPLIQ_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_NUMERO_DETERMINA
		/// </summary>
		public System.String COMPLIQ_NUMERO_DETERMINA
		{
			get
			{
				if(IsCOMPLIQ_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_NUMERO_DETERMINA;
			}
			set
			{
				_cOMPLIQ_NUMERO_DETERMINANull = false;
				_cOMPLIQ_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_NUMERO_DETERMINANull
		{
			get
			{
				return _cOMPLIQ_NUMERO_DETERMINANull;
			}
			set
			{
				_cOMPLIQ_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMPLIQ_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsCOMPLIQ_NUMERO_DETERMINANull)
					return System.String.Empty;
				return COMPLIQ_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_CONTRIBUTO
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_CONTRIBUTO
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_CONTRIBUTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_CONTRIBUTO;
			}
			set
			{
				_cOMPLIQ_IMPORTO_CONTRIBUTONull = false;
				_cOMPLIQ_IMPORTO_CONTRIBUTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_CONTRIBUTONull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_CONTRIBUTONull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_CONTRIBUTONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_DETERMINATO
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_DETERMINATO
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_DETERMINATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_DETERMINATO;
			}
			set
			{
				_cOMPLIQ_IMPORTO_DETERMINATONull = false;
				_cOMPLIQ_IMPORTO_DETERMINATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_DETERMINATONull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_DETERMINATONull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_DETERMINATONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_DOMANDA
		/// </summary>
		public System.DateTime COMPLIQ_DATA_DOMANDA
		{
			get
			{
				if(IsCOMPLIQ_DATA_DOMANDANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_DOMANDA;
			}
			set
			{
				_cOMPLIQ_DATA_DOMANDANull = false;
				_cOMPLIQ_DATA_DOMANDA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_DOMANDANull
		{
			get
			{
				return _cOMPLIQ_DATA_DOMANDANull;
			}
			set
			{
				_cOMPLIQ_DATA_DOMANDANull = value;
			}
		}

		/// <summary>
		/// Value of field ADESIONE_ASSOCIAZIONE
		/// </summary>
		public System.String ADESIONE_ASSOCIAZIONE
		{
			get
			{
				if(IsADESIONE_ASSOCIAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aDESIONE_ASSOCIAZIONE;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = false;
				_aDESIONE_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsADESIONE_ASSOCIAZIONENull
		{
			get
			{
				return _aDESIONE_ASSOCIAZIONENull;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ADESIONE_ASSOCIAZIONESafe
		{
			get
			{
				if (IsADESIONE_ASSOCIAZIONENull)
					return System.String.Empty;
				return ADESIONE_ASSOCIAZIONE;
			}
		}

	}
}