//
//Generated by DELTADATOR\GS0445 at 17/07/2009 11.39.26
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCRSOCIETA_GRUPPO
	/// </summary>
	public partial class GVCRSOCIETA_GRUPPO
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_GRUPPO;
		private System.Int32 _iDOBJ_SOGGETTO;
		private System.Int32 _rUOLO_DIREZIONE;
		private System.Boolean _rUOLO_DIREZIONENull = true;
		private System.String _nOTE;
		private System.Boolean _nOTENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCRSOCIETA_GRUPPO(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_GRUPPO
		{
			get
			{
				return _iDOBJ_GRUPPO;
			}
			set
			{
				_iDOBJ_GRUPPO = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_SOGGETTO
		{
			get
			{
				return _iDOBJ_SOGGETTO;
			}
			set
			{
				_iDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// 1=ha ruolo direzione 
		/// </summary>
		public System.Int32 RUOLO_DIREZIONE
		{
			get
			{
				if(IsRUOLO_DIREZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rUOLO_DIREZIONE;
			}
			set
			{
				_rUOLO_DIREZIONENull = false;
				_rUOLO_DIREZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRUOLO_DIREZIONENull
		{
			get
			{
				return _rUOLO_DIREZIONENull;
			}
			set
			{
				_rUOLO_DIREZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 RUOLO_DIREZIONESafe
		{
			get
			{
				if (IsRUOLO_DIREZIONENull)
					return -1;
				return RUOLO_DIREZIONE;
			}
		}

		/// <summary>
		/// Note
		/// </summary>
		public System.String NOTE
		{
			get
			{
				if(IsNOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOTE;
			}
			set
			{
				_nOTENull = false;
				_nOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOTENull
		{
			get
			{
				return _nOTENull;
			}
			set
			{
				_nOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOTESafe
		{
			get
			{
				if (IsNOTENull)
					return System.String.Empty;
				return NOTE;
			}
		}

	}
}