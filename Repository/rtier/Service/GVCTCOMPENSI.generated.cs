//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTCOMPENSI
	/// </summary>
	public partial class GVCTCOMPENSI
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_SOGGETTO;
		private System.Double _pERCENTUALE_CNP;
		private System.Boolean _pERCENTUALE_CNPNull = true;
		private System.Double _pERCENTUALE_IVA;
		private System.Boolean _pERCENTUALE_IVANull = true;
		private System.Int32 _vALUTA;
		private System.Boolean _vALUTANull = true;
		private System.Double _cOMPENSO;
		private System.Boolean _cOMPENSONull = true;
		private System.Double _sPESE;
		private System.Boolean _sPESENull = true;
		private System.Double _cASSA;
		private System.Boolean _cASSANull = true;
		private System.Double _iVA;
		private System.Boolean _iVANull = true;
		private System.Double _tOTALE;
		private System.Boolean _tOTALENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;
		private System.Int32 _iDOBJ_LIQUIDAZIONE;
		private System.Boolean _iDOBJ_LIQUIDAZIONENull = true;
		private System.Int32 _iDOBJ_PROCEDURA;
		private System.Boolean _iDOBJ_PROCEDURANull = true;
		private System.Int32 _iDOBJ_INCARICO;
		private System.Boolean _iDOBJ_INCARICONull = true;
		private System.Int32 _tIPO_CONTRIBUTO;
		private System.Boolean _tIPO_CONTRIBUTONull = true;
		private System.String _nUMERO_DETERMINA;
		private System.Boolean _nUMERO_DETERMINANull = true;
		private System.DateTime _dATA_DETERMINA;
		private System.Boolean _dATA_DETERMINANull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTCOMPENSI(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_SOGGETTO
		{
			get
			{
				return _iDOBJ_SOGGETTO;
			}
			set
			{
				_iDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Percentuale CNP
		/// </summary>
		public System.Double PERCENTUALE_CNP
		{
			get
			{
				if(IsPERCENTUALE_CNPNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERCENTUALE_CNP;
			}
			set
			{
				_pERCENTUALE_CNPNull = false;
				_pERCENTUALE_CNP = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERCENTUALE_CNPNull
		{
			get
			{
				return _pERCENTUALE_CNPNull;
			}
			set
			{
				_pERCENTUALE_CNPNull = value;
			}
		}

		/// <summary>
		/// Percentuale iva
		/// </summary>
		public System.Double PERCENTUALE_IVA
		{
			get
			{
				if(IsPERCENTUALE_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _pERCENTUALE_IVA;
			}
			set
			{
				_pERCENTUALE_IVANull = false;
				_pERCENTUALE_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsPERCENTUALE_IVANull
		{
			get
			{
				return _pERCENTUALE_IVANull;
			}
			set
			{
				_pERCENTUALE_IVANull = value;
			}
		}

		/// <summary>
		/// Valuta euro/lire
		/// </summary>
		public System.Int32 VALUTA
		{
			get
			{
				if(IsVALUTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _vALUTA;
			}
			set
			{
				_vALUTANull = false;
				_vALUTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsVALUTANull
		{
			get
			{
				return _vALUTANull;
			}
			set
			{
				_vALUTANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 VALUTASafe
		{
			get
			{
				if (IsVALUTANull)
					return -1;
				return VALUTA;
			}
		}

		/// <summary>
		/// Importo compenso
		/// </summary>
		public System.Double COMPENSO
		{
			get
			{
				if(IsCOMPENSONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPENSO;
			}
			set
			{
				_cOMPENSONull = false;
				_cOMPENSO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPENSONull
		{
			get
			{
				return _cOMPENSONull;
			}
			set
			{
				_cOMPENSONull = value;
			}
		}

		/// <summary>
		/// Importo spese
		/// </summary>
		public System.Double SPESE
		{
			get
			{
				if(IsSPESENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sPESE;
			}
			set
			{
				_sPESENull = false;
				_sPESE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSPESENull
		{
			get
			{
				return _sPESENull;
			}
			set
			{
				_sPESENull = value;
			}
		}

		/// <summary>
		/// Importo cassa
		/// </summary>
		public System.Double CASSA
		{
			get
			{
				if(IsCASSANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cASSA;
			}
			set
			{
				_cASSANull = false;
				_cASSA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCASSANull
		{
			get
			{
				return _cASSANull;
			}
			set
			{
				_cASSANull = value;
			}
		}

		/// <summary>
		/// Importo iva
		/// </summary>
		public System.Double IVA
		{
			get
			{
				if(IsIVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iVA;
			}
			set
			{
				_iVANull = false;
				_iVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIVANull
		{
			get
			{
				return _iVANull;
			}
			set
			{
				_iVANull = value;
			}
		}

		/// <summary>
		/// Importo totale
		/// </summary>
		public System.Double TOTALE
		{
			get
			{
				if(IsTOTALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _tOTALE;
			}
			set
			{
				_tOTALENull = false;
				_tOTALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsTOTALENull
		{
			get
			{
				return _tOTALENull;
			}
			set
			{
				_tOTALENull = value;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_LIQUIDAZIONE
		{
			get
			{
				if(IsIDOBJ_LIQUIDAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_LIQUIDAZIONE;
			}
			set
			{
				_iDOBJ_LIQUIDAZIONENull = false;
				_iDOBJ_LIQUIDAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_LIQUIDAZIONENull
		{
			get
			{
				return _iDOBJ_LIQUIDAZIONENull;
			}
			set
			{
				_iDOBJ_LIQUIDAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_LIQUIDAZIONESafe
		{
			get
			{
				if (IsIDOBJ_LIQUIDAZIONENull)
					return -1;
				return IDOBJ_LIQUIDAZIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_PROCEDURA
		{
			get
			{
				if(IsIDOBJ_PROCEDURANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_PROCEDURA;
			}
			set
			{
				_iDOBJ_PROCEDURANull = false;
				_iDOBJ_PROCEDURA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_PROCEDURANull
		{
			get
			{
				return _iDOBJ_PROCEDURANull;
			}
			set
			{
				_iDOBJ_PROCEDURANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_PROCEDURASafe
		{
			get
			{
				if (IsIDOBJ_PROCEDURANull)
					return -1;
				return IDOBJ_PROCEDURA;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_INCARICO
		{
			get
			{
				if(IsIDOBJ_INCARICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_INCARICO;
			}
			set
			{
				_iDOBJ_INCARICONull = false;
				_iDOBJ_INCARICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_INCARICONull
		{
			get
			{
				return _iDOBJ_INCARICONull;
			}
			set
			{
				_iDOBJ_INCARICONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_INCARICOSafe
		{
			get
			{
				if (IsIDOBJ_INCARICONull)
					return -1;
				return IDOBJ_INCARICO;
			}
		}

		/// <summary>
		/// 1=Acconto 2=Saldo
		/// </summary>
		public System.Int32 TIPO_CONTRIBUTO
		{
			get
			{
				if(IsTIPO_CONTRIBUTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _tIPO_CONTRIBUTO;
			}
			set
			{
				_tIPO_CONTRIBUTONull = false;
				_tIPO_CONTRIBUTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsTIPO_CONTRIBUTONull
		{
			get
			{
				return _tIPO_CONTRIBUTONull;
			}
			set
			{
				_tIPO_CONTRIBUTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 TIPO_CONTRIBUTOSafe
		{
			get
			{
				if (IsTIPO_CONTRIBUTONull)
					return -1;
				return TIPO_CONTRIBUTO;
			}
		}

		/// <summary>
		/// Numero determina
		/// </summary>
		public System.String NUMERO_DETERMINA
		{
			get
			{
				if(IsNUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA;
			}
			set
			{
				_nUMERO_DETERMINANull = false;
				_nUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINANull
		{
			get
			{
				return _nUMERO_DETERMINANull;
			}
			set
			{
				_nUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINASafe
		{
			get
			{
				if (IsNUMERO_DETERMINANull)
					return System.String.Empty;
				return NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Data determina
		/// </summary>
		public System.DateTime DATA_DETERMINA
		{
			get
			{
				if(IsDATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA;
			}
			set
			{
				_dATA_DETERMINANull = false;
				_dATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINANull
		{
			get
			{
				return _dATA_DETERMINANull;
			}
			set
			{
				_dATA_DETERMINANull = value;
			}
		}

	}
}