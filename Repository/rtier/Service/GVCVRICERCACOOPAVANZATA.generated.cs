//
//Generated by DELTADATOR\GS0445 at 15/06/2010 16.39.56
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCACOOPAVANZATA
	/// </summary>
	public partial class GVCVRICERCACOOPAVANZATA
	{
		private System.Int32 _s_IDOBJ;
		private System.Int32 _s_IDOBJ_TIPO_SOGGETTO;
		private System.Boolean _s_IDOBJ_TIPO_SOGGETTONull = true;
		private System.Int32 _s_FLAG_ASSOCIAZIONE;
		private System.String _s_DENOMINAZIONE;
		private System.Boolean _s_DENOMINAZIONENull = true;
		private System.String _s_CODICE_FISCALE;
		private System.Boolean _s_CODICE_FISCALENull = true;
		private System.String _iND_COMUNE;
		private System.Boolean _iND_COMUNENull = true;
		private System.Int32 _r_IDOBJ;
		private System.Boolean _r_IDOBJNull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_IDOBJ_STATO;
		private System.Boolean _r_IDOBJ_STATONull = true;
		private System.DateTime _r_DATA_COSTITUZIONE;
		private System.Boolean _r_DATA_COSTITUZIONENull = true;
		private System.String _r_BILANCIO_ESERCIZIO_AL;
		private System.Boolean _r_BILANCIO_ESERCIZIO_ALNull = true;
		private System.Int32 _r_NUMERO_SCIOGLIMENTO;
		private System.Boolean _r_NUMERO_SCIOGLIMENTONull = true;
		private System.Int32 _r_ESENTE_VERSAMENTO_UTILI;
		private System.Boolean _r_ESENTE_VERSAMENTO_UTILINull = true;
		private System.Int32 _r_GRUPPO_PARITETICO;
		private System.Boolean _r_GRUPPO_PARITETICONull = true;
		private System.String _r_CODICE_OPERATORE;
		private System.Boolean _r_CODICE_OPERATORENull = true;
		private System.String _r_CODICE_UFFICIO;
		private System.Boolean _r_CODICE_UFFICIONull = true;
		private System.Int32 _r_IDOBJ_TIPO_COSTITUZIONE;
		private System.Boolean _r_IDOBJ_TIPO_COSTITUZIONENull = true;
		private System.Int32 _r_IDOBJ_FORMA_GIURIDICA;
		private System.Boolean _r_IDOBJ_FORMA_GIURIDICANull = true;
		private System.Int32 _r_IDOBJ_CADENZA_REVISIONE;
		private System.Boolean _r_IDOBJ_CADENZA_REVISIONENull = true;
		private System.Int32 _aTT_FLAG_CCIAA;
		private System.Boolean _aTT_FLAG_CCIAANull = true;
		private System.Int32 _aTT_IDOBJ_TPIO_ATT;
		private System.Boolean _aTT_IDOBJ_TPIO_ATTNull = true;
		private System.String _aDESIONE_ASSOCIAZIONE;
		private System.Boolean _aDESIONE_ASSOCIAZIONENull = true;
		private System.String _iSCRIZIONE;
		private System.Boolean _iSCRIZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCACOOPAVANZATA(){}

		/// <summary>
		/// Value of field S_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_IDOBJ
		{
			get
			{
				return _s_IDOBJ;
			}
			set
			{
				_s_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field S_IDOBJ_TIPO_SOGGETTO
		/// </summary>
		public System.Int32 S_IDOBJ_TIPO_SOGGETTO
		{
			get
			{
				if(IsS_IDOBJ_TIPO_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_IDOBJ_TIPO_SOGGETTO;
			}
			set
			{
				_s_IDOBJ_TIPO_SOGGETTONull = false;
				_s_IDOBJ_TIPO_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_IDOBJ_TIPO_SOGGETTONull
		{
			get
			{
				return _s_IDOBJ_TIPO_SOGGETTONull;
			}
			set
			{
				_s_IDOBJ_TIPO_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 S_IDOBJ_TIPO_SOGGETTOSafe
		{
			get
			{
				if (IsS_IDOBJ_TIPO_SOGGETTONull)
					return -1;
				return S_IDOBJ_TIPO_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field S_FLAG_ASSOCIAZIONE
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_FLAG_ASSOCIAZIONE
		{
			get
			{
				return _s_FLAG_ASSOCIAZIONE;
			}
			set
			{
				_s_FLAG_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Value of field S_DENOMINAZIONE
		/// </summary>
		public System.String S_DENOMINAZIONE
		{
			get
			{
				if(IsS_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_DENOMINAZIONE;
			}
			set
			{
				_s_DENOMINAZIONENull = false;
				_s_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_DENOMINAZIONENull
		{
			get
			{
				return _s_DENOMINAZIONENull;
			}
			set
			{
				_s_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_DENOMINAZIONESafe
		{
			get
			{
				if (IsS_DENOMINAZIONENull)
					return System.String.Empty;
				return S_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field S_CODICE_FISCALE
		/// </summary>
		public System.String S_CODICE_FISCALE
		{
			get
			{
				if(IsS_CODICE_FISCALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_CODICE_FISCALE;
			}
			set
			{
				_s_CODICE_FISCALENull = false;
				_s_CODICE_FISCALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_CODICE_FISCALENull
		{
			get
			{
				return _s_CODICE_FISCALENull;
			}
			set
			{
				_s_CODICE_FISCALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_CODICE_FISCALESafe
		{
			get
			{
				if (IsS_CODICE_FISCALENull)
					return System.String.Empty;
				return S_CODICE_FISCALE;
			}
		}

		/// <summary>
		/// Value of field IND_COMUNE
		/// </summary>
		public System.String IND_COMUNE
		{
			get
			{
				if(IsIND_COMUNENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_COMUNE;
			}
			set
			{
				_iND_COMUNENull = false;
				_iND_COMUNE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_COMUNENull
		{
			get
			{
				return _iND_COMUNENull;
			}
			set
			{
				_iND_COMUNENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_COMUNESafe
		{
			get
			{
				if (IsIND_COMUNENull)
					return System.String.Empty;
				return IND_COMUNE;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ
		/// </summary>
		public System.Int32 R_IDOBJ
		{
			get
			{
				if(IsR_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ;
			}
			set
			{
				_r_IDOBJNull = false;
				_r_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJNull
		{
			get
			{
				return _r_IDOBJNull;
			}
			set
			{
				_r_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJSafe
		{
			get
			{
				if (IsR_IDOBJNull)
					return -1;
				return R_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_STATO
		/// </summary>
		public System.Int32 R_IDOBJ_STATO
		{
			get
			{
				if(IsR_IDOBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_STATO;
			}
			set
			{
				_r_IDOBJ_STATONull = false;
				_r_IDOBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_STATONull
		{
			get
			{
				return _r_IDOBJ_STATONull;
			}
			set
			{
				_r_IDOBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_STATOSafe
		{
			get
			{
				if (IsR_IDOBJ_STATONull)
					return -1;
				return R_IDOBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field R_DATA_COSTITUZIONE
		/// </summary>
		public System.DateTime R_DATA_COSTITUZIONE
		{
			get
			{
				if(IsR_DATA_COSTITUZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_DATA_COSTITUZIONE;
			}
			set
			{
				_r_DATA_COSTITUZIONENull = false;
				_r_DATA_COSTITUZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_DATA_COSTITUZIONENull
		{
			get
			{
				return _r_DATA_COSTITUZIONENull;
			}
			set
			{
				_r_DATA_COSTITUZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field R_BILANCIO_ESERCIZIO_AL
		/// </summary>
		public System.String R_BILANCIO_ESERCIZIO_AL
		{
			get
			{
				if(IsR_BILANCIO_ESERCIZIO_ALNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_BILANCIO_ESERCIZIO_AL;
			}
			set
			{
				_r_BILANCIO_ESERCIZIO_ALNull = false;
				_r_BILANCIO_ESERCIZIO_AL = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_BILANCIO_ESERCIZIO_ALNull
		{
			get
			{
				return _r_BILANCIO_ESERCIZIO_ALNull;
			}
			set
			{
				_r_BILANCIO_ESERCIZIO_ALNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_BILANCIO_ESERCIZIO_ALSafe
		{
			get
			{
				if (IsR_BILANCIO_ESERCIZIO_ALNull)
					return System.String.Empty;
				return R_BILANCIO_ESERCIZIO_AL;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_SCIOGLIMENTO
		/// </summary>
		public System.Int32 R_NUMERO_SCIOGLIMENTO
		{
			get
			{
				if(IsR_NUMERO_SCIOGLIMENTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_SCIOGLIMENTO;
			}
			set
			{
				_r_NUMERO_SCIOGLIMENTONull = false;
				_r_NUMERO_SCIOGLIMENTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_SCIOGLIMENTONull
		{
			get
			{
				return _r_NUMERO_SCIOGLIMENTONull;
			}
			set
			{
				_r_NUMERO_SCIOGLIMENTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_NUMERO_SCIOGLIMENTOSafe
		{
			get
			{
				if (IsR_NUMERO_SCIOGLIMENTONull)
					return -1;
				return R_NUMERO_SCIOGLIMENTO;
			}
		}

		/// <summary>
		/// Value of field R_ESENTE_VERSAMENTO_UTILI
		/// </summary>
		public System.Int32 R_ESENTE_VERSAMENTO_UTILI
		{
			get
			{
				if(IsR_ESENTE_VERSAMENTO_UTILINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ESENTE_VERSAMENTO_UTILI;
			}
			set
			{
				_r_ESENTE_VERSAMENTO_UTILINull = false;
				_r_ESENTE_VERSAMENTO_UTILI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ESENTE_VERSAMENTO_UTILINull
		{
			get
			{
				return _r_ESENTE_VERSAMENTO_UTILINull;
			}
			set
			{
				_r_ESENTE_VERSAMENTO_UTILINull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ESENTE_VERSAMENTO_UTILISafe
		{
			get
			{
				if (IsR_ESENTE_VERSAMENTO_UTILINull)
					return -1;
				return R_ESENTE_VERSAMENTO_UTILI;
			}
		}

		/// <summary>
		/// Value of field R_GRUPPO_PARITETICO
		/// </summary>
		public System.Int32 R_GRUPPO_PARITETICO
		{
			get
			{
				if(IsR_GRUPPO_PARITETICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_GRUPPO_PARITETICO;
			}
			set
			{
				_r_GRUPPO_PARITETICONull = false;
				_r_GRUPPO_PARITETICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_GRUPPO_PARITETICONull
		{
			get
			{
				return _r_GRUPPO_PARITETICONull;
			}
			set
			{
				_r_GRUPPO_PARITETICONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_GRUPPO_PARITETICOSafe
		{
			get
			{
				if (IsR_GRUPPO_PARITETICONull)
					return -1;
				return R_GRUPPO_PARITETICO;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_OPERATORE
		/// </summary>
		public System.String R_CODICE_OPERATORE
		{
			get
			{
				if(IsR_CODICE_OPERATORENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_OPERATORE;
			}
			set
			{
				_r_CODICE_OPERATORENull = false;
				_r_CODICE_OPERATORE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_OPERATORENull
		{
			get
			{
				return _r_CODICE_OPERATORENull;
			}
			set
			{
				_r_CODICE_OPERATORENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CODICE_OPERATORESafe
		{
			get
			{
				if (IsR_CODICE_OPERATORENull)
					return System.String.Empty;
				return R_CODICE_OPERATORE;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_UFFICIO
		/// </summary>
		public System.String R_CODICE_UFFICIO
		{
			get
			{
				if(IsR_CODICE_UFFICIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_UFFICIO;
			}
			set
			{
				_r_CODICE_UFFICIONull = false;
				_r_CODICE_UFFICIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_UFFICIONull
		{
			get
			{
				return _r_CODICE_UFFICIONull;
			}
			set
			{
				_r_CODICE_UFFICIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CODICE_UFFICIOSafe
		{
			get
			{
				if (IsR_CODICE_UFFICIONull)
					return System.String.Empty;
				return R_CODICE_UFFICIO;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_TIPO_COSTITUZIONE
		/// </summary>
		public System.Int32 R_IDOBJ_TIPO_COSTITUZIONE
		{
			get
			{
				if(IsR_IDOBJ_TIPO_COSTITUZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_TIPO_COSTITUZIONE;
			}
			set
			{
				_r_IDOBJ_TIPO_COSTITUZIONENull = false;
				_r_IDOBJ_TIPO_COSTITUZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_TIPO_COSTITUZIONENull
		{
			get
			{
				return _r_IDOBJ_TIPO_COSTITUZIONENull;
			}
			set
			{
				_r_IDOBJ_TIPO_COSTITUZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_TIPO_COSTITUZIONESafe
		{
			get
			{
				if (IsR_IDOBJ_TIPO_COSTITUZIONENull)
					return -1;
				return R_IDOBJ_TIPO_COSTITUZIONE;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_FORMA_GIURIDICA
		/// </summary>
		public System.Int32 R_IDOBJ_FORMA_GIURIDICA
		{
			get
			{
				if(IsR_IDOBJ_FORMA_GIURIDICANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_FORMA_GIURIDICA;
			}
			set
			{
				_r_IDOBJ_FORMA_GIURIDICANull = false;
				_r_IDOBJ_FORMA_GIURIDICA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_FORMA_GIURIDICANull
		{
			get
			{
				return _r_IDOBJ_FORMA_GIURIDICANull;
			}
			set
			{
				_r_IDOBJ_FORMA_GIURIDICANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_FORMA_GIURIDICASafe
		{
			get
			{
				if (IsR_IDOBJ_FORMA_GIURIDICANull)
					return -1;
				return R_IDOBJ_FORMA_GIURIDICA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_CADENZA_REVISIONE
		/// </summary>
		public System.Int32 R_IDOBJ_CADENZA_REVISIONE
		{
			get
			{
				if(IsR_IDOBJ_CADENZA_REVISIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_CADENZA_REVISIONE;
			}
			set
			{
				_r_IDOBJ_CADENZA_REVISIONENull = false;
				_r_IDOBJ_CADENZA_REVISIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_CADENZA_REVISIONENull
		{
			get
			{
				return _r_IDOBJ_CADENZA_REVISIONENull;
			}
			set
			{
				_r_IDOBJ_CADENZA_REVISIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_CADENZA_REVISIONESafe
		{
			get
			{
				if (IsR_IDOBJ_CADENZA_REVISIONENull)
					return -1;
				return R_IDOBJ_CADENZA_REVISIONE;
			}
		}

		/// <summary>
		/// Value of field ATT_FLAG_CCIAA
		/// </summary>
		public System.Int32 ATT_FLAG_CCIAA
		{
			get
			{
				if(IsATT_FLAG_CCIAANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aTT_FLAG_CCIAA;
			}
			set
			{
				_aTT_FLAG_CCIAANull = false;
				_aTT_FLAG_CCIAA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsATT_FLAG_CCIAANull
		{
			get
			{
				return _aTT_FLAG_CCIAANull;
			}
			set
			{
				_aTT_FLAG_CCIAANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 ATT_FLAG_CCIAASafe
		{
			get
			{
				if (IsATT_FLAG_CCIAANull)
					return -1;
				return ATT_FLAG_CCIAA;
			}
		}

		/// <summary>
		/// Value of field ATT_IDOBJ_TPIO_ATT
		/// </summary>
		public System.Int32 ATT_IDOBJ_TPIO_ATT
		{
			get
			{
				if(IsATT_IDOBJ_TPIO_ATTNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aTT_IDOBJ_TPIO_ATT;
			}
			set
			{
				_aTT_IDOBJ_TPIO_ATTNull = false;
				_aTT_IDOBJ_TPIO_ATT = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsATT_IDOBJ_TPIO_ATTNull
		{
			get
			{
				return _aTT_IDOBJ_TPIO_ATTNull;
			}
			set
			{
				_aTT_IDOBJ_TPIO_ATTNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 ATT_IDOBJ_TPIO_ATTSafe
		{
			get
			{
				if (IsATT_IDOBJ_TPIO_ATTNull)
					return -1;
				return ATT_IDOBJ_TPIO_ATT;
			}
		}

		/// <summary>
		/// Value of field ADESIONE_ASSOCIAZIONE
		/// </summary>
		public System.String ADESIONE_ASSOCIAZIONE
		{
			get
			{
				if(IsADESIONE_ASSOCIAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aDESIONE_ASSOCIAZIONE;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = false;
				_aDESIONE_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsADESIONE_ASSOCIAZIONENull
		{
			get
			{
				return _aDESIONE_ASSOCIAZIONENull;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ADESIONE_ASSOCIAZIONESafe
		{
			get
			{
				if (IsADESIONE_ASSOCIAZIONENull)
					return System.String.Empty;
				return ADESIONE_ASSOCIAZIONE;
			}
		}

		/// <summary>
		/// Value of field ISCRIZIONE
		/// </summary>
		public System.String ISCRIZIONE
		{
			get
			{
				if(IsISCRIZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iSCRIZIONE;
			}
			set
			{
				_iSCRIZIONENull = false;
				_iSCRIZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsISCRIZIONENull
		{
			get
			{
				return _iSCRIZIONENull;
			}
			set
			{
				_iSCRIZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ISCRIZIONESafe
		{
			get
			{
				if (IsISCRIZIONENull)
					return System.String.Empty;
				return ISCRIZIONE;
			}
		}

	}
}