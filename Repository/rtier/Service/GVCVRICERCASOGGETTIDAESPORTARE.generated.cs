//
//Generated by DELTADATOR\GS0445 at 16/06/2009 17.10.24
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCASOGGETTIDAESPORTARE
	/// </summary>
	public partial class GVCVRICERCASOGGETTIDAESPORTARE
	{
		private System.Int32 _r_ID_SOGGETTO;
		private System.Int32 _r_ID_TIPO_SOGGETTO;
		private System.Boolean _r_ID_TIPO_SOGGETTONull = true;
		private System.Int32 _r_ASSOCIAZIONE;
		private System.String _r_NOME;
		private System.Boolean _r_NOMENull = true;
		private System.String _r_COGNOME;
		private System.Boolean _r_COGNOMENull = true;
		private System.String _r_DENOMINAZIONE;
		private System.Boolean _r_DENOMINAZIONENull = true;
		private System.String _r_CODICE_FISCALE;
		private System.Boolean _r_CODICE_FISCALENull = true;
		private System.DateTime _r_DATA_NASCITA;
		private System.Boolean _r_DATA_NASCITANull = true;
		private System.String _r_LUOGO_NASCITA;
		private System.Boolean _r_LUOGO_NASCITANull = true;
		private System.Int32 _r_CODICE_COOPERATIVA;
		private System.Boolean _r_CODICE_COOPERATIVANull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_ID_OBJ_STATO;
		private System.Boolean _r_ID_OBJ_STATONull = true;
		private System.Int32 _r_FLAG_PF;
		private System.String _r_PARTITA_IVA;
		private System.Boolean _r_PARTITA_IVANull = true;
		private System.String _r_SESSO;
		private System.Boolean _r_SESSONull = true;
		private System.String _r_COGNOME_ACQUISITO;
		private System.Boolean _r_COGNOME_ACQUISITONull = true;
		private System.String _r_STATO_NASCITA;
		private System.Boolean _r_STATO_NASCITANull = true;
		private System.String _r_CITTADINANZA;
		private System.Boolean _r_CITTADINANZANull = true;
		private System.String _r_TELEFONO_1;
		private System.Boolean _r_TELEFONO_1Null = true;
		private System.String _r_TELEFONO_2;
		private System.Boolean _r_TELEFONO_2Null = true;
		private System.String _r_CELLULARE;
		private System.Boolean _r_CELLULARENull = true;
		private System.String _r_EMAIL;
		private System.Boolean _r_EMAILNull = true;
		private System.String _r_NOTE;
		private System.Boolean _r_NOTENull = true;
		private System.Int32 _iND_IDOBJ;
		private System.Boolean _iND_IDOBJNull = true;
		private System.Int32 _iND_FLAG_PRINCIPALE;
		private System.Boolean _iND_FLAG_PRINCIPALENull = true;
		private System.Int32 _iND_FLAG_SEDE;
		private System.Boolean _iND_FLAG_SEDENull = true;
		private System.String _iND_VIA;
		private System.Boolean _iND_VIANull = true;
		private System.Int32 _iND_IDOBJ_SOGGETTO;
		private System.Boolean _iND_IDOBJ_SOGGETTONull = true;
		private System.Int32 _iND_IDOBJ_TIPO_INDIRIZZO;
		private System.Boolean _iND_IDOBJ_TIPO_INDIRIZZONull = true;
		private System.String _iND_CIVICO;
		private System.Boolean _iND_CIVICONull = true;
		private System.String _iND_CAP;
		private System.Boolean _iND_CAPNull = true;
		private System.String _iND_PROVINCIA;
		private System.Boolean _iND_PROVINCIANull = true;
		private System.String _iND_COMUNE;
		private System.Boolean _iND_COMUNENull = true;
		private System.String _iND_FRAZIONE;
		private System.Boolean _iND_FRAZIONENull = true;
		private System.String _iND_STATO;
		private System.Boolean _iND_STATONull = true;
		private System.String _iND_CODICE_STRADARIO;
		private System.Boolean _iND_CODICE_STRADARIONull = true;
		private System.String _iND_TELEFONO;
		private System.Boolean _iND_TELEFONONull = true;
		private System.String _iND_FAX;
		private System.Boolean _iND_FAXNull = true;
		private System.String _iND_ALTRO;
		private System.Boolean _iND_ALTRONull = true;
		private System.String _iND_NOTE;
		private System.Boolean _iND_NOTENull = true;
		private System.DateTime _iND_DATA_INIZIO;
		private System.Boolean _iND_DATA_INIZIONull = true;
		private System.DateTime _iND_DATA_FINE;
		private System.Boolean _iND_DATA_FINENull = true;
		private System.String _iND_EMAIL;
		private System.Boolean _iND_EMAILNull = true;
		private System.String _iND_WEBPAGE;
		private System.Boolean _iND_WEBPAGENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCASOGGETTIDAESPORTARE(){}

		/// <summary>
		/// Value of field R_ID_SOGGETTO
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_ID_SOGGETTO
		{
			get
			{
				return _r_ID_SOGGETTO;
			}
			set
			{
				_r_ID_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Value of field R_ID_TIPO_SOGGETTO
		/// </summary>
		public System.Int32 R_ID_TIPO_SOGGETTO
		{
			get
			{
				if(IsR_ID_TIPO_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ID_TIPO_SOGGETTO;
			}
			set
			{
				_r_ID_TIPO_SOGGETTONull = false;
				_r_ID_TIPO_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ID_TIPO_SOGGETTONull
		{
			get
			{
				return _r_ID_TIPO_SOGGETTONull;
			}
			set
			{
				_r_ID_TIPO_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ID_TIPO_SOGGETTOSafe
		{
			get
			{
				if (IsR_ID_TIPO_SOGGETTONull)
					return -1;
				return R_ID_TIPO_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field R_ASSOCIAZIONE
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_ASSOCIAZIONE
		{
			get
			{
				return _r_ASSOCIAZIONE;
			}
			set
			{
				_r_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Value of field R_NOME
		/// </summary>
		public System.String R_NOME
		{
			get
			{
				if(IsR_NOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NOME;
			}
			set
			{
				_r_NOMENull = false;
				_r_NOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NOMENull
		{
			get
			{
				return _r_NOMENull;
			}
			set
			{
				_r_NOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NOMESafe
		{
			get
			{
				if (IsR_NOMENull)
					return System.String.Empty;
				return R_NOME;
			}
		}

		/// <summary>
		/// Value of field R_COGNOME
		/// </summary>
		public System.String R_COGNOME
		{
			get
			{
				if(IsR_COGNOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_COGNOME;
			}
			set
			{
				_r_COGNOMENull = false;
				_r_COGNOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_COGNOMENull
		{
			get
			{
				return _r_COGNOMENull;
			}
			set
			{
				_r_COGNOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_COGNOMESafe
		{
			get
			{
				if (IsR_COGNOMENull)
					return System.String.Empty;
				return R_COGNOME;
			}
		}

		/// <summary>
		/// Value of field R_DENOMINAZIONE
		/// </summary>
		public System.String R_DENOMINAZIONE
		{
			get
			{
				if(IsR_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_DENOMINAZIONE;
			}
			set
			{
				_r_DENOMINAZIONENull = false;
				_r_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_DENOMINAZIONENull
		{
			get
			{
				return _r_DENOMINAZIONENull;
			}
			set
			{
				_r_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_DENOMINAZIONESafe
		{
			get
			{
				if (IsR_DENOMINAZIONENull)
					return System.String.Empty;
				return R_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_FISCALE
		/// </summary>
		public System.String R_CODICE_FISCALE
		{
			get
			{
				if(IsR_CODICE_FISCALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_FISCALE;
			}
			set
			{
				_r_CODICE_FISCALENull = false;
				_r_CODICE_FISCALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_FISCALENull
		{
			get
			{
				return _r_CODICE_FISCALENull;
			}
			set
			{
				_r_CODICE_FISCALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CODICE_FISCALESafe
		{
			get
			{
				if (IsR_CODICE_FISCALENull)
					return System.String.Empty;
				return R_CODICE_FISCALE;
			}
		}

		/// <summary>
		/// Value of field R_DATA_NASCITA
		/// </summary>
		public System.DateTime R_DATA_NASCITA
		{
			get
			{
				if(IsR_DATA_NASCITANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_DATA_NASCITA;
			}
			set
			{
				_r_DATA_NASCITANull = false;
				_r_DATA_NASCITA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_DATA_NASCITANull
		{
			get
			{
				return _r_DATA_NASCITANull;
			}
			set
			{
				_r_DATA_NASCITANull = value;
			}
		}

		/// <summary>
		/// Value of field R_LUOGO_NASCITA
		/// </summary>
		public System.String R_LUOGO_NASCITA
		{
			get
			{
				if(IsR_LUOGO_NASCITANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_LUOGO_NASCITA;
			}
			set
			{
				_r_LUOGO_NASCITANull = false;
				_r_LUOGO_NASCITA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_LUOGO_NASCITANull
		{
			get
			{
				return _r_LUOGO_NASCITANull;
			}
			set
			{
				_r_LUOGO_NASCITANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_LUOGO_NASCITASafe
		{
			get
			{
				if (IsR_LUOGO_NASCITANull)
					return System.String.Empty;
				return R_LUOGO_NASCITA;
			}
		}

		/// <summary>
		/// Value of field R_CODICE_COOPERATIVA
		/// </summary>
		public System.Int32 R_CODICE_COOPERATIVA
		{
			get
			{
				if(IsR_CODICE_COOPERATIVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CODICE_COOPERATIVA;
			}
			set
			{
				_r_CODICE_COOPERATIVANull = false;
				_r_CODICE_COOPERATIVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CODICE_COOPERATIVANull
		{
			get
			{
				return _r_CODICE_COOPERATIVANull;
			}
			set
			{
				_r_CODICE_COOPERATIVANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_CODICE_COOPERATIVASafe
		{
			get
			{
				if (IsR_CODICE_COOPERATIVANull)
					return -1;
				return R_CODICE_COOPERATIVA;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_ID_OBJ_STATO
		/// </summary>
		public System.Int32 R_ID_OBJ_STATO
		{
			get
			{
				if(IsR_ID_OBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_ID_OBJ_STATO;
			}
			set
			{
				_r_ID_OBJ_STATONull = false;
				_r_ID_OBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_ID_OBJ_STATONull
		{
			get
			{
				return _r_ID_OBJ_STATONull;
			}
			set
			{
				_r_ID_OBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_ID_OBJ_STATOSafe
		{
			get
			{
				if (IsR_ID_OBJ_STATONull)
					return -1;
				return R_ID_OBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field R_FLAG_PF
		/// The field is mandatory.
		/// </summary>
		public System.Int32 R_FLAG_PF
		{
			get
			{
				return _r_FLAG_PF;
			}
			set
			{
				_r_FLAG_PF = value;
			}
		}

		/// <summary>
		/// Value of field R_PARTITA_IVA
		/// </summary>
		public System.String R_PARTITA_IVA
		{
			get
			{
				if(IsR_PARTITA_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_PARTITA_IVA;
			}
			set
			{
				_r_PARTITA_IVANull = false;
				_r_PARTITA_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_PARTITA_IVANull
		{
			get
			{
				return _r_PARTITA_IVANull;
			}
			set
			{
				_r_PARTITA_IVANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_PARTITA_IVASafe
		{
			get
			{
				if (IsR_PARTITA_IVANull)
					return System.String.Empty;
				return R_PARTITA_IVA;
			}
		}

		/// <summary>
		/// Value of field R_SESSO
		/// </summary>
		public System.String R_SESSO
		{
			get
			{
				if(IsR_SESSONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_SESSO;
			}
			set
			{
				_r_SESSONull = false;
				_r_SESSO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_SESSONull
		{
			get
			{
				return _r_SESSONull;
			}
			set
			{
				_r_SESSONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_SESSOSafe
		{
			get
			{
				if (IsR_SESSONull)
					return System.String.Empty;
				return R_SESSO;
			}
		}

		/// <summary>
		/// Value of field R_COGNOME_ACQUISITO
		/// </summary>
		public System.String R_COGNOME_ACQUISITO
		{
			get
			{
				if(IsR_COGNOME_ACQUISITONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_COGNOME_ACQUISITO;
			}
			set
			{
				_r_COGNOME_ACQUISITONull = false;
				_r_COGNOME_ACQUISITO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_COGNOME_ACQUISITONull
		{
			get
			{
				return _r_COGNOME_ACQUISITONull;
			}
			set
			{
				_r_COGNOME_ACQUISITONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_COGNOME_ACQUISITOSafe
		{
			get
			{
				if (IsR_COGNOME_ACQUISITONull)
					return System.String.Empty;
				return R_COGNOME_ACQUISITO;
			}
		}

		/// <summary>
		/// Value of field R_STATO_NASCITA
		/// </summary>
		public System.String R_STATO_NASCITA
		{
			get
			{
				if(IsR_STATO_NASCITANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_STATO_NASCITA;
			}
			set
			{
				_r_STATO_NASCITANull = false;
				_r_STATO_NASCITA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_STATO_NASCITANull
		{
			get
			{
				return _r_STATO_NASCITANull;
			}
			set
			{
				_r_STATO_NASCITANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_STATO_NASCITASafe
		{
			get
			{
				if (IsR_STATO_NASCITANull)
					return System.String.Empty;
				return R_STATO_NASCITA;
			}
		}

		/// <summary>
		/// Value of field R_CITTADINANZA
		/// </summary>
		public System.String R_CITTADINANZA
		{
			get
			{
				if(IsR_CITTADINANZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CITTADINANZA;
			}
			set
			{
				_r_CITTADINANZANull = false;
				_r_CITTADINANZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CITTADINANZANull
		{
			get
			{
				return _r_CITTADINANZANull;
			}
			set
			{
				_r_CITTADINANZANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CITTADINANZASafe
		{
			get
			{
				if (IsR_CITTADINANZANull)
					return System.String.Empty;
				return R_CITTADINANZA;
			}
		}

		/// <summary>
		/// Value of field R_TELEFONO_1
		/// </summary>
		public System.String R_TELEFONO_1
		{
			get
			{
				if(IsR_TELEFONO_1Null)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_TELEFONO_1;
			}
			set
			{
				_r_TELEFONO_1Null = false;
				_r_TELEFONO_1 = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_TELEFONO_1Null
		{
			get
			{
				return _r_TELEFONO_1Null;
			}
			set
			{
				_r_TELEFONO_1Null = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_TELEFONO_1Safe
		{
			get
			{
				if (IsR_TELEFONO_1Null)
					return System.String.Empty;
				return R_TELEFONO_1;
			}
		}

		/// <summary>
		/// Value of field R_TELEFONO_2
		/// </summary>
		public System.String R_TELEFONO_2
		{
			get
			{
				if(IsR_TELEFONO_2Null)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_TELEFONO_2;
			}
			set
			{
				_r_TELEFONO_2Null = false;
				_r_TELEFONO_2 = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_TELEFONO_2Null
		{
			get
			{
				return _r_TELEFONO_2Null;
			}
			set
			{
				_r_TELEFONO_2Null = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_TELEFONO_2Safe
		{
			get
			{
				if (IsR_TELEFONO_2Null)
					return System.String.Empty;
				return R_TELEFONO_2;
			}
		}

		/// <summary>
		/// Value of field R_CELLULARE
		/// </summary>
		public System.String R_CELLULARE
		{
			get
			{
				if(IsR_CELLULARENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_CELLULARE;
			}
			set
			{
				_r_CELLULARENull = false;
				_r_CELLULARE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_CELLULARENull
		{
			get
			{
				return _r_CELLULARENull;
			}
			set
			{
				_r_CELLULARENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_CELLULARESafe
		{
			get
			{
				if (IsR_CELLULARENull)
					return System.String.Empty;
				return R_CELLULARE;
			}
		}

		/// <summary>
		/// Value of field R_EMAIL
		/// </summary>
		public System.String R_EMAIL
		{
			get
			{
				if(IsR_EMAILNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_EMAIL;
			}
			set
			{
				_r_EMAILNull = false;
				_r_EMAIL = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_EMAILNull
		{
			get
			{
				return _r_EMAILNull;
			}
			set
			{
				_r_EMAILNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_EMAILSafe
		{
			get
			{
				if (IsR_EMAILNull)
					return System.String.Empty;
				return R_EMAIL;
			}
		}

		/// <summary>
		/// Value of field R_NOTE
		/// </summary>
		public System.String R_NOTE
		{
			get
			{
				if(IsR_NOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NOTE;
			}
			set
			{
				_r_NOTENull = false;
				_r_NOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NOTENull
		{
			get
			{
				return _r_NOTENull;
			}
			set
			{
				_r_NOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NOTESafe
		{
			get
			{
				if (IsR_NOTENull)
					return System.String.Empty;
				return R_NOTE;
			}
		}

		/// <summary>
		/// Value of field IND_IDOBJ
		/// </summary>
		public System.Int32 IND_IDOBJ
		{
			get
			{
				if(IsIND_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_IDOBJ;
			}
			set
			{
				_iND_IDOBJNull = false;
				_iND_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_IDOBJNull
		{
			get
			{
				return _iND_IDOBJNull;
			}
			set
			{
				_iND_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IND_IDOBJSafe
		{
			get
			{
				if (IsIND_IDOBJNull)
					return -1;
				return IND_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field IND_FLAG_PRINCIPALE
		/// </summary>
		public System.Int32 IND_FLAG_PRINCIPALE
		{
			get
			{
				if(IsIND_FLAG_PRINCIPALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_FLAG_PRINCIPALE;
			}
			set
			{
				_iND_FLAG_PRINCIPALENull = false;
				_iND_FLAG_PRINCIPALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_FLAG_PRINCIPALENull
		{
			get
			{
				return _iND_FLAG_PRINCIPALENull;
			}
			set
			{
				_iND_FLAG_PRINCIPALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IND_FLAG_PRINCIPALESafe
		{
			get
			{
				if (IsIND_FLAG_PRINCIPALENull)
					return -1;
				return IND_FLAG_PRINCIPALE;
			}
		}

		/// <summary>
		/// Value of field IND_FLAG_SEDE
		/// </summary>
		public System.Int32 IND_FLAG_SEDE
		{
			get
			{
				if(IsIND_FLAG_SEDENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_FLAG_SEDE;
			}
			set
			{
				_iND_FLAG_SEDENull = false;
				_iND_FLAG_SEDE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_FLAG_SEDENull
		{
			get
			{
				return _iND_FLAG_SEDENull;
			}
			set
			{
				_iND_FLAG_SEDENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IND_FLAG_SEDESafe
		{
			get
			{
				if (IsIND_FLAG_SEDENull)
					return -1;
				return IND_FLAG_SEDE;
			}
		}

		/// <summary>
		/// Value of field IND_VIA
		/// </summary>
		public System.String IND_VIA
		{
			get
			{
				if(IsIND_VIANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_VIA;
			}
			set
			{
				_iND_VIANull = false;
				_iND_VIA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_VIANull
		{
			get
			{
				return _iND_VIANull;
			}
			set
			{
				_iND_VIANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_VIASafe
		{
			get
			{
				if (IsIND_VIANull)
					return System.String.Empty;
				return IND_VIA;
			}
		}

		/// <summary>
		/// Value of field IND_IDOBJ_SOGGETTO
		/// </summary>
		public System.Int32 IND_IDOBJ_SOGGETTO
		{
			get
			{
				if(IsIND_IDOBJ_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_IDOBJ_SOGGETTO;
			}
			set
			{
				_iND_IDOBJ_SOGGETTONull = false;
				_iND_IDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_IDOBJ_SOGGETTONull
		{
			get
			{
				return _iND_IDOBJ_SOGGETTONull;
			}
			set
			{
				_iND_IDOBJ_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IND_IDOBJ_SOGGETTOSafe
		{
			get
			{
				if (IsIND_IDOBJ_SOGGETTONull)
					return -1;
				return IND_IDOBJ_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field IND_IDOBJ_TIPO_INDIRIZZO
		/// </summary>
		public System.Int32 IND_IDOBJ_TIPO_INDIRIZZO
		{
			get
			{
				if(IsIND_IDOBJ_TIPO_INDIRIZZONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_IDOBJ_TIPO_INDIRIZZO;
			}
			set
			{
				_iND_IDOBJ_TIPO_INDIRIZZONull = false;
				_iND_IDOBJ_TIPO_INDIRIZZO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_IDOBJ_TIPO_INDIRIZZONull
		{
			get
			{
				return _iND_IDOBJ_TIPO_INDIRIZZONull;
			}
			set
			{
				_iND_IDOBJ_TIPO_INDIRIZZONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IND_IDOBJ_TIPO_INDIRIZZOSafe
		{
			get
			{
				if (IsIND_IDOBJ_TIPO_INDIRIZZONull)
					return -1;
				return IND_IDOBJ_TIPO_INDIRIZZO;
			}
		}

		/// <summary>
		/// Value of field IND_CIVICO
		/// </summary>
		public System.String IND_CIVICO
		{
			get
			{
				if(IsIND_CIVICONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_CIVICO;
			}
			set
			{
				_iND_CIVICONull = false;
				_iND_CIVICO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_CIVICONull
		{
			get
			{
				return _iND_CIVICONull;
			}
			set
			{
				_iND_CIVICONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_CIVICOSafe
		{
			get
			{
				if (IsIND_CIVICONull)
					return System.String.Empty;
				return IND_CIVICO;
			}
		}

		/// <summary>
		/// Value of field IND_CAP
		/// </summary>
		public System.String IND_CAP
		{
			get
			{
				if(IsIND_CAPNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_CAP;
			}
			set
			{
				_iND_CAPNull = false;
				_iND_CAP = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_CAPNull
		{
			get
			{
				return _iND_CAPNull;
			}
			set
			{
				_iND_CAPNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_CAPSafe
		{
			get
			{
				if (IsIND_CAPNull)
					return System.String.Empty;
				return IND_CAP;
			}
		}

		/// <summary>
		/// Value of field IND_PROVINCIA
		/// </summary>
		public System.String IND_PROVINCIA
		{
			get
			{
				if(IsIND_PROVINCIANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_PROVINCIA;
			}
			set
			{
				_iND_PROVINCIANull = false;
				_iND_PROVINCIA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_PROVINCIANull
		{
			get
			{
				return _iND_PROVINCIANull;
			}
			set
			{
				_iND_PROVINCIANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_PROVINCIASafe
		{
			get
			{
				if (IsIND_PROVINCIANull)
					return System.String.Empty;
				return IND_PROVINCIA;
			}
		}

		/// <summary>
		/// Value of field IND_COMUNE
		/// </summary>
		public System.String IND_COMUNE
		{
			get
			{
				if(IsIND_COMUNENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_COMUNE;
			}
			set
			{
				_iND_COMUNENull = false;
				_iND_COMUNE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_COMUNENull
		{
			get
			{
				return _iND_COMUNENull;
			}
			set
			{
				_iND_COMUNENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_COMUNESafe
		{
			get
			{
				if (IsIND_COMUNENull)
					return System.String.Empty;
				return IND_COMUNE;
			}
		}

		/// <summary>
		/// Value of field IND_FRAZIONE
		/// </summary>
		public System.String IND_FRAZIONE
		{
			get
			{
				if(IsIND_FRAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_FRAZIONE;
			}
			set
			{
				_iND_FRAZIONENull = false;
				_iND_FRAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_FRAZIONENull
		{
			get
			{
				return _iND_FRAZIONENull;
			}
			set
			{
				_iND_FRAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_FRAZIONESafe
		{
			get
			{
				if (IsIND_FRAZIONENull)
					return System.String.Empty;
				return IND_FRAZIONE;
			}
		}

		/// <summary>
		/// Value of field IND_STATO
		/// </summary>
		public System.String IND_STATO
		{
			get
			{
				if(IsIND_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_STATO;
			}
			set
			{
				_iND_STATONull = false;
				_iND_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_STATONull
		{
			get
			{
				return _iND_STATONull;
			}
			set
			{
				_iND_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_STATOSafe
		{
			get
			{
				if (IsIND_STATONull)
					return System.String.Empty;
				return IND_STATO;
			}
		}

		/// <summary>
		/// Value of field IND_CODICE_STRADARIO
		/// </summary>
		public System.String IND_CODICE_STRADARIO
		{
			get
			{
				if(IsIND_CODICE_STRADARIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_CODICE_STRADARIO;
			}
			set
			{
				_iND_CODICE_STRADARIONull = false;
				_iND_CODICE_STRADARIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_CODICE_STRADARIONull
		{
			get
			{
				return _iND_CODICE_STRADARIONull;
			}
			set
			{
				_iND_CODICE_STRADARIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_CODICE_STRADARIOSafe
		{
			get
			{
				if (IsIND_CODICE_STRADARIONull)
					return System.String.Empty;
				return IND_CODICE_STRADARIO;
			}
		}

		/// <summary>
		/// Value of field IND_TELEFONO
		/// </summary>
		public System.String IND_TELEFONO
		{
			get
			{
				if(IsIND_TELEFONONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_TELEFONO;
			}
			set
			{
				_iND_TELEFONONull = false;
				_iND_TELEFONO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_TELEFONONull
		{
			get
			{
				return _iND_TELEFONONull;
			}
			set
			{
				_iND_TELEFONONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_TELEFONOSafe
		{
			get
			{
				if (IsIND_TELEFONONull)
					return System.String.Empty;
				return IND_TELEFONO;
			}
		}

		/// <summary>
		/// Value of field IND_FAX
		/// </summary>
		public System.String IND_FAX
		{
			get
			{
				if(IsIND_FAXNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_FAX;
			}
			set
			{
				_iND_FAXNull = false;
				_iND_FAX = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_FAXNull
		{
			get
			{
				return _iND_FAXNull;
			}
			set
			{
				_iND_FAXNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_FAXSafe
		{
			get
			{
				if (IsIND_FAXNull)
					return System.String.Empty;
				return IND_FAX;
			}
		}

		/// <summary>
		/// Value of field IND_ALTRO
		/// </summary>
		public System.String IND_ALTRO
		{
			get
			{
				if(IsIND_ALTRONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_ALTRO;
			}
			set
			{
				_iND_ALTRONull = false;
				_iND_ALTRO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_ALTRONull
		{
			get
			{
				return _iND_ALTRONull;
			}
			set
			{
				_iND_ALTRONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_ALTROSafe
		{
			get
			{
				if (IsIND_ALTRONull)
					return System.String.Empty;
				return IND_ALTRO;
			}
		}

		/// <summary>
		/// Value of field IND_NOTE
		/// </summary>
		public System.String IND_NOTE
		{
			get
			{
				if(IsIND_NOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_NOTE;
			}
			set
			{
				_iND_NOTENull = false;
				_iND_NOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_NOTENull
		{
			get
			{
				return _iND_NOTENull;
			}
			set
			{
				_iND_NOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_NOTESafe
		{
			get
			{
				if (IsIND_NOTENull)
					return System.String.Empty;
				return IND_NOTE;
			}
		}

		/// <summary>
		/// Value of field IND_DATA_INIZIO
		/// </summary>
		public System.DateTime IND_DATA_INIZIO
		{
			get
			{
				if(IsIND_DATA_INIZIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_DATA_INIZIO;
			}
			set
			{
				_iND_DATA_INIZIONull = false;
				_iND_DATA_INIZIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_DATA_INIZIONull
		{
			get
			{
				return _iND_DATA_INIZIONull;
			}
			set
			{
				_iND_DATA_INIZIONull = value;
			}
		}

		/// <summary>
		/// Value of field IND_DATA_FINE
		/// </summary>
		public System.DateTime IND_DATA_FINE
		{
			get
			{
				if(IsIND_DATA_FINENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_DATA_FINE;
			}
			set
			{
				_iND_DATA_FINENull = false;
				_iND_DATA_FINE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_DATA_FINENull
		{
			get
			{
				return _iND_DATA_FINENull;
			}
			set
			{
				_iND_DATA_FINENull = value;
			}
		}

		/// <summary>
		/// Value of field IND_EMAIL
		/// </summary>
		public System.String IND_EMAIL
		{
			get
			{
				if(IsIND_EMAILNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_EMAIL;
			}
			set
			{
				_iND_EMAILNull = false;
				_iND_EMAIL = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_EMAILNull
		{
			get
			{
				return _iND_EMAILNull;
			}
			set
			{
				_iND_EMAILNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_EMAILSafe
		{
			get
			{
				if (IsIND_EMAILNull)
					return System.String.Empty;
				return IND_EMAIL;
			}
		}

		/// <summary>
		/// Value of field IND_WEBPAGE
		/// </summary>
		public System.String IND_WEBPAGE
		{
			get
			{
				if(IsIND_WEBPAGENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iND_WEBPAGE;
			}
			set
			{
				_iND_WEBPAGENull = false;
				_iND_WEBPAGE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIND_WEBPAGENull
		{
			get
			{
				return _iND_WEBPAGENull;
			}
			set
			{
				_iND_WEBPAGENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String IND_WEBPAGESafe
		{
			get
			{
				if (IsIND_WEBPAGENull)
					return System.String.Empty;
				return IND_WEBPAGE;
			}
		}

	}
}