//
//Generated by DELTADATOR\GS0445 at 06/04/2010 15.56.50
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTREVISIONI
	/// </summary>
	public partial class GVCTREVISIONI
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _aNNO_REVISIONE;
		private System.Int32 _iDOBJ_TIPO_REVISIONE;
		private System.Int32 _iDOBJ_REGISTRO;
		private System.DateTime _dATA_CONCLUSIONE;
		private System.Boolean _dATA_CONCLUSIONENull = true;
		private System.DateTime _dATA_DEPOSITO_RELAZIONE;
		private System.Boolean _dATA_DEPOSITO_RELAZIONENull = true;
		private System.String _nUMERO_DELIBERA_ESAME;
		private System.Boolean _nUMERO_DELIBERA_ESAMENull = true;
		private System.DateTime _dATA_DELIBERA_ESAME;
		private System.Boolean _dATA_DELIBERA_ESAMENull = true;
		private System.String _nUMERO_DETERMINA_ESAME;
		private System.Boolean _nUMERO_DETERMINA_ESAMENull = true;
		private System.DateTime _dATA_DETERMINA_ESAME;
		private System.Boolean _dATA_DETERMINA_ESAMENull = true;
		private System.DateTime _dATA_COMUNICAZIONE_ESITI;
		private System.Boolean _dATA_COMUNICAZIONE_ESITINull = true;
		private System.String _nUMERO_DELIBERA_REVOCA;
		private System.Boolean _nUMERO_DELIBERA_REVOCANull = true;
		private System.DateTime _dATA_DELIBERA_REVOCA;
		private System.Boolean _dATA_DELIBERA_REVOCANull = true;
		private System.String _nUMERO_DETERMINA_REVOCA;
		private System.Boolean _nUMERO_DETERMINA_REVOCANull = true;
		private System.DateTime _dATA_DETERMINA_REVOCA;
		private System.Boolean _dATA_DETERMINA_REVOCANull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;
		private System.Int32 _iDOBJ_ORGANO_REVISORE;
		private System.Boolean _iDOBJ_ORGANO_REVISORENull = true;
		private System.Int32 _iDOBJ_ESITO_REVISIONE;
		private System.Boolean _iDOBJ_ESITO_REVISIONENull = true;
		private System.Int32 _iDOBJ_LIMITE_COSTO;
		private System.Boolean _iDOBJ_LIMITE_COSTONull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTREVISIONI(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Anno revisione
		/// The field is mandatory.
		/// </summary>
		public System.Int32 ANNO_REVISIONE
		{
			get
			{
				return _aNNO_REVISIONE;
			}
			set
			{
				_aNNO_REVISIONE = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_TIPO_REVISIONE
		{
			get
			{
				return _iDOBJ_TIPO_REVISIONE;
			}
			set
			{
				_iDOBJ_TIPO_REVISIONE = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_REGISTRO
		{
			get
			{
				return _iDOBJ_REGISTRO;
			}
			set
			{
				_iDOBJ_REGISTRO = value;
			}
		}

		/// <summary>
		/// Data conclusione revisione
		/// </summary>
		public System.DateTime DATA_CONCLUSIONE
		{
			get
			{
				if(IsDATA_CONCLUSIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_CONCLUSIONE;
			}
			set
			{
				_dATA_CONCLUSIONENull = false;
				_dATA_CONCLUSIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_CONCLUSIONENull
		{
			get
			{
				return _dATA_CONCLUSIONENull;
			}
			set
			{
				_dATA_CONCLUSIONENull = value;
			}
		}

		/// <summary>
		/// Data deposito relazione
		/// </summary>
		public System.DateTime DATA_DEPOSITO_RELAZIONE
		{
			get
			{
				if(IsDATA_DEPOSITO_RELAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DEPOSITO_RELAZIONE;
			}
			set
			{
				_dATA_DEPOSITO_RELAZIONENull = false;
				_dATA_DEPOSITO_RELAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DEPOSITO_RELAZIONENull
		{
			get
			{
				return _dATA_DEPOSITO_RELAZIONENull;
			}
			set
			{
				_dATA_DEPOSITO_RELAZIONENull = value;
			}
		}

		/// <summary>
		/// Numero delibera esame commissione
		/// </summary>
		public System.String NUMERO_DELIBERA_ESAME
		{
			get
			{
				if(IsNUMERO_DELIBERA_ESAMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_ESAME;
			}
			set
			{
				_nUMERO_DELIBERA_ESAMENull = false;
				_nUMERO_DELIBERA_ESAME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_ESAMENull
		{
			get
			{
				return _nUMERO_DELIBERA_ESAMENull;
			}
			set
			{
				_nUMERO_DELIBERA_ESAMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_ESAMESafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_ESAMENull)
					return System.String.Empty;
				return NUMERO_DELIBERA_ESAME;
			}
		}

		/// <summary>
		/// Data delibera esame commissione
		/// </summary>
		public System.DateTime DATA_DELIBERA_ESAME
		{
			get
			{
				if(IsDATA_DELIBERA_ESAMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_ESAME;
			}
			set
			{
				_dATA_DELIBERA_ESAMENull = false;
				_dATA_DELIBERA_ESAME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_ESAMENull
		{
			get
			{
				return _dATA_DELIBERA_ESAMENull;
			}
			set
			{
				_dATA_DELIBERA_ESAMENull = value;
			}
		}

		/// <summary>
		/// Numero determina esame
		/// </summary>
		public System.String NUMERO_DETERMINA_ESAME
		{
			get
			{
				if(IsNUMERO_DETERMINA_ESAMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA_ESAME;
			}
			set
			{
				_nUMERO_DETERMINA_ESAMENull = false;
				_nUMERO_DETERMINA_ESAME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINA_ESAMENull
		{
			get
			{
				return _nUMERO_DETERMINA_ESAMENull;
			}
			set
			{
				_nUMERO_DETERMINA_ESAMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINA_ESAMESafe
		{
			get
			{
				if (IsNUMERO_DETERMINA_ESAMENull)
					return System.String.Empty;
				return NUMERO_DETERMINA_ESAME;
			}
		}

		/// <summary>
		/// Data determina esame
		/// </summary>
		public System.DateTime DATA_DETERMINA_ESAME
		{
			get
			{
				if(IsDATA_DETERMINA_ESAMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA_ESAME;
			}
			set
			{
				_dATA_DETERMINA_ESAMENull = false;
				_dATA_DETERMINA_ESAME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINA_ESAMENull
		{
			get
			{
				return _dATA_DETERMINA_ESAMENull;
			}
			set
			{
				_dATA_DETERMINA_ESAMENull = value;
			}
		}

		/// <summary>
		/// Data nota comunicazione esiti
		/// </summary>
		public System.DateTime DATA_COMUNICAZIONE_ESITI
		{
			get
			{
				if(IsDATA_COMUNICAZIONE_ESITINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_COMUNICAZIONE_ESITI;
			}
			set
			{
				_dATA_COMUNICAZIONE_ESITINull = false;
				_dATA_COMUNICAZIONE_ESITI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_COMUNICAZIONE_ESITINull
		{
			get
			{
				return _dATA_COMUNICAZIONE_ESITINull;
			}
			set
			{
				_dATA_COMUNICAZIONE_ESITINull = value;
			}
		}

		/// <summary>
		/// Numero delibera revoca commissione
		/// </summary>
		public System.String NUMERO_DELIBERA_REVOCA
		{
			get
			{
				if(IsNUMERO_DELIBERA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA_REVOCA;
			}
			set
			{
				_nUMERO_DELIBERA_REVOCANull = false;
				_nUMERO_DELIBERA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERA_REVOCANull
		{
			get
			{
				return _nUMERO_DELIBERA_REVOCANull;
			}
			set
			{
				_nUMERO_DELIBERA_REVOCANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERA_REVOCASafe
		{
			get
			{
				if (IsNUMERO_DELIBERA_REVOCANull)
					return System.String.Empty;
				return NUMERO_DELIBERA_REVOCA;
			}
		}

		/// <summary>
		/// Data delibera revoca commissione
		/// </summary>
		public System.DateTime DATA_DELIBERA_REVOCA
		{
			get
			{
				if(IsDATA_DELIBERA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA_REVOCA;
			}
			set
			{
				_dATA_DELIBERA_REVOCANull = false;
				_dATA_DELIBERA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERA_REVOCANull
		{
			get
			{
				return _dATA_DELIBERA_REVOCANull;
			}
			set
			{
				_dATA_DELIBERA_REVOCANull = value;
			}
		}

		/// <summary>
		/// Numero determina revoca
		/// </summary>
		public System.String NUMERO_DETERMINA_REVOCA
		{
			get
			{
				if(IsNUMERO_DETERMINA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA_REVOCA;
			}
			set
			{
				_nUMERO_DETERMINA_REVOCANull = false;
				_nUMERO_DETERMINA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINA_REVOCANull
		{
			get
			{
				return _nUMERO_DETERMINA_REVOCANull;
			}
			set
			{
				_nUMERO_DETERMINA_REVOCANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINA_REVOCASafe
		{
			get
			{
				if (IsNUMERO_DETERMINA_REVOCANull)
					return System.String.Empty;
				return NUMERO_DETERMINA_REVOCA;
			}
		}

		/// <summary>
		/// Data determina revoca
		/// </summary>
		public System.DateTime DATA_DETERMINA_REVOCA
		{
			get
			{
				if(IsDATA_DETERMINA_REVOCANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA_REVOCA;
			}
			set
			{
				_dATA_DETERMINA_REVOCANull = false;
				_dATA_DETERMINA_REVOCA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINA_REVOCANull
		{
			get
			{
				return _dATA_DETERMINA_REVOCANull;
			}
			set
			{
				_dATA_DETERMINA_REVOCANull = value;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_ORGANO_REVISORE
		{
			get
			{
				if(IsIDOBJ_ORGANO_REVISORENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_ORGANO_REVISORE;
			}
			set
			{
				_iDOBJ_ORGANO_REVISORENull = false;
				_iDOBJ_ORGANO_REVISORE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_ORGANO_REVISORENull
		{
			get
			{
				return _iDOBJ_ORGANO_REVISORENull;
			}
			set
			{
				_iDOBJ_ORGANO_REVISORENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_ORGANO_REVISORESafe
		{
			get
			{
				if (IsIDOBJ_ORGANO_REVISORENull)
					return -1;
				return IDOBJ_ORGANO_REVISORE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_ESITO_REVISIONE
		{
			get
			{
				if(IsIDOBJ_ESITO_REVISIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_ESITO_REVISIONE;
			}
			set
			{
				_iDOBJ_ESITO_REVISIONENull = false;
				_iDOBJ_ESITO_REVISIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_ESITO_REVISIONENull
		{
			get
			{
				return _iDOBJ_ESITO_REVISIONENull;
			}
			set
			{
				_iDOBJ_ESITO_REVISIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_ESITO_REVISIONESafe
		{
			get
			{
				if (IsIDOBJ_ESITO_REVISIONENull)
					return -1;
				return IDOBJ_ESITO_REVISIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_LIMITE_COSTO
		{
			get
			{
				if(IsIDOBJ_LIMITE_COSTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_LIMITE_COSTO;
			}
			set
			{
				_iDOBJ_LIMITE_COSTONull = false;
				_iDOBJ_LIMITE_COSTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_LIMITE_COSTONull
		{
			get
			{
				return _iDOBJ_LIMITE_COSTONull;
			}
			set
			{
				_iDOBJ_LIMITE_COSTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_LIMITE_COSTOSafe
		{
			get
			{
				if (IsIDOBJ_LIMITE_COSTONull)
					return -1;
				return IDOBJ_LIMITE_COSTO;
			}
		}

	}
}