//
//Generated by DELTADATOR\GS0445 at 10/07/2009 16.09.32
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTDOCUMENTAZIONE
	/// </summary>
	public partial class GVCTDOCUMENTAZIONE
	{
		private System.Int32 _iDOBJ;
		private System.DateTime _dATA_DOCUMENTO;
		private System.Int32 _iDOBJ_TIPO_DOCUMENTO;
		private System.String _sEGNALIBRO;
		private System.Boolean _sEGNALIBRONull = true;
		private System.String _nUMERO_PROTOCOLLO;
		private System.Boolean _nUMERO_PROTOCOLLONull = true;
		private System.DateTime _dATA_PROTOCOLLO;
		private System.Boolean _dATA_PROTOCOLLONull = true;
		private System.Byte[] _tESTO;
		private System.Boolean _tESTONull = true;
		private System.String _nOTE;
		private System.Boolean _nOTENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;
		private System.Int32 _iDOBJ_ADESIONE;
		private System.Boolean _iDOBJ_ADESIONENull = true;
		private System.Int32 _iDOBJ_REGISTRO;
		private System.Boolean _iDOBJ_REGISTRONull = true;
		private System.Int32 _iDOBJ_LIQUIDAZIONE;
		private System.Boolean _iDOBJ_LIQUIDAZIONENull = true;
		private System.Int32 _iDOBJ_REVISIONE;
		private System.Boolean _iDOBJ_REVISIONENull = true;
		private System.Int32 _iDOBJ_ASSEMBLEA;
		private System.Boolean _iDOBJ_ASSEMBLEANull = true;
		private System.Int32 _iDOBJ_BASE_SOCIALE;
		private System.Boolean _iDOBJ_BASE_SOCIALENull = true;
		private System.Int32 _iDOBJ_BILANCIO;
		private System.Boolean _iDOBJ_BILANCIONull = true;
		private System.Int32 _iDOBJ_CARICHE;
		private System.Boolean _iDOBJ_CARICHENull = true;
		private System.Int32 _iDOBJ_FALLIMENTO;
		private System.Boolean _iDOBJ_FALLIMENTONull = true;
		private System.Int32 _iDOBJ_PROCEDURA;
		private System.Boolean _iDOBJ_PROCEDURANull = true;
		private System.String _nOME_FILE;
		private System.Boolean _nOME_FILENull = true;
		private System.Int32 _dIMENSIONE;
		private System.Boolean _dIMENSIONENull = true;
		private System.Int32 _iDOBJ_SANZIONE;
		private System.Boolean _iDOBJ_SANZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTDOCUMENTAZIONE(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Data documento
		/// The field is mandatory.
		/// </summary>
		public System.DateTime DATA_DOCUMENTO
		{
			get
			{
				return _dATA_DOCUMENTO;
			}
			set
			{
				_dATA_DOCUMENTO = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_TIPO_DOCUMENTO
		{
			get
			{
				return _iDOBJ_TIPO_DOCUMENTO;
			}
			set
			{
				_iDOBJ_TIPO_DOCUMENTO = value;
			}
		}

		/// <summary>
		/// Segnalibro
		/// </summary>
		public System.String SEGNALIBRO
		{
			get
			{
				if(IsSEGNALIBRONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _sEGNALIBRO;
			}
			set
			{
				_sEGNALIBRONull = false;
				_sEGNALIBRO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsSEGNALIBRONull
		{
			get
			{
				return _sEGNALIBRONull;
			}
			set
			{
				_sEGNALIBRONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String SEGNALIBROSafe
		{
			get
			{
				if (IsSEGNALIBRONull)
					return System.String.Empty;
				return SEGNALIBRO;
			}
		}

		/// <summary>
		/// Numero protocollo
		/// </summary>
		public System.String NUMERO_PROTOCOLLO
		{
			get
			{
				if(IsNUMERO_PROTOCOLLONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_PROTOCOLLO;
			}
			set
			{
				_nUMERO_PROTOCOLLONull = false;
				_nUMERO_PROTOCOLLO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_PROTOCOLLONull
		{
			get
			{
				return _nUMERO_PROTOCOLLONull;
			}
			set
			{
				_nUMERO_PROTOCOLLONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_PROTOCOLLOSafe
		{
			get
			{
				if (IsNUMERO_PROTOCOLLONull)
					return System.String.Empty;
				return NUMERO_PROTOCOLLO;
			}
		}

		/// <summary>
		/// Data protocollo
		/// </summary>
		public System.DateTime DATA_PROTOCOLLO
		{
			get
			{
				if(IsDATA_PROTOCOLLONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_PROTOCOLLO;
			}
			set
			{
				_dATA_PROTOCOLLONull = false;
				_dATA_PROTOCOLLO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_PROTOCOLLONull
		{
			get
			{
				return _dATA_PROTOCOLLONull;
			}
			set
			{
				_dATA_PROTOCOLLONull = value;
			}
		}

		/// <summary>
		/// Documento allegato
		/// </summary>
		public System.Byte[] TESTO
		{
			get
			{
				if(IsTESTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _tESTO;
			}
			set
			{
				_tESTONull = false;
				_tESTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsTESTONull
		{
			get
			{
				return _tESTONull;
			}
			set
			{
				_tESTONull = value;
			}
		}

		/// <summary>
		/// Value of field NOTE
		/// </summary>
		public System.String NOTE
		{
			get
			{
				if(IsNOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOTE;
			}
			set
			{
				_nOTENull = false;
				_nOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOTENull
		{
			get
			{
				return _nOTENull;
			}
			set
			{
				_nOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOTESafe
		{
			get
			{
				if (IsNOTENull)
					return System.String.Empty;
				return NOTE;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_ADESIONE
		{
			get
			{
				if(IsIDOBJ_ADESIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_ADESIONE;
			}
			set
			{
				_iDOBJ_ADESIONENull = false;
				_iDOBJ_ADESIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_ADESIONENull
		{
			get
			{
				return _iDOBJ_ADESIONENull;
			}
			set
			{
				_iDOBJ_ADESIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_ADESIONESafe
		{
			get
			{
				if (IsIDOBJ_ADESIONENull)
					return -1;
				return IDOBJ_ADESIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_REGISTRO
		{
			get
			{
				if(IsIDOBJ_REGISTRONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_REGISTRO;
			}
			set
			{
				_iDOBJ_REGISTRONull = false;
				_iDOBJ_REGISTRO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_REGISTRONull
		{
			get
			{
				return _iDOBJ_REGISTRONull;
			}
			set
			{
				_iDOBJ_REGISTRONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_REGISTROSafe
		{
			get
			{
				if (IsIDOBJ_REGISTRONull)
					return -1;
				return IDOBJ_REGISTRO;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_LIQUIDAZIONE
		{
			get
			{
				if(IsIDOBJ_LIQUIDAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_LIQUIDAZIONE;
			}
			set
			{
				_iDOBJ_LIQUIDAZIONENull = false;
				_iDOBJ_LIQUIDAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_LIQUIDAZIONENull
		{
			get
			{
				return _iDOBJ_LIQUIDAZIONENull;
			}
			set
			{
				_iDOBJ_LIQUIDAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_LIQUIDAZIONESafe
		{
			get
			{
				if (IsIDOBJ_LIQUIDAZIONENull)
					return -1;
				return IDOBJ_LIQUIDAZIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_REVISIONE
		{
			get
			{
				if(IsIDOBJ_REVISIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_REVISIONE;
			}
			set
			{
				_iDOBJ_REVISIONENull = false;
				_iDOBJ_REVISIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_REVISIONENull
		{
			get
			{
				return _iDOBJ_REVISIONENull;
			}
			set
			{
				_iDOBJ_REVISIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_REVISIONESafe
		{
			get
			{
				if (IsIDOBJ_REVISIONENull)
					return -1;
				return IDOBJ_REVISIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_ASSEMBLEA
		{
			get
			{
				if(IsIDOBJ_ASSEMBLEANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_ASSEMBLEA;
			}
			set
			{
				_iDOBJ_ASSEMBLEANull = false;
				_iDOBJ_ASSEMBLEA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_ASSEMBLEANull
		{
			get
			{
				return _iDOBJ_ASSEMBLEANull;
			}
			set
			{
				_iDOBJ_ASSEMBLEANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_ASSEMBLEASafe
		{
			get
			{
				if (IsIDOBJ_ASSEMBLEANull)
					return -1;
				return IDOBJ_ASSEMBLEA;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_BASE_SOCIALE
		{
			get
			{
				if(IsIDOBJ_BASE_SOCIALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_BASE_SOCIALE;
			}
			set
			{
				_iDOBJ_BASE_SOCIALENull = false;
				_iDOBJ_BASE_SOCIALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_BASE_SOCIALENull
		{
			get
			{
				return _iDOBJ_BASE_SOCIALENull;
			}
			set
			{
				_iDOBJ_BASE_SOCIALENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_BASE_SOCIALESafe
		{
			get
			{
				if (IsIDOBJ_BASE_SOCIALENull)
					return -1;
				return IDOBJ_BASE_SOCIALE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_BILANCIO
		{
			get
			{
				if(IsIDOBJ_BILANCIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_BILANCIO;
			}
			set
			{
				_iDOBJ_BILANCIONull = false;
				_iDOBJ_BILANCIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_BILANCIONull
		{
			get
			{
				return _iDOBJ_BILANCIONull;
			}
			set
			{
				_iDOBJ_BILANCIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_BILANCIOSafe
		{
			get
			{
				if (IsIDOBJ_BILANCIONull)
					return -1;
				return IDOBJ_BILANCIO;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_CARICHE
		{
			get
			{
				if(IsIDOBJ_CARICHENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_CARICHE;
			}
			set
			{
				_iDOBJ_CARICHENull = false;
				_iDOBJ_CARICHE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_CARICHENull
		{
			get
			{
				return _iDOBJ_CARICHENull;
			}
			set
			{
				_iDOBJ_CARICHENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_CARICHESafe
		{
			get
			{
				if (IsIDOBJ_CARICHENull)
					return -1;
				return IDOBJ_CARICHE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_FALLIMENTO
		{
			get
			{
				if(IsIDOBJ_FALLIMENTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_FALLIMENTO;
			}
			set
			{
				_iDOBJ_FALLIMENTONull = false;
				_iDOBJ_FALLIMENTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_FALLIMENTONull
		{
			get
			{
				return _iDOBJ_FALLIMENTONull;
			}
			set
			{
				_iDOBJ_FALLIMENTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_FALLIMENTOSafe
		{
			get
			{
				if (IsIDOBJ_FALLIMENTONull)
					return -1;
				return IDOBJ_FALLIMENTO;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_PROCEDURA
		{
			get
			{
				if(IsIDOBJ_PROCEDURANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_PROCEDURA;
			}
			set
			{
				_iDOBJ_PROCEDURANull = false;
				_iDOBJ_PROCEDURA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_PROCEDURANull
		{
			get
			{
				return _iDOBJ_PROCEDURANull;
			}
			set
			{
				_iDOBJ_PROCEDURANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_PROCEDURASafe
		{
			get
			{
				if (IsIDOBJ_PROCEDURANull)
					return -1;
				return IDOBJ_PROCEDURA;
			}
		}

		/// <summary>
		/// Nome del file (con estensione)
		/// </summary>
		public System.String NOME_FILE
		{
			get
			{
				if(IsNOME_FILENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOME_FILE;
			}
			set
			{
				_nOME_FILENull = false;
				_nOME_FILE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOME_FILENull
		{
			get
			{
				return _nOME_FILENull;
			}
			set
			{
				_nOME_FILENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOME_FILESafe
		{
			get
			{
				if (IsNOME_FILENull)
					return System.String.Empty;
				return NOME_FILE;
			}
		}

		/// <summary>
		/// Dimensione
		/// </summary>
		public System.Int32 DIMENSIONE
		{
			get
			{
				if(IsDIMENSIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dIMENSIONE;
			}
			set
			{
				_dIMENSIONENull = false;
				_dIMENSIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDIMENSIONENull
		{
			get
			{
				return _dIMENSIONENull;
			}
			set
			{
				_dIMENSIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 DIMENSIONESafe
		{
			get
			{
				if (IsDIMENSIONENull)
					return -1;
				return DIMENSIONE;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// </summary>
		public System.Int32 IDOBJ_SANZIONE
		{
			get
			{
				if(IsIDOBJ_SANZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _iDOBJ_SANZIONE;
			}
			set
			{
				_iDOBJ_SANZIONENull = false;
				_iDOBJ_SANZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsIDOBJ_SANZIONENull
		{
			get
			{
				return _iDOBJ_SANZIONENull;
			}
			set
			{
				_iDOBJ_SANZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 IDOBJ_SANZIONESafe
		{
			get
			{
				if (IsIDOBJ_SANZIONENull)
					return -1;
				return IDOBJ_SANZIONE;
			}
		}

	}
}