//
//Generated by DELTADATOR\gs0445 at 27/07/2009 16.10.08
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCVRICERCALIQUIDAZIONI_COATTE
	/// </summary>
	public partial class GVCVRICERCALIQUIDAZIONI_COATTE
	{
		private System.String _s_DENOMINAZIONE;
		private System.Boolean _s_DENOMINAZIONENull = true;
		private System.Int32 _s_IDOBJ;
		private System.Int32 _r_IDOBJ;
		private System.Boolean _r_IDOBJNull = true;
		private System.String _r_NUMERO_REA;
		private System.Boolean _r_NUMERO_REANull = true;
		private System.Int32 _r_IDOBJ_STATO;
		private System.Boolean _r_IDOBJ_STATONull = true;
		private System.Int32 _lIQCOA_IDOBJ;
		private System.Boolean _lIQCOA_IDOBJNull = true;
		private System.Int32 _lIQCOA_IDOBJ_TIPO_LIQUIDAZIONE;
		private System.Boolean _lIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull = true;
		private System.Int32 _lIQCOA_PROCEDURA_CONCLUSA;
		private System.Boolean _lIQCOA_PROCEDURA_CONCLUSANull = true;
		private System.Int32 _lIQCOA_PROCEDURA_REVOCATA;
		private System.Boolean _lIQCOA_PROCEDURA_REVOCATANull = true;
		private System.Int32 _lIQCOA_DEPOSITO_BFL;
		private System.Boolean _lIQCOA_DEPOSITO_BFLNull = true;
		private System.DateTime _lIQCOA_DATA_INSOLVENZA;
		private System.Boolean _lIQCOA_DATA_INSOLVENZANull = true;
		private System.DateTime _lIQCOA_DATA_PUBBLICAZIONE;
		private System.Boolean _lIQCOA_DATA_PUBBLICAZIONENull = true;
		private System.DateTime _lIQCOA_DATA_DEPOSITO_RI;
		private System.Boolean _lIQCOA_DATA_DEPOSITO_RINull = true;
		private System.DateTime _lIQCOA_DATA_DELIBERA_GIUNTA;
		private System.Boolean _lIQCOA_DATA_DELIBERA_GIUNTANull = true;
		private System.String _lIQCOA_NUMERO_DELIBERA_GIUNTA;
		private System.Boolean _lIQCOA_NUMERO_DELIBERA_GIUNTANull = true;
		private System.DateTime _lIQCOA_DATA_DELIBERA;
		private System.Boolean _lIQCOA_DATA_DELIBERANull = true;
		private System.String _lIQCOA_NUMERO_DELIBERA;
		private System.Boolean _lIQCOA_NUMERO_DELIBERANull = true;
		private System.DateTime _lIQCOA_DATA_DETERMINA;
		private System.Boolean _lIQCOA_DATA_DETERMINANull = true;
		private System.String _lIQCOA_NUMERO_DETERMINA;
		private System.Boolean _lIQCOA_NUMERO_DETERMINANull = true;
		private System.String _lIQCOA_CODICE_UFFICIO;
		private System.Boolean _lIQCOA_CODICE_UFFICIONull = true;
		private System.Double _cREFIS_IDOBJ;
		private System.Boolean _cREFIS_IDOBJNull = true;
		private System.Int32 _cREFIS_IMPORTO;
		private System.Boolean _cREFIS_IMPORTONull = true;
		private System.DateTime _cREFIS_DATA_DELIBERA;
		private System.Boolean _cREFIS_DATA_DELIBERANull = true;
		private System.String _cREFIS_NUMERO_DELIBERA;
		private System.Boolean _cREFIS_NUMERO_DELIBERANull = true;
		private System.Int32 _cOMP_IDOBJ;
		private System.Boolean _cOMP_IDOBJNull = true;
		private System.Int32 _cOMP_IDOBJ_SOGGETTO;
		private System.Boolean _cOMP_IDOBJ_SOGGETTONull = true;
		private System.String _cOMP_NOME;
		private System.Boolean _cOMP_NOMENull = true;
		private System.Double _cOMP_TOTALE;
		private System.Boolean _cOMP_TOTALENull = true;
		private System.Double _cOMP_IVA;
		private System.Boolean _cOMP_IVANull = true;
		private System.Double _cOMP_CASSA;
		private System.Boolean _cOMP_CASSANull = true;
		private System.Double _cOMP_SPESE;
		private System.Boolean _cOMP_SPESENull = true;
		private System.Double _cOMP_COMPENSO;
		private System.Boolean _cOMP_COMPENSONull = true;
		private System.Double _cOMP_PERCENTUALE_IVA;
		private System.Boolean _cOMP_PERCENTUALE_IVANull = true;
		private System.Double _cOMP_PERCENTUALE_CNP;
		private System.Boolean _cOMP_PERCENTUALE_CNPNull = true;
		private System.Int32 _aUTO_IDOBJ;
		private System.Boolean _aUTO_IDOBJNull = true;
		private System.String _aUTO_NOTE;
		private System.Boolean _aUTO_NOTENull = true;
		private System.DateTime _aUTO_DATA_DETERMINA;
		private System.Boolean _aUTO_DATA_DETERMINANull = true;
		private System.String _aUTO_NUMERO_DETERMINA;
		private System.Boolean _aUTO_NUMERO_DETERMINANull = true;
		private System.DateTime _aUTO_DATA_DELIBERA;
		private System.Boolean _aUTO_DATA_DELIBERANull = true;
		private System.String _aUTO_NUMERO_DELIBERA;
		private System.Boolean _aUTO_NUMERO_DELIBERANull = true;
		private System.DateTime _aUTO_DATA_ISTANZA;
		private System.Boolean _aUTO_DATA_ISTANZANull = true;
		private System.String _aUTO_DESCRIZIONE;
		private System.Boolean _aUTO_DESCRIZIONENull = true;
		private System.Int32 _aUTO_IDOBJ_TIPO;
		private System.Boolean _aUTO_IDOBJ_TIPONull = true;
		private System.Int32 _rELSEM_IDOBJ;
		private System.Boolean _rELSEM_IDOBJNull = true;
		private System.String _rELSEM_NOTE;
		private System.Boolean _rELSEM_NOTENull = true;
		private System.DateTime _rELSEM_DATA_ESAME;
		private System.Boolean _rELSEM_DATA_ESAMENull = true;
		private System.DateTime _rELSEM_DATA_PARERE;
		private System.Boolean _rELSEM_DATA_PARERENull = true;
		private System.DateTime _rELSEM_DATA_RELAZIONE;
		private System.Boolean _rELSEM_DATA_RELAZIONENull = true;
		private System.Int32 _cOMPLIQ_IDOBJ;
		private System.Boolean _cOMPLIQ_IDOBJNull = true;
		private System.Double _cOMPLIQ_IMPORTO_SPESE;
		private System.Boolean _cOMPLIQ_IMPORTO_SPESENull = true;
		private System.DateTime _cOMPLIQ_DATA_MANDATO;
		private System.Boolean _cOMPLIQ_DATA_MANDATONull = true;
		private System.String _cOMPLIQ_NUMERO_MANDATO;
		private System.Boolean _cOMPLIQ_NUMERO_MANDATONull = true;
		private System.Int32 _cOMPLIQ_LIQUIDATO;
		private System.Boolean _cOMPLIQ_LIQUIDATONull = true;
		private System.DateTime _cOMPLIQ_DATA_DETERMINA;
		private System.Boolean _cOMPLIQ_DATA_DETERMINANull = true;
		private System.String _cOMPLIQ_NUMERO_DETERMINA;
		private System.Boolean _cOMPLIQ_NUMERO_DETERMINANull = true;
		private System.Double _cOMPLIQ_IMPORTO_CONTRIBUTO;
		private System.Boolean _cOMPLIQ_IMPORTO_CONTRIBUTONull = true;
		private System.Double _cOMPLIQ_IMPORTO_DETERMINATO;
		private System.Boolean _cOMPLIQ_IMPORTO_DETERMINATONull = true;
		private System.DateTime _cOMPLIQ_DATA_DOMANDA;
		private System.Boolean _cOMPLIQ_DATA_DOMANDANull = true;
		private System.String _aDESIONE_ASSOCIAZIONE;
		private System.Boolean _aDESIONE_ASSOCIAZIONENull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCVRICERCALIQUIDAZIONI_COATTE(){}

		/// <summary>
		/// Value of field S_DENOMINAZIONE
		/// </summary>
		public System.String S_DENOMINAZIONE
		{
			get
			{
				if(IsS_DENOMINAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _s_DENOMINAZIONE;
			}
			set
			{
				_s_DENOMINAZIONENull = false;
				_s_DENOMINAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsS_DENOMINAZIONENull
		{
			get
			{
				return _s_DENOMINAZIONENull;
			}
			set
			{
				_s_DENOMINAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String S_DENOMINAZIONESafe
		{
			get
			{
				if (IsS_DENOMINAZIONENull)
					return System.String.Empty;
				return S_DENOMINAZIONE;
			}
		}

		/// <summary>
		/// Value of field S_IDOBJ
		/// The field is mandatory.
		/// </summary>
		public System.Int32 S_IDOBJ
		{
			get
			{
				return _s_IDOBJ;
			}
			set
			{
				_s_IDOBJ = value;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ
		/// </summary>
		public System.Int32 R_IDOBJ
		{
			get
			{
				if(IsR_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ;
			}
			set
			{
				_r_IDOBJNull = false;
				_r_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJNull
		{
			get
			{
				return _r_IDOBJNull;
			}
			set
			{
				_r_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJSafe
		{
			get
			{
				if (IsR_IDOBJNull)
					return -1;
				return R_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field R_NUMERO_REA
		/// </summary>
		public System.String R_NUMERO_REA
		{
			get
			{
				if(IsR_NUMERO_REANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_NUMERO_REA;
			}
			set
			{
				_r_NUMERO_REANull = false;
				_r_NUMERO_REA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_NUMERO_REANull
		{
			get
			{
				return _r_NUMERO_REANull;
			}
			set
			{
				_r_NUMERO_REANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String R_NUMERO_REASafe
		{
			get
			{
				if (IsR_NUMERO_REANull)
					return System.String.Empty;
				return R_NUMERO_REA;
			}
		}

		/// <summary>
		/// Value of field R_IDOBJ_STATO
		/// </summary>
		public System.Int32 R_IDOBJ_STATO
		{
			get
			{
				if(IsR_IDOBJ_STATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _r_IDOBJ_STATO;
			}
			set
			{
				_r_IDOBJ_STATONull = false;
				_r_IDOBJ_STATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsR_IDOBJ_STATONull
		{
			get
			{
				return _r_IDOBJ_STATONull;
			}
			set
			{
				_r_IDOBJ_STATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 R_IDOBJ_STATOSafe
		{
			get
			{
				if (IsR_IDOBJ_STATONull)
					return -1;
				return R_IDOBJ_STATO;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_IDOBJ
		/// </summary>
		public System.Int32 LIQCOA_IDOBJ
		{
			get
			{
				if(IsLIQCOA_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_IDOBJ;
			}
			set
			{
				_lIQCOA_IDOBJNull = false;
				_lIQCOA_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_IDOBJNull
		{
			get
			{
				return _lIQCOA_IDOBJNull;
			}
			set
			{
				_lIQCOA_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LIQCOA_IDOBJSafe
		{
			get
			{
				if (IsLIQCOA_IDOBJNull)
					return -1;
				return LIQCOA_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_IDOBJ_TIPO_LIQUIDAZIONE
		/// </summary>
		public System.Int32 LIQCOA_IDOBJ_TIPO_LIQUIDAZIONE
		{
			get
			{
				if(IsLIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_IDOBJ_TIPO_LIQUIDAZIONE;
			}
			set
			{
				_lIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull = false;
				_lIQCOA_IDOBJ_TIPO_LIQUIDAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull
		{
			get
			{
				return _lIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull;
			}
			set
			{
				_lIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LIQCOA_IDOBJ_TIPO_LIQUIDAZIONESafe
		{
			get
			{
				if (IsLIQCOA_IDOBJ_TIPO_LIQUIDAZIONENull)
					return -1;
				return LIQCOA_IDOBJ_TIPO_LIQUIDAZIONE;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_PROCEDURA_CONCLUSA
		/// </summary>
		public System.Int32 LIQCOA_PROCEDURA_CONCLUSA
		{
			get
			{
				if(IsLIQCOA_PROCEDURA_CONCLUSANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_PROCEDURA_CONCLUSA;
			}
			set
			{
				_lIQCOA_PROCEDURA_CONCLUSANull = false;
				_lIQCOA_PROCEDURA_CONCLUSA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_PROCEDURA_CONCLUSANull
		{
			get
			{
				return _lIQCOA_PROCEDURA_CONCLUSANull;
			}
			set
			{
				_lIQCOA_PROCEDURA_CONCLUSANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LIQCOA_PROCEDURA_CONCLUSASafe
		{
			get
			{
				if (IsLIQCOA_PROCEDURA_CONCLUSANull)
					return -1;
				return LIQCOA_PROCEDURA_CONCLUSA;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_PROCEDURA_REVOCATA
		/// </summary>
		public System.Int32 LIQCOA_PROCEDURA_REVOCATA
		{
			get
			{
				if(IsLIQCOA_PROCEDURA_REVOCATANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_PROCEDURA_REVOCATA;
			}
			set
			{
				_lIQCOA_PROCEDURA_REVOCATANull = false;
				_lIQCOA_PROCEDURA_REVOCATA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_PROCEDURA_REVOCATANull
		{
			get
			{
				return _lIQCOA_PROCEDURA_REVOCATANull;
			}
			set
			{
				_lIQCOA_PROCEDURA_REVOCATANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LIQCOA_PROCEDURA_REVOCATASafe
		{
			get
			{
				if (IsLIQCOA_PROCEDURA_REVOCATANull)
					return -1;
				return LIQCOA_PROCEDURA_REVOCATA;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DEPOSITO_BFL
		/// </summary>
		public System.Int32 LIQCOA_DEPOSITO_BFL
		{
			get
			{
				if(IsLIQCOA_DEPOSITO_BFLNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DEPOSITO_BFL;
			}
			set
			{
				_lIQCOA_DEPOSITO_BFLNull = false;
				_lIQCOA_DEPOSITO_BFL = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DEPOSITO_BFLNull
		{
			get
			{
				return _lIQCOA_DEPOSITO_BFLNull;
			}
			set
			{
				_lIQCOA_DEPOSITO_BFLNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 LIQCOA_DEPOSITO_BFLSafe
		{
			get
			{
				if (IsLIQCOA_DEPOSITO_BFLNull)
					return -1;
				return LIQCOA_DEPOSITO_BFL;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_INSOLVENZA
		/// </summary>
		public System.DateTime LIQCOA_DATA_INSOLVENZA
		{
			get
			{
				if(IsLIQCOA_DATA_INSOLVENZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_INSOLVENZA;
			}
			set
			{
				_lIQCOA_DATA_INSOLVENZANull = false;
				_lIQCOA_DATA_INSOLVENZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_INSOLVENZANull
		{
			get
			{
				return _lIQCOA_DATA_INSOLVENZANull;
			}
			set
			{
				_lIQCOA_DATA_INSOLVENZANull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_PUBBLICAZIONE
		/// </summary>
		public System.DateTime LIQCOA_DATA_PUBBLICAZIONE
		{
			get
			{
				if(IsLIQCOA_DATA_PUBBLICAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_PUBBLICAZIONE;
			}
			set
			{
				_lIQCOA_DATA_PUBBLICAZIONENull = false;
				_lIQCOA_DATA_PUBBLICAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_PUBBLICAZIONENull
		{
			get
			{
				return _lIQCOA_DATA_PUBBLICAZIONENull;
			}
			set
			{
				_lIQCOA_DATA_PUBBLICAZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_DEPOSITO_RI
		/// </summary>
		public System.DateTime LIQCOA_DATA_DEPOSITO_RI
		{
			get
			{
				if(IsLIQCOA_DATA_DEPOSITO_RINull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_DEPOSITO_RI;
			}
			set
			{
				_lIQCOA_DATA_DEPOSITO_RINull = false;
				_lIQCOA_DATA_DEPOSITO_RI = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_DEPOSITO_RINull
		{
			get
			{
				return _lIQCOA_DATA_DEPOSITO_RINull;
			}
			set
			{
				_lIQCOA_DATA_DEPOSITO_RINull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_DELIBERA_GIUNTA
		/// </summary>
		public System.DateTime LIQCOA_DATA_DELIBERA_GIUNTA
		{
			get
			{
				if(IsLIQCOA_DATA_DELIBERA_GIUNTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_DELIBERA_GIUNTA;
			}
			set
			{
				_lIQCOA_DATA_DELIBERA_GIUNTANull = false;
				_lIQCOA_DATA_DELIBERA_GIUNTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_DELIBERA_GIUNTANull
		{
			get
			{
				return _lIQCOA_DATA_DELIBERA_GIUNTANull;
			}
			set
			{
				_lIQCOA_DATA_DELIBERA_GIUNTANull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_NUMERO_DELIBERA_GIUNTA
		/// </summary>
		public System.String LIQCOA_NUMERO_DELIBERA_GIUNTA
		{
			get
			{
				if(IsLIQCOA_NUMERO_DELIBERA_GIUNTANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_NUMERO_DELIBERA_GIUNTA;
			}
			set
			{
				_lIQCOA_NUMERO_DELIBERA_GIUNTANull = false;
				_lIQCOA_NUMERO_DELIBERA_GIUNTA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_NUMERO_DELIBERA_GIUNTANull
		{
			get
			{
				return _lIQCOA_NUMERO_DELIBERA_GIUNTANull;
			}
			set
			{
				_lIQCOA_NUMERO_DELIBERA_GIUNTANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String LIQCOA_NUMERO_DELIBERA_GIUNTASafe
		{
			get
			{
				if (IsLIQCOA_NUMERO_DELIBERA_GIUNTANull)
					return System.String.Empty;
				return LIQCOA_NUMERO_DELIBERA_GIUNTA;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_DELIBERA
		/// </summary>
		public System.DateTime LIQCOA_DATA_DELIBERA
		{
			get
			{
				if(IsLIQCOA_DATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_DELIBERA;
			}
			set
			{
				_lIQCOA_DATA_DELIBERANull = false;
				_lIQCOA_DATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_DELIBERANull
		{
			get
			{
				return _lIQCOA_DATA_DELIBERANull;
			}
			set
			{
				_lIQCOA_DATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_NUMERO_DELIBERA
		/// </summary>
		public System.String LIQCOA_NUMERO_DELIBERA
		{
			get
			{
				if(IsLIQCOA_NUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_NUMERO_DELIBERA;
			}
			set
			{
				_lIQCOA_NUMERO_DELIBERANull = false;
				_lIQCOA_NUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_NUMERO_DELIBERANull
		{
			get
			{
				return _lIQCOA_NUMERO_DELIBERANull;
			}
			set
			{
				_lIQCOA_NUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String LIQCOA_NUMERO_DELIBERASafe
		{
			get
			{
				if (IsLIQCOA_NUMERO_DELIBERANull)
					return System.String.Empty;
				return LIQCOA_NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_DATA_DETERMINA
		/// </summary>
		public System.DateTime LIQCOA_DATA_DETERMINA
		{
			get
			{
				if(IsLIQCOA_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_DATA_DETERMINA;
			}
			set
			{
				_lIQCOA_DATA_DETERMINANull = false;
				_lIQCOA_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_DATA_DETERMINANull
		{
			get
			{
				return _lIQCOA_DATA_DETERMINANull;
			}
			set
			{
				_lIQCOA_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_NUMERO_DETERMINA
		/// </summary>
		public System.String LIQCOA_NUMERO_DETERMINA
		{
			get
			{
				if(IsLIQCOA_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_NUMERO_DETERMINA;
			}
			set
			{
				_lIQCOA_NUMERO_DETERMINANull = false;
				_lIQCOA_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_NUMERO_DETERMINANull
		{
			get
			{
				return _lIQCOA_NUMERO_DETERMINANull;
			}
			set
			{
				_lIQCOA_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String LIQCOA_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsLIQCOA_NUMERO_DETERMINANull)
					return System.String.Empty;
				return LIQCOA_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field LIQCOA_CODICE_UFFICIO
		/// </summary>
		public System.String LIQCOA_CODICE_UFFICIO
		{
			get
			{
				if(IsLIQCOA_CODICE_UFFICIONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _lIQCOA_CODICE_UFFICIO;
			}
			set
			{
				_lIQCOA_CODICE_UFFICIONull = false;
				_lIQCOA_CODICE_UFFICIO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsLIQCOA_CODICE_UFFICIONull
		{
			get
			{
				return _lIQCOA_CODICE_UFFICIONull;
			}
			set
			{
				_lIQCOA_CODICE_UFFICIONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String LIQCOA_CODICE_UFFICIOSafe
		{
			get
			{
				if (IsLIQCOA_CODICE_UFFICIONull)
					return System.String.Empty;
				return LIQCOA_CODICE_UFFICIO;
			}
		}

		/// <summary>
		/// Value of field CREFIS_IDOBJ
		/// </summary>
		public System.Double CREFIS_IDOBJ
		{
			get
			{
				if(IsCREFIS_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cREFIS_IDOBJ;
			}
			set
			{
				_cREFIS_IDOBJNull = false;
				_cREFIS_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCREFIS_IDOBJNull
		{
			get
			{
				return _cREFIS_IDOBJNull;
			}
			set
			{
				_cREFIS_IDOBJNull = value;
			}
		}

		/// <summary>
		/// Value of field CREFIS_IMPORTO
		/// </summary>
		public System.Int32 CREFIS_IMPORTO
		{
			get
			{
				if(IsCREFIS_IMPORTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cREFIS_IMPORTO;
			}
			set
			{
				_cREFIS_IMPORTONull = false;
				_cREFIS_IMPORTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCREFIS_IMPORTONull
		{
			get
			{
				return _cREFIS_IMPORTONull;
			}
			set
			{
				_cREFIS_IMPORTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 CREFIS_IMPORTOSafe
		{
			get
			{
				if (IsCREFIS_IMPORTONull)
					return -1;
				return CREFIS_IMPORTO;
			}
		}

		/// <summary>
		/// Value of field CREFIS_DATA_DELIBERA
		/// </summary>
		public System.DateTime CREFIS_DATA_DELIBERA
		{
			get
			{
				if(IsCREFIS_DATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cREFIS_DATA_DELIBERA;
			}
			set
			{
				_cREFIS_DATA_DELIBERANull = false;
				_cREFIS_DATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCREFIS_DATA_DELIBERANull
		{
			get
			{
				return _cREFIS_DATA_DELIBERANull;
			}
			set
			{
				_cREFIS_DATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Value of field CREFIS_NUMERO_DELIBERA
		/// </summary>
		public System.String CREFIS_NUMERO_DELIBERA
		{
			get
			{
				if(IsCREFIS_NUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cREFIS_NUMERO_DELIBERA;
			}
			set
			{
				_cREFIS_NUMERO_DELIBERANull = false;
				_cREFIS_NUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCREFIS_NUMERO_DELIBERANull
		{
			get
			{
				return _cREFIS_NUMERO_DELIBERANull;
			}
			set
			{
				_cREFIS_NUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String CREFIS_NUMERO_DELIBERASafe
		{
			get
			{
				if (IsCREFIS_NUMERO_DELIBERANull)
					return System.String.Empty;
				return CREFIS_NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Value of field COMP_IDOBJ
		/// </summary>
		public System.Int32 COMP_IDOBJ
		{
			get
			{
				if(IsCOMP_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IDOBJ;
			}
			set
			{
				_cOMP_IDOBJNull = false;
				_cOMP_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IDOBJNull
		{
			get
			{
				return _cOMP_IDOBJNull;
			}
			set
			{
				_cOMP_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMP_IDOBJSafe
		{
			get
			{
				if (IsCOMP_IDOBJNull)
					return -1;
				return COMP_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field COMP_IDOBJ_SOGGETTO
		/// </summary>
		public System.Int32 COMP_IDOBJ_SOGGETTO
		{
			get
			{
				if(IsCOMP_IDOBJ_SOGGETTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IDOBJ_SOGGETTO;
			}
			set
			{
				_cOMP_IDOBJ_SOGGETTONull = false;
				_cOMP_IDOBJ_SOGGETTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IDOBJ_SOGGETTONull
		{
			get
			{
				return _cOMP_IDOBJ_SOGGETTONull;
			}
			set
			{
				_cOMP_IDOBJ_SOGGETTONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMP_IDOBJ_SOGGETTOSafe
		{
			get
			{
				if (IsCOMP_IDOBJ_SOGGETTONull)
					return -1;
				return COMP_IDOBJ_SOGGETTO;
			}
		}

		/// <summary>
		/// Value of field COMP_NOME
		/// </summary>
		public System.String COMP_NOME
		{
			get
			{
				if(IsCOMP_NOMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_NOME;
			}
			set
			{
				_cOMP_NOMENull = false;
				_cOMP_NOME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_NOMENull
		{
			get
			{
				return _cOMP_NOMENull;
			}
			set
			{
				_cOMP_NOMENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMP_NOMESafe
		{
			get
			{
				if (IsCOMP_NOMENull)
					return System.String.Empty;
				return COMP_NOME;
			}
		}

		/// <summary>
		/// Value of field COMP_TOTALE
		/// </summary>
		public System.Double COMP_TOTALE
		{
			get
			{
				if(IsCOMP_TOTALENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_TOTALE;
			}
			set
			{
				_cOMP_TOTALENull = false;
				_cOMP_TOTALE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_TOTALENull
		{
			get
			{
				return _cOMP_TOTALENull;
			}
			set
			{
				_cOMP_TOTALENull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_IVA
		/// </summary>
		public System.Double COMP_IVA
		{
			get
			{
				if(IsCOMP_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_IVA;
			}
			set
			{
				_cOMP_IVANull = false;
				_cOMP_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_IVANull
		{
			get
			{
				return _cOMP_IVANull;
			}
			set
			{
				_cOMP_IVANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_CASSA
		/// </summary>
		public System.Double COMP_CASSA
		{
			get
			{
				if(IsCOMP_CASSANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_CASSA;
			}
			set
			{
				_cOMP_CASSANull = false;
				_cOMP_CASSA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_CASSANull
		{
			get
			{
				return _cOMP_CASSANull;
			}
			set
			{
				_cOMP_CASSANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_SPESE
		/// </summary>
		public System.Double COMP_SPESE
		{
			get
			{
				if(IsCOMP_SPESENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_SPESE;
			}
			set
			{
				_cOMP_SPESENull = false;
				_cOMP_SPESE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_SPESENull
		{
			get
			{
				return _cOMP_SPESENull;
			}
			set
			{
				_cOMP_SPESENull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_COMPENSO
		/// </summary>
		public System.Double COMP_COMPENSO
		{
			get
			{
				if(IsCOMP_COMPENSONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_COMPENSO;
			}
			set
			{
				_cOMP_COMPENSONull = false;
				_cOMP_COMPENSO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_COMPENSONull
		{
			get
			{
				return _cOMP_COMPENSONull;
			}
			set
			{
				_cOMP_COMPENSONull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_PERCENTUALE_IVA
		/// </summary>
		public System.Double COMP_PERCENTUALE_IVA
		{
			get
			{
				if(IsCOMP_PERCENTUALE_IVANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_PERCENTUALE_IVA;
			}
			set
			{
				_cOMP_PERCENTUALE_IVANull = false;
				_cOMP_PERCENTUALE_IVA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_PERCENTUALE_IVANull
		{
			get
			{
				return _cOMP_PERCENTUALE_IVANull;
			}
			set
			{
				_cOMP_PERCENTUALE_IVANull = value;
			}
		}

		/// <summary>
		/// Value of field COMP_PERCENTUALE_CNP
		/// </summary>
		public System.Double COMP_PERCENTUALE_CNP
		{
			get
			{
				if(IsCOMP_PERCENTUALE_CNPNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMP_PERCENTUALE_CNP;
			}
			set
			{
				_cOMP_PERCENTUALE_CNPNull = false;
				_cOMP_PERCENTUALE_CNP = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMP_PERCENTUALE_CNPNull
		{
			get
			{
				return _cOMP_PERCENTUALE_CNPNull;
			}
			set
			{
				_cOMP_PERCENTUALE_CNPNull = value;
			}
		}

		/// <summary>
		/// Value of field AUTO_IDOBJ
		/// </summary>
		public System.Int32 AUTO_IDOBJ
		{
			get
			{
				if(IsAUTO_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_IDOBJ;
			}
			set
			{
				_aUTO_IDOBJNull = false;
				_aUTO_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_IDOBJNull
		{
			get
			{
				return _aUTO_IDOBJNull;
			}
			set
			{
				_aUTO_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 AUTO_IDOBJSafe
		{
			get
			{
				if (IsAUTO_IDOBJNull)
					return -1;
				return AUTO_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field AUTO_NOTE
		/// </summary>
		public System.String AUTO_NOTE
		{
			get
			{
				if(IsAUTO_NOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_NOTE;
			}
			set
			{
				_aUTO_NOTENull = false;
				_aUTO_NOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_NOTENull
		{
			get
			{
				return _aUTO_NOTENull;
			}
			set
			{
				_aUTO_NOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String AUTO_NOTESafe
		{
			get
			{
				if (IsAUTO_NOTENull)
					return System.String.Empty;
				return AUTO_NOTE;
			}
		}

		/// <summary>
		/// Value of field AUTO_DATA_DETERMINA
		/// </summary>
		public System.DateTime AUTO_DATA_DETERMINA
		{
			get
			{
				if(IsAUTO_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_DATA_DETERMINA;
			}
			set
			{
				_aUTO_DATA_DETERMINANull = false;
				_aUTO_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_DATA_DETERMINANull
		{
			get
			{
				return _aUTO_DATA_DETERMINANull;
			}
			set
			{
				_aUTO_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field AUTO_NUMERO_DETERMINA
		/// </summary>
		public System.String AUTO_NUMERO_DETERMINA
		{
			get
			{
				if(IsAUTO_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_NUMERO_DETERMINA;
			}
			set
			{
				_aUTO_NUMERO_DETERMINANull = false;
				_aUTO_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_NUMERO_DETERMINANull
		{
			get
			{
				return _aUTO_NUMERO_DETERMINANull;
			}
			set
			{
				_aUTO_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String AUTO_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsAUTO_NUMERO_DETERMINANull)
					return System.String.Empty;
				return AUTO_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field AUTO_DATA_DELIBERA
		/// </summary>
		public System.DateTime AUTO_DATA_DELIBERA
		{
			get
			{
				if(IsAUTO_DATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_DATA_DELIBERA;
			}
			set
			{
				_aUTO_DATA_DELIBERANull = false;
				_aUTO_DATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_DATA_DELIBERANull
		{
			get
			{
				return _aUTO_DATA_DELIBERANull;
			}
			set
			{
				_aUTO_DATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Value of field AUTO_NUMERO_DELIBERA
		/// </summary>
		public System.String AUTO_NUMERO_DELIBERA
		{
			get
			{
				if(IsAUTO_NUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_NUMERO_DELIBERA;
			}
			set
			{
				_aUTO_NUMERO_DELIBERANull = false;
				_aUTO_NUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_NUMERO_DELIBERANull
		{
			get
			{
				return _aUTO_NUMERO_DELIBERANull;
			}
			set
			{
				_aUTO_NUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String AUTO_NUMERO_DELIBERASafe
		{
			get
			{
				if (IsAUTO_NUMERO_DELIBERANull)
					return System.String.Empty;
				return AUTO_NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Value of field AUTO_DATA_ISTANZA
		/// </summary>
		public System.DateTime AUTO_DATA_ISTANZA
		{
			get
			{
				if(IsAUTO_DATA_ISTANZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_DATA_ISTANZA;
			}
			set
			{
				_aUTO_DATA_ISTANZANull = false;
				_aUTO_DATA_ISTANZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_DATA_ISTANZANull
		{
			get
			{
				return _aUTO_DATA_ISTANZANull;
			}
			set
			{
				_aUTO_DATA_ISTANZANull = value;
			}
		}

		/// <summary>
		/// Value of field AUTO_DESCRIZIONE
		/// </summary>
		public System.String AUTO_DESCRIZIONE
		{
			get
			{
				if(IsAUTO_DESCRIZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_DESCRIZIONE;
			}
			set
			{
				_aUTO_DESCRIZIONENull = false;
				_aUTO_DESCRIZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_DESCRIZIONENull
		{
			get
			{
				return _aUTO_DESCRIZIONENull;
			}
			set
			{
				_aUTO_DESCRIZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String AUTO_DESCRIZIONESafe
		{
			get
			{
				if (IsAUTO_DESCRIZIONENull)
					return System.String.Empty;
				return AUTO_DESCRIZIONE;
			}
		}

		/// <summary>
		/// Value of field AUTO_IDOBJ_TIPO
		/// </summary>
		public System.Int32 AUTO_IDOBJ_TIPO
		{
			get
			{
				if(IsAUTO_IDOBJ_TIPONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aUTO_IDOBJ_TIPO;
			}
			set
			{
				_aUTO_IDOBJ_TIPONull = false;
				_aUTO_IDOBJ_TIPO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsAUTO_IDOBJ_TIPONull
		{
			get
			{
				return _aUTO_IDOBJ_TIPONull;
			}
			set
			{
				_aUTO_IDOBJ_TIPONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 AUTO_IDOBJ_TIPOSafe
		{
			get
			{
				if (IsAUTO_IDOBJ_TIPONull)
					return -1;
				return AUTO_IDOBJ_TIPO;
			}
		}

		/// <summary>
		/// Value of field RELSEM_IDOBJ
		/// </summary>
		public System.Int32 RELSEM_IDOBJ
		{
			get
			{
				if(IsRELSEM_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rELSEM_IDOBJ;
			}
			set
			{
				_rELSEM_IDOBJNull = false;
				_rELSEM_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRELSEM_IDOBJNull
		{
			get
			{
				return _rELSEM_IDOBJNull;
			}
			set
			{
				_rELSEM_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 RELSEM_IDOBJSafe
		{
			get
			{
				if (IsRELSEM_IDOBJNull)
					return -1;
				return RELSEM_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field RELSEM_NOTE
		/// </summary>
		public System.String RELSEM_NOTE
		{
			get
			{
				if(IsRELSEM_NOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rELSEM_NOTE;
			}
			set
			{
				_rELSEM_NOTENull = false;
				_rELSEM_NOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRELSEM_NOTENull
		{
			get
			{
				return _rELSEM_NOTENull;
			}
			set
			{
				_rELSEM_NOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String RELSEM_NOTESafe
		{
			get
			{
				if (IsRELSEM_NOTENull)
					return System.String.Empty;
				return RELSEM_NOTE;
			}
		}

		/// <summary>
		/// Value of field RELSEM_DATA_ESAME
		/// </summary>
		public System.DateTime RELSEM_DATA_ESAME
		{
			get
			{
				if(IsRELSEM_DATA_ESAMENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rELSEM_DATA_ESAME;
			}
			set
			{
				_rELSEM_DATA_ESAMENull = false;
				_rELSEM_DATA_ESAME = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRELSEM_DATA_ESAMENull
		{
			get
			{
				return _rELSEM_DATA_ESAMENull;
			}
			set
			{
				_rELSEM_DATA_ESAMENull = value;
			}
		}

		/// <summary>
		/// Value of field RELSEM_DATA_PARERE
		/// </summary>
		public System.DateTime RELSEM_DATA_PARERE
		{
			get
			{
				if(IsRELSEM_DATA_PARERENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rELSEM_DATA_PARERE;
			}
			set
			{
				_rELSEM_DATA_PARERENull = false;
				_rELSEM_DATA_PARERE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRELSEM_DATA_PARERENull
		{
			get
			{
				return _rELSEM_DATA_PARERENull;
			}
			set
			{
				_rELSEM_DATA_PARERENull = value;
			}
		}

		/// <summary>
		/// Value of field RELSEM_DATA_RELAZIONE
		/// </summary>
		public System.DateTime RELSEM_DATA_RELAZIONE
		{
			get
			{
				if(IsRELSEM_DATA_RELAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _rELSEM_DATA_RELAZIONE;
			}
			set
			{
				_rELSEM_DATA_RELAZIONENull = false;
				_rELSEM_DATA_RELAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsRELSEM_DATA_RELAZIONENull
		{
			get
			{
				return _rELSEM_DATA_RELAZIONENull;
			}
			set
			{
				_rELSEM_DATA_RELAZIONENull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IDOBJ
		/// </summary>
		public System.Int32 COMPLIQ_IDOBJ
		{
			get
			{
				if(IsCOMPLIQ_IDOBJNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IDOBJ;
			}
			set
			{
				_cOMPLIQ_IDOBJNull = false;
				_cOMPLIQ_IDOBJ = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IDOBJNull
		{
			get
			{
				return _cOMPLIQ_IDOBJNull;
			}
			set
			{
				_cOMPLIQ_IDOBJNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMPLIQ_IDOBJSafe
		{
			get
			{
				if (IsCOMPLIQ_IDOBJNull)
					return -1;
				return COMPLIQ_IDOBJ;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_SPESE
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_SPESE
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_SPESENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_SPESE;
			}
			set
			{
				_cOMPLIQ_IMPORTO_SPESENull = false;
				_cOMPLIQ_IMPORTO_SPESE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_SPESENull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_SPESENull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_SPESENull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_MANDATO
		/// </summary>
		public System.DateTime COMPLIQ_DATA_MANDATO
		{
			get
			{
				if(IsCOMPLIQ_DATA_MANDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_MANDATO;
			}
			set
			{
				_cOMPLIQ_DATA_MANDATONull = false;
				_cOMPLIQ_DATA_MANDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_MANDATONull
		{
			get
			{
				return _cOMPLIQ_DATA_MANDATONull;
			}
			set
			{
				_cOMPLIQ_DATA_MANDATONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_NUMERO_MANDATO
		/// </summary>
		public System.String COMPLIQ_NUMERO_MANDATO
		{
			get
			{
				if(IsCOMPLIQ_NUMERO_MANDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_NUMERO_MANDATO;
			}
			set
			{
				_cOMPLIQ_NUMERO_MANDATONull = false;
				_cOMPLIQ_NUMERO_MANDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_NUMERO_MANDATONull
		{
			get
			{
				return _cOMPLIQ_NUMERO_MANDATONull;
			}
			set
			{
				_cOMPLIQ_NUMERO_MANDATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMPLIQ_NUMERO_MANDATOSafe
		{
			get
			{
				if (IsCOMPLIQ_NUMERO_MANDATONull)
					return System.String.Empty;
				return COMPLIQ_NUMERO_MANDATO;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_LIQUIDATO
		/// </summary>
		public System.Int32 COMPLIQ_LIQUIDATO
		{
			get
			{
				if(IsCOMPLIQ_LIQUIDATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_LIQUIDATO;
			}
			set
			{
				_cOMPLIQ_LIQUIDATONull = false;
				_cOMPLIQ_LIQUIDATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_LIQUIDATONull
		{
			get
			{
				return _cOMPLIQ_LIQUIDATONull;
			}
			set
			{
				_cOMPLIQ_LIQUIDATONull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.Int32 COMPLIQ_LIQUIDATOSafe
		{
			get
			{
				if (IsCOMPLIQ_LIQUIDATONull)
					return -1;
				return COMPLIQ_LIQUIDATO;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_DETERMINA
		/// </summary>
		public System.DateTime COMPLIQ_DATA_DETERMINA
		{
			get
			{
				if(IsCOMPLIQ_DATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_DETERMINA;
			}
			set
			{
				_cOMPLIQ_DATA_DETERMINANull = false;
				_cOMPLIQ_DATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_DETERMINANull
		{
			get
			{
				return _cOMPLIQ_DATA_DETERMINANull;
			}
			set
			{
				_cOMPLIQ_DATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_NUMERO_DETERMINA
		/// </summary>
		public System.String COMPLIQ_NUMERO_DETERMINA
		{
			get
			{
				if(IsCOMPLIQ_NUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_NUMERO_DETERMINA;
			}
			set
			{
				_cOMPLIQ_NUMERO_DETERMINANull = false;
				_cOMPLIQ_NUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_NUMERO_DETERMINANull
		{
			get
			{
				return _cOMPLIQ_NUMERO_DETERMINANull;
			}
			set
			{
				_cOMPLIQ_NUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String COMPLIQ_NUMERO_DETERMINASafe
		{
			get
			{
				if (IsCOMPLIQ_NUMERO_DETERMINANull)
					return System.String.Empty;
				return COMPLIQ_NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_CONTRIBUTO
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_CONTRIBUTO
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_CONTRIBUTONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_CONTRIBUTO;
			}
			set
			{
				_cOMPLIQ_IMPORTO_CONTRIBUTONull = false;
				_cOMPLIQ_IMPORTO_CONTRIBUTO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_CONTRIBUTONull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_CONTRIBUTONull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_CONTRIBUTONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_IMPORTO_DETERMINATO
		/// </summary>
		public System.Double COMPLIQ_IMPORTO_DETERMINATO
		{
			get
			{
				if(IsCOMPLIQ_IMPORTO_DETERMINATONull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_IMPORTO_DETERMINATO;
			}
			set
			{
				_cOMPLIQ_IMPORTO_DETERMINATONull = false;
				_cOMPLIQ_IMPORTO_DETERMINATO = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_IMPORTO_DETERMINATONull
		{
			get
			{
				return _cOMPLIQ_IMPORTO_DETERMINATONull;
			}
			set
			{
				_cOMPLIQ_IMPORTO_DETERMINATONull = value;
			}
		}

		/// <summary>
		/// Value of field COMPLIQ_DATA_DOMANDA
		/// </summary>
		public System.DateTime COMPLIQ_DATA_DOMANDA
		{
			get
			{
				if(IsCOMPLIQ_DATA_DOMANDANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _cOMPLIQ_DATA_DOMANDA;
			}
			set
			{
				_cOMPLIQ_DATA_DOMANDANull = false;
				_cOMPLIQ_DATA_DOMANDA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsCOMPLIQ_DATA_DOMANDANull
		{
			get
			{
				return _cOMPLIQ_DATA_DOMANDANull;
			}
			set
			{
				_cOMPLIQ_DATA_DOMANDANull = value;
			}
		}

		/// <summary>
		/// Value of field ADESIONE_ASSOCIAZIONE
		/// </summary>
		public System.String ADESIONE_ASSOCIAZIONE
		{
			get
			{
				if(IsADESIONE_ASSOCIAZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _aDESIONE_ASSOCIAZIONE;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = false;
				_aDESIONE_ASSOCIAZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsADESIONE_ASSOCIAZIONENull
		{
			get
			{
				return _aDESIONE_ASSOCIAZIONENull;
			}
			set
			{
				_aDESIONE_ASSOCIAZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String ADESIONE_ASSOCIAZIONESafe
		{
			get
			{
				if (IsADESIONE_ASSOCIAZIONENull)
					return System.String.Empty;
				return ADESIONE_ASSOCIAZIONE;
			}
		}

	}
}