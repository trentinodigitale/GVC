//
//Generated by DELTADATOR\GS0445 at 26/03/2009 9.03.13
//

using System;

namespace it.dedagroup.GVC.Repository.rtier.Service
{
	/// <summary>
	/// Description of GVCTAUTORIZZAZIONI
	/// </summary>
	public partial class GVCTAUTORIZZAZIONI
	{
		private System.Int32 _iDOBJ;
		private System.Int32 _iDOBJ_LIQUIDAZIONE;
		private System.Int32 _iDOBJ_TIPO;
		private System.String _dESCRIZIONE;
		private System.Boolean _dESCRIZIONENull = true;
		private System.DateTime _dATA_ISTANZA;
		private System.Boolean _dATA_ISTANZANull = true;
		private System.String _nUMERO_DELIBERA;
		private System.Boolean _nUMERO_DELIBERANull = true;
		private System.DateTime _dATA_DELIBERA;
		private System.Boolean _dATA_DELIBERANull = true;
		private System.String _nUMERO_DETERMINA;
		private System.Boolean _nUMERO_DETERMINANull = true;
		private System.DateTime _dATA_DETERMINA;
		private System.Boolean _dATA_DETERMINANull = true;
		private System.String _nOTE;
		private System.Boolean _nOTENull = true;
		private System.String _oPERATOREULTMOD;
		private System.Boolean _oPERATOREULTMODNull = true;
		private System.DateTime _dATAORAULTMOD;
		private System.Boolean _dATAORAULTMODNull = true;

		/// <summary>
		/// Default constructor
		/// </summary>
		public GVCTAUTORIZZAZIONI(){}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ
		{
			get
			{
				return _iDOBJ;
			}
			set
			{
				_iDOBJ = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_LIQUIDAZIONE
		{
			get
			{
				return _iDOBJ_LIQUIDAZIONE;
			}
			set
			{
				_iDOBJ_LIQUIDAZIONE = value;
			}
		}

		/// <summary>
		/// Identificativo del record
		/// The field is mandatory.
		/// </summary>
		public System.Int32 IDOBJ_TIPO
		{
			get
			{
				return _iDOBJ_TIPO;
			}
			set
			{
				_iDOBJ_TIPO = value;
			}
		}

		/// <summary>
		/// Descrizione
		/// </summary>
		public System.String DESCRIZIONE
		{
			get
			{
				if(IsDESCRIZIONENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dESCRIZIONE;
			}
			set
			{
				_dESCRIZIONENull = false;
				_dESCRIZIONE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDESCRIZIONENull
		{
			get
			{
				return _dESCRIZIONENull;
			}
			set
			{
				_dESCRIZIONENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String DESCRIZIONESafe
		{
			get
			{
				if (IsDESCRIZIONENull)
					return System.String.Empty;
				return DESCRIZIONE;
			}
		}

		/// <summary>
		/// Data istanza
		/// </summary>
		public System.DateTime DATA_ISTANZA
		{
			get
			{
				if(IsDATA_ISTANZANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_ISTANZA;
			}
			set
			{
				_dATA_ISTANZANull = false;
				_dATA_ISTANZA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_ISTANZANull
		{
			get
			{
				return _dATA_ISTANZANull;
			}
			set
			{
				_dATA_ISTANZANull = value;
			}
		}

		/// <summary>
		/// Numero delibera
		/// </summary>
		public System.String NUMERO_DELIBERA
		{
			get
			{
				if(IsNUMERO_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DELIBERA;
			}
			set
			{
				_nUMERO_DELIBERANull = false;
				_nUMERO_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DELIBERANull
		{
			get
			{
				return _nUMERO_DELIBERANull;
			}
			set
			{
				_nUMERO_DELIBERANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DELIBERASafe
		{
			get
			{
				if (IsNUMERO_DELIBERANull)
					return System.String.Empty;
				return NUMERO_DELIBERA;
			}
		}

		/// <summary>
		/// Data delibera
		/// </summary>
		public System.DateTime DATA_DELIBERA
		{
			get
			{
				if(IsDATA_DELIBERANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DELIBERA;
			}
			set
			{
				_dATA_DELIBERANull = false;
				_dATA_DELIBERA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DELIBERANull
		{
			get
			{
				return _dATA_DELIBERANull;
			}
			set
			{
				_dATA_DELIBERANull = value;
			}
		}

		/// <summary>
		/// Numero determina
		/// </summary>
		public System.String NUMERO_DETERMINA
		{
			get
			{
				if(IsNUMERO_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nUMERO_DETERMINA;
			}
			set
			{
				_nUMERO_DETERMINANull = false;
				_nUMERO_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNUMERO_DETERMINANull
		{
			get
			{
				return _nUMERO_DETERMINANull;
			}
			set
			{
				_nUMERO_DETERMINANull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NUMERO_DETERMINASafe
		{
			get
			{
				if (IsNUMERO_DETERMINANull)
					return System.String.Empty;
				return NUMERO_DETERMINA;
			}
		}

		/// <summary>
		/// Data determina
		/// </summary>
		public System.DateTime DATA_DETERMINA
		{
			get
			{
				if(IsDATA_DETERMINANull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATA_DETERMINA;
			}
			set
			{
				_dATA_DETERMINANull = false;
				_dATA_DETERMINA = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATA_DETERMINANull
		{
			get
			{
				return _dATA_DETERMINANull;
			}
			set
			{
				_dATA_DETERMINANull = value;
			}
		}

		/// <summary>
		/// Note
		/// </summary>
		public System.String NOTE
		{
			get
			{
				if(IsNOTENull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _nOTE;
			}
			set
			{
				_nOTENull = false;
				_nOTE = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsNOTENull
		{
			get
			{
				return _nOTENull;
			}
			set
			{
				_nOTENull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String NOTESafe
		{
			get
			{
				if (IsNOTENull)
					return System.String.Empty;
				return NOTE;
			}
		}

		/// <summary>
		/// Value of field OPERATOREULTMOD
		/// </summary>
		public System.String OPERATOREULTMOD
		{
			get
			{
				if(IsOPERATOREULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _oPERATOREULTMOD;
			}
			set
			{
				_oPERATOREULTMODNull = false;
				_oPERATOREULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsOPERATOREULTMODNull
		{
			get
			{
				return _oPERATOREULTMODNull;
			}
			set
			{
				_oPERATOREULTMODNull = value;
			}
		}

		/// <summary>
		///  This property is intend to use with string and integer fields 
		///  that can contain nullable values. 
		///  It is read only. 
		/// </summary>
		/// <returns>The value of the field or String.Empty/-1</returns>
		public System.String OPERATOREULTMODSafe
		{
			get
			{
				if (IsOPERATOREULTMODNull)
					return System.String.Empty;
				return OPERATOREULTMOD;
			}
		}

		/// <summary>
		/// Value of field DATAORAULTMOD
		/// </summary>
		public System.DateTime DATAORAULTMOD
		{
			get
			{
				if(IsDATAORAULTMODNull)
					throw new InvalidOperationException("Impossibile leggere il dato in quanto vale DBNull.");
				return _dATAORAULTMOD;
			}
			set
			{
				_dATAORAULTMODNull = false;
				_dATAORAULTMOD = value;
			}
		}

		/// <summary>
		/// Return true if field is null, otherwise false.
		/// </summary>
		public bool IsDATAORAULTMODNull
		{
			get
			{
				return _dATAORAULTMODNull;
			}
			set
			{
				_dATAORAULTMODNull = value;
			}
		}

	}
}